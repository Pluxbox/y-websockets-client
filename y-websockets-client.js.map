{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","node_modules/after/index.js","y-websockets-client.js","node_modules/arraybuffer.slice/index.js","node_modules/backo2/index.js","node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","node_modules/bindings/bindings.js","node_modules/blob/index.js","node_modules/bufferutil/fallback.js","node_modules/bufferutil/index.js","node_modules/component-bind/index.js","node_modules/component-emitter/index.js","node_modules/component-inherit/index.js","node_modules/debug/browser.js","node_modules/debug/debug.js","node_modules/engine.io-client/index.js","node_modules/engine.io-client/lib/index.js","node_modules/engine.io-client/lib/socket.js","node_modules/engine.io-client/lib/transport.js","node_modules/engine.io-client/lib/transports/index.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/xmlhttprequest.js","node_modules/engine.io-client/node_modules/component-emitter/index.js","node_modules/engine.io-parser/lib/browser.js","node_modules/engine.io-parser/lib/keys.js","node_modules/engine.io-parser/node_modules/has-binary/index.js","node_modules/has-binary/index.js","node_modules/has-cors/index.js","node_modules/indexof/index.js","node_modules/isarray/index.js","node_modules/json3/lib/json3.js","node_modules/ms/index.js","node_modules/options/lib/options.js","node_modules/parsejson/index.js","node_modules/parseqs/index.js","node_modules/parseuri/index.js","node_modules/socket.io-client/lib/index.js","node_modules/socket.io-client/lib/manager.js","node_modules/socket.io-client/lib/on.js","node_modules/socket.io-client/lib/socket.js","node_modules/socket.io-client/lib/url.js","node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/index.js","node_modules/socket.io-parser/is-buffer.js","node_modules/to-array/index.js","node_modules/ultron/index.js","node_modules/utf-8-validate/fallback.js","node_modules/utf-8-validate/index.js","node_modules/utf8/utf8.js","node_modules/ws/index.js","node_modules/ws/lib/BufferPool.js","node_modules/ws/lib/BufferUtil.fallback.js","node_modules/ws/lib/BufferUtil.js","node_modules/ws/lib/ErrorCodes.js","node_modules/ws/lib/Extensions.js","node_modules/ws/lib/PerMessageDeflate.js","node_modules/ws/lib/Receiver.hixie.js","node_modules/ws/lib/Receiver.js","node_modules/ws/lib/Sender.hixie.js","node_modules/ws/lib/Sender.js","node_modules/ws/lib/Validation.fallback.js","node_modules/ws/lib/Validation.js","node_modules/ws/lib/WebSocket.js","node_modules/ws/lib/WebSocketServer.js","node_modules/yeast/index.js","src/Websockets-client.js","../yjs/node_modules/asn1.js/lib/asn1.js","../yjs/node_modules/asn1.js/lib/asn1/api.js","../yjs/node_modules/asn1.js/lib/asn1/base/buffer.js","../yjs/node_modules/asn1.js/lib/asn1/base/index.js","../yjs/node_modules/asn1.js/lib/asn1/base/node.js","../yjs/node_modules/asn1.js/lib/asn1/base/reporter.js","../yjs/node_modules/asn1.js/lib/asn1/constants/der.js","../yjs/node_modules/asn1.js/lib/asn1/constants/index.js","../yjs/node_modules/asn1.js/lib/asn1/decoders/der.js","../yjs/node_modules/asn1.js/lib/asn1/decoders/index.js","../yjs/node_modules/asn1.js/lib/asn1/decoders/pem.js","../yjs/node_modules/asn1.js/lib/asn1/encoders/der.js","../yjs/node_modules/asn1.js/lib/asn1/encoders/index.js","../yjs/node_modules/asn1.js/lib/asn1/encoders/pem.js","../yjs/node_modules/assert/assert.js","../yjs/node_modules/base64-js/lib/b64.js","../yjs/node_modules/bn.js/lib/bn.js","../yjs/node_modules/brorand/index.js","../yjs/node_modules/browserify-aes/aes.js","../yjs/node_modules/browserify-aes/authCipher.js","../yjs/node_modules/browserify-aes/browser.js","../yjs/node_modules/browserify-aes/decrypter.js","../yjs/node_modules/browserify-aes/encrypter.js","../yjs/node_modules/browserify-aes/ghash.js","../yjs/node_modules/browserify-aes/modes.js","../yjs/node_modules/browserify-aes/modes/cbc.js","../yjs/node_modules/browserify-aes/modes/cfb.js","../yjs/node_modules/browserify-aes/modes/cfb1.js","../yjs/node_modules/browserify-aes/modes/cfb8.js","../yjs/node_modules/browserify-aes/modes/ctr.js","../yjs/node_modules/browserify-aes/modes/ecb.js","../yjs/node_modules/browserify-aes/modes/ofb.js","../yjs/node_modules/browserify-aes/streamCipher.js","../yjs/node_modules/browserify-cipher/browser.js","../yjs/node_modules/browserify-des/index.js","../yjs/node_modules/browserify-des/modes.js","../yjs/node_modules/browserify-rsa/index.js","../yjs/node_modules/browserify-sign/algos.js","../yjs/node_modules/browserify-sign/browser.js","../yjs/node_modules/browserify-sign/curves.js","../yjs/node_modules/browserify-sign/sign.js","../yjs/node_modules/browserify-sign/verify.js","../yjs/node_modules/browserify-zlib/src/binding.js","../yjs/node_modules/browserify-zlib/src/index.js","../yjs/node_modules/buffer-xor/index.js","../yjs/node_modules/buffer/index.js","../yjs/node_modules/buffer/node_modules/isarray/index.js","../yjs/node_modules/builtin-status-codes/browser.js","../yjs/node_modules/cipher-base/index.js","../yjs/node_modules/core-util-is/lib/util.js","../yjs/node_modules/create-ecdh/browser.js","../yjs/node_modules/create-hash/browser.js","../yjs/node_modules/create-hash/helpers.js","../yjs/node_modules/create-hash/md5.js","../yjs/node_modules/create-hmac/browser.js","../yjs/node_modules/crypto-browserify/index.js","../yjs/node_modules/des.js/lib/des.js","../yjs/node_modules/des.js/lib/des/cbc.js","../yjs/node_modules/des.js/lib/des/cipher.js","../yjs/node_modules/des.js/lib/des/des.js","../yjs/node_modules/des.js/lib/des/ede.js","../yjs/node_modules/des.js/lib/des/utils.js","../yjs/node_modules/diffie-hellman/browser.js","../yjs/node_modules/diffie-hellman/lib/dh.js","../yjs/node_modules/diffie-hellman/lib/generatePrime.js","../yjs/node_modules/diffie-hellman/lib/primes.json","../yjs/node_modules/elliptic/lib/elliptic.js","../yjs/node_modules/elliptic/lib/elliptic/curve/base.js","../yjs/node_modules/elliptic/lib/elliptic/curve/edwards.js","../yjs/node_modules/elliptic/lib/elliptic/curve/index.js","../yjs/node_modules/elliptic/lib/elliptic/curve/mont.js","../yjs/node_modules/elliptic/lib/elliptic/curve/short.js","../yjs/node_modules/elliptic/lib/elliptic/curves.js","../yjs/node_modules/elliptic/lib/elliptic/ec/index.js","../yjs/node_modules/elliptic/lib/elliptic/ec/key.js","../yjs/node_modules/elliptic/lib/elliptic/ec/signature.js","../yjs/node_modules/elliptic/lib/elliptic/eddsa/index.js","../yjs/node_modules/elliptic/lib/elliptic/eddsa/key.js","../yjs/node_modules/elliptic/lib/elliptic/eddsa/signature.js","../yjs/node_modules/elliptic/lib/elliptic/hmac-drbg.js","../yjs/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../yjs/node_modules/elliptic/lib/elliptic/utils.js","../yjs/node_modules/elliptic/package.json","../yjs/node_modules/events/events.js","../yjs/node_modules/evp_bytestokey/index.js","../yjs/node_modules/hash.js/lib/hash.js","../yjs/node_modules/hash.js/lib/hash/common.js","../yjs/node_modules/hash.js/lib/hash/hmac.js","../yjs/node_modules/hash.js/lib/hash/ripemd.js","../yjs/node_modules/hash.js/lib/hash/sha.js","../yjs/node_modules/hash.js/lib/hash/utils.js","../yjs/node_modules/https-browserify/index.js","../yjs/node_modules/ieee754/index.js","../yjs/node_modules/inherits/inherits_browser.js","../yjs/node_modules/is-buffer/index.js","../yjs/node_modules/miller-rabin/lib/mr.js","../yjs/node_modules/minimalistic-assert/index.js","../yjs/node_modules/pako/lib/utils/common.js","../yjs/node_modules/pako/lib/zlib/adler32.js","../yjs/node_modules/pako/lib/zlib/constants.js","../yjs/node_modules/pako/lib/zlib/crc32.js","../yjs/node_modules/pako/lib/zlib/deflate.js","../yjs/node_modules/pako/lib/zlib/inffast.js","../yjs/node_modules/pako/lib/zlib/inflate.js","../yjs/node_modules/pako/lib/zlib/inftrees.js","../yjs/node_modules/pako/lib/zlib/messages.js","../yjs/node_modules/pako/lib/zlib/trees.js","../yjs/node_modules/pako/lib/zlib/zstream.js","../yjs/node_modules/parse-asn1/aesid.json","../yjs/node_modules/parse-asn1/asn1.js","../yjs/node_modules/parse-asn1/fixProc.js","../yjs/node_modules/parse-asn1/index.js","../yjs/node_modules/path-browserify/index.js","../yjs/node_modules/pbkdf2/browser.js","../yjs/node_modules/process-nextick-args/index.js","../yjs/node_modules/process/browser.js","../yjs/node_modules/public-encrypt/browser.js","../yjs/node_modules/public-encrypt/mgf.js","../yjs/node_modules/public-encrypt/privateDecrypt.js","../yjs/node_modules/public-encrypt/publicEncrypt.js","../yjs/node_modules/public-encrypt/withPublic.js","../yjs/node_modules/public-encrypt/xor.js","../yjs/node_modules/punycode/punycode.js","../yjs/node_modules/querystring-es3/decode.js","../yjs/node_modules/querystring-es3/encode.js","../yjs/node_modules/querystring-es3/index.js","../yjs/node_modules/randombytes/browser.js","../yjs/node_modules/readable-stream/duplex.js","../yjs/node_modules/readable-stream/lib/_stream_duplex.js","../yjs/node_modules/readable-stream/lib/_stream_passthrough.js","../yjs/node_modules/readable-stream/lib/_stream_readable.js","../yjs/node_modules/readable-stream/lib/_stream_transform.js","../yjs/node_modules/readable-stream/lib/_stream_writable.js","../yjs/node_modules/readable-stream/passthrough.js","../yjs/node_modules/readable-stream/readable.js","../yjs/node_modules/readable-stream/transform.js","../yjs/node_modules/readable-stream/writable.js","../yjs/node_modules/ripemd160/lib/ripemd160.js","../yjs/node_modules/sha.js/hash.js","../yjs/node_modules/sha.js/index.js","../yjs/node_modules/sha.js/sha.js","../yjs/node_modules/sha.js/sha1.js","../yjs/node_modules/sha.js/sha224.js","../yjs/node_modules/sha.js/sha256.js","../yjs/node_modules/sha.js/sha384.js","../yjs/node_modules/sha.js/sha512.js","../yjs/node_modules/stream-browserify/index.js","../yjs/node_modules/stream-http/index.js","../yjs/node_modules/stream-http/lib/capability.js","../yjs/node_modules/stream-http/lib/request.js","../yjs/node_modules/stream-http/lib/response.js","../yjs/node_modules/string_decoder/index.js","../yjs/node_modules/url/url.js","../yjs/node_modules/url/util.js","../yjs/node_modules/util-deprecate/browser.js","../yjs/node_modules/util/support/isBufferBrowser.js","../yjs/node_modules/util/util.js","../yjs/node_modules/vm-browserify/index.js","../yjs/node_modules/xtend/immutable.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","after","count","callback","err_cb","proxy","err","result","bail","noop",2,"arraybuffer","start","end","bytes","byteLength","slice","ArrayBuffer","abv","Uint8Array","ii","buffer",3,"Backoff","opts","this","ms","min","max","factor","jitter","attempts","prototype","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter",4,"chars","encode","len","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","indexOf",5,"process","__filename","bindings","__proto__","defaults","module_root","getRoot","getFileName","path","extname","b","tries","join","apply","map","push","resolve","test","message","arrow","fs","dirname","exists","existsSync","env","NODE_BINDINGS_ARROW","compiled","NODE_BINDINGS_COMPILED_DIR","platform","arch","version","versions","node","try","calling_file","fileName","origPST","prepareStackTrace","origSTL","stackTraceLimit","dummy","st","captureStackTrace","stack","file","prev","dir","cwd","_process",6,"global","mapArrayBufferViews","ary","chunk","buf","copy","set","byteOffset","BlobBuilderConstructor","options","bb","BlobBuilder","append","getBlob","type","BlobConstructor","Blob","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","size","blobSupportsArrayBufferView","blobBuilderSupported","self","window",7,"BufferUtil","merge","mergedBuffer","buffers","offset","mask","source","output","num","maskNum","readUInt32LE","writeUInt32LE","unmask","data",8,"./fallback",9,"obj","fn","args","arguments","concat",10,"Emitter","mixin","key","on","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","listeners","hasListeners",11,"constructor",12,"useColors","document","documentElement","style","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","namespace","humanize","diff","c","color","Array","index","lastC","replace","log","Function","save","namespaces","storage","removeItem","debug","load","localstorage","localStorage","chrome","local","colors","formatters","j","v","JSON","stringify","enable","./debug",13,"selectColor","prevColor","disabled","enabled","curr","Date","prevTime","coerce","format","formatter","val","logFn","bind","split","skips","substr","names","disable","name",14,"./lib/",15,"parser","./socket","engine.io-parser",16,"Socket","uri","parseuri","hostname","host","secure","protocol","port","query","location","agent","parseqs","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","readyState","writeBuffer","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","undefined","freeGlobal","extraHeaders","Object","keys","open","clone","hasOwnProperty","parsejson","priorWebsocketSuccess","Transport","createTransport","EIO","transport","id","sid","socket","setTimeout","shift","setTransport","onDrain","packet","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","msg","upgrading","pause","cleanup","flush","freezeTransport","close","onerror","error","onTransportClose","onclose","onupgrade","to","onOpen","upgrades","onHandshake","setPing","filterUpgrades","pingInterval","pingTimeout","onHeartbeat","timeout","clearTimeout","pingTimeoutTimer","pingIntervalTimer","ping","sendPacket","prevBufferLen","writable","write","compress","cleanupAndClose","waitForUpgrade","reason","desc","filteredUpgrades","./transport","./transports","component-emitter","indexof",17,"description","doOpen","doClose","packets","onData","decodePacket",18,"polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","./polling-jsonp","./polling-xhr","./websocket","xmlhttprequest-ssl",19,"empty","JSONPPolling","Polling","___eio","script","inherit","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","doPoll","createElement","async","src","insertAt","getElementsByTagName","insertBefore","isUAgecko","body","appendChild","doWrite","complete","initIframe","html","iframeId","area","className","position","top","left","target","method","setAttribute","action","value","submit","attachEvent","onreadystatechange","onload","./polling","component-inherit",20,"Request","isBinary","create","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","responseType","withCredentials","hasXDR","onLoad","responseText","status","requestsCount","onSuccess","fromError","contentType","getResponseHeader","response","String","fromCharCode","ui8Arr","dataArray","idx","XDomainRequest",21,"hasXHR2","yeast","poll","onPause","total","decodePayload","callbackfn","encodePayload","schema","b64","ipv6","../transport",22,"WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","headers","ws","supports","binary","addEventListeners","onopen","onmessage","ev","done","encodePacket","Buffer",23,"hasCORS","ActiveXObject","has-cors",24,25,"encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","FileReader","readAsArrayBuffer","encodeBlob","dontSendBlobs","blob","each","next","eachWithIndex","el","hasBinary","sliceBuffer","base64encoder","utf8","isAndroid","isPhantomJS","pong","packetslist","utf8encode","encoded","readAsDataURL","b64data","typed","basic","btoa","utf8decode","charAt","decodeBase64Packet","Number","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","decodePayloadAsBinary","chr","ret","encodedPackets","totalLength","reduce","acc","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","lengthAry","bufferTail","numberTooLong","tailArray","msgLength","./keys","arraybuffer.slice","base64-arraybuffer","has-binary",26,"arr","has",27,"_hasBinary","isBuffer","File","isArray","toJSON","isarray",28,29,30,31,32,"runInContext","context","undef","isSupported","serialized","stringifySupported","isExtended","getClass","parse","parseSupported","root","SyntaxError","TypeError","nativeJSON","isProperty","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","property","members","original","parent","object","Properties","valueOf","isFunction","isConstructor","hasProperty","objectTypes","Escapes",92,34,"leadingZeroes","toPaddedString","width","unicodePrefix","quote","useCharIndex","symbols","charCode","serialize","properties","whitespace","indentation","date","time","hours","minutes","seconds","milliseconds","element","prefix","pop","filter","Index","Source","Unescapes",47,98,116,110,102,114,"lex","begin","isSigned","get","hasMembers","update","walk","isLoader","define","amd","function","freeExports","nodeType","previousJSON","isRestored","JSON3","noConflict",33,"str","exec","parseFloat","y","d","h","m","short","round","long","plural","ceil","Options","internalValues","values","defineProperty","configurable","enumerable","required","missing","read","filename","readFile","conf","readFileSync","isDefined","isDefinedAndNonNull","freeze",35,"rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight",36,"encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent",37,"re","parts","authority","ipv6uri",38,"lookup","io","parsed","url","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","Manager","managers","connect","./manager","./url","socket.io-parser",39,"subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","connecting","lastPing","encoding","packetBuffer","encoder","Encoder","decoder","Decoder","autoConnect","eio","emitAll","nsp","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","reconnecting","reconnect","skipReconnect","openSub","errorSub","timer","destroy","onping","onpong","ondata","add","ondecoded","onConnecting","processPacketQueue","pack","sub","disconnect","delay","onreconnect","attempt","./on","backo2","component-bind","engine.io-client",40,41,"json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","unshift","parserType","EVENT","BINARY_EVENT","flags","CONNECT","onpacket","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ERROR","ack","sent","emitBuffered","to-array",42,"loc","href",43,"isBuf","deconstructPacket","_deconstructPacket","placeholder","_placeholder","newData","packetData","attachments","reconstructPacket","_reconstructPacket","removeBlobs","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","bloblessData","./is-buffer",44,"encodeAsString","encodeAsBinary","writeEncoding","deconstruction","reconstructor","decodeString","types","BinaryReconstructor","reconPack","takeBinaryData","finishedReconstruction","binData","./binary","json3",45,46,"dup","list","array",48,"Ultron","ee","__ultron","remove","_events","listener",49,"Validation","isValidUTF8",50,51,"ucs2decode","string","extra","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","freeModule",52,"Server","Sender","Receiver","createServer","server","createConnection","address","client","./lib/Receiver","./lib/Sender","./lib/WebSocket","./lib/WebSocketServer",53,"BufferPool","initialSize","growStrategy","shrinkStrategy","_growStrategy","db","used","_shrinkStrategy","_buffer","_offset","_used","_changeFactor","__defineGetter__","newBuf","forceNewBuffer","util",54,55,"./BufferUtil.fallback","bufferutil",56,"isValidErrorCode",1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,57,"extensions","params","token","trim","paramsList","parsedParams","param","k",58,"PerMessageDeflate","isServer","_options","_isServer","_inflate","_deflate","zlib","AVAILABLE_WINDOW_BITS","DEFAULT_WINDOW_BITS","DEFAULT_MEM_LEVEL","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","normalizeParams","acceptAsServer","acceptAsClient","writeInProgress","pendingClose","accepted","some","decompress","fin","endpoint","maxWindowBits","createInflateRaw","windowBits","createDeflateRaw","Z_SYNC_FLUSH","memLevel",59,"state","EMPTY","messageEnd","spanLength","dead","ontext","onbinary","byte","BODY","BINARYLENGTH","BINARYBODY","doAdd","dataleft","outputIndex","bi","bl","lastBuffer","tail","terminate",60,"fragmentedPoolPrevUsed","fragmentedBufferPool","unfragmentedPoolPrevUsed","unfragmentedBufferPool","activeFragmentedOperation","lastFragment","masked","opcode","fragmentedOperation","overflow","headerBuffer","expectOffset","expectBuffer","expectHandler","currentMessage","messageHandlers","expectHeader","processPacket","processing","readUInt16BE","readUInt32BE","fastCopy","srcBuffer","dstBuffer","dstOffset","cloned","ErrorCodes","bufferUtil","dataLength","toRead","bufferForHandler","handler","fromOverflow","expectData","allocateFromPool","isFragmented","compressed","opcodes","endPacket","concatBuffers","protocolErrorCode","applyExtensions","messageBuffer","firstLength","getData","finish","./BufferPool","./BufferUtil","./ErrorCodes","./PerMessageDeflate","./Validation",61,"EventEmitter","continuationFrame","isClosed","inherits","lengthbytes","writeStartMarker","writeEndMarker",62,"_socket","firstFragment","writeUInt16BE","writeUInt32BE","getArrayBuffer","getRandomMask","dataBuffer","frameAndSend","finalFragment","compressFragment","maskData","canModifyData","dataOffset","secondByte","mergeBuffers","outputBuffer","_randomMask",63,64,"./Validation.fallback","utf-8-validate",65,"_ultron","_closeReceived","bytesReceived","initAsServerClient","initAsClient","MessageEvent","dataArg","CloseEvent","wasClean","OpenEvent","buildHostHeader","isSecure","headerHost","upgradeHead","protocolVersion","upgradeReq","CONNECTING","establishConnection","ReceiverHixie","SenderHixie","origin","localAddress","serverUrl","isUnixSocket","httpObj","https","http","auth","extensionsOffer","now","shasum","crypto","createHash","expectedServerKey","digest","requestOptions","Connection","Upgrade","Host","Sec-WebSocket-Version","Sec-WebSocket-Key","Authorization","header","Extensions","Agent","socketPath","pathname","Origin","cleanupWebsocketResources","res","statusCode","CLOSED","serverKey","serverProt","protList","protError","serverExtensions","ReceiverClass","SenderClass","firstHandler","called","ultron","realHandler","_receiver","setNoDelay","nextTick","errorCode","_sender","OPEN","startQueue","instance","_queue","executeQueueSends","queue","sendStream","stream","emitClose","_closeTimer","_closeCode","_closeMessage","closeTimeout","CLOSING","dontFailWhenClosed","resume","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","Float64Array","readable","Readable","Stream","final","amount","bufferSize","_listener","onMessage","./Extensions","./Receiver","./Receiver.hixie","./Sender","./Sender.hixie",66,"WebSocketServer","verifyClient","handleProtocols","noServer","disableHixie","clientTracking","_server","STATUS_CODES","writeHead","Content-Length","Content-Type","allowHalfOpen","listen","_closeServer","_webSocketPaths","head","handleUpgrade","clients","handleHybiUpgrade","errorHandler","abortConnection","completeHybiUpgrade2","acceptExtensions","completeHybiUpgrade1","callbackCalled","info","connection","authorized","encrypted","handleHixieUpgrade","onClientVerified","wshost","completeHandshake","nonce","k1","k2","md5","spaces","hashBuffer","handshakeBuffer","nonceLength","received","./WebSocket","tls",67,"alphabet","decoded","seed",68,"_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","extend","Y","Connector","_Y$AbstractConnector","joinRoom","room","userJoined","setUserId","receiveMessage","peer","userLeft","role","_this","getPrototypeOf","_createClass","_get","uid","AbstractConnector","defineProperties","props","descriptor","protoProps","staticProps","receiver","getOwnPropertyDescriptor","getter","socket.io-client",69,"asn1","bignum","base","constants","decoders","encoders","./asn1/api","./asn1/base","./asn1/constants","./asn1/decoders","./asn1/encoders","bn.js",70,"Entity","api","_createNamed","named","runInThisContext","entity","_initNamed","_getDecoder","enc","_getEncoder","reporter","../asn1","vm",71,"DecoderBuffer","Reporter","EncoderBuffer","item","restore","isEmpty","readUInt8","fail","skip","_reporterState","raw","out","../base",72,"Node","./buffer","./node","./reporter",73,"_baseState","children","tag","reverseArgs","choice","optional","any","use","useDecoder","explicit","implicit","_wrap","assert","tags","methods","overrided","stateProps","cstate","prop","_init","child","equal","_useArgs","arg","def","newKey","_decode","input","wrapResult","prevKey","present","enterKey","_peekTag","isError","_decodeGeneric","_decodeChoice","prevObj","enterObject","_decodeTag","leaveObject","leaveKey","_decodeList","_decodeStr","_decodeObjid","_decodeTime","_decodeNull","_decodeBool","_decodeInt","_getUse","_use","_createEncoderBuffer","_encode","_encodeValue","_skipDefault","content","primitive","_encodeChoice","_encodePrimitive","cls","_encodeComposite","_encodeStr","_encodeObjid","_encodeTime","_encodeNull","_encodeInt","_encodeBool","_isNumstr","_isPrintstr","minimalistic-assert",74,"errors","ReporterError","rethrow","pathLen","inherited","elem","partial",75,"tagClass",0,"tagClassByName","_reverse","tagByName","../constants",76,"der","./der",77,"DERDecoder","tree","DERNode","derDecodeTag","oct","tagStr","derDecodeLen","decodedTag","_skipUntilEnd","possibleEnd","unused","numstr","printstr","relative","identifiers","ident","subident","first","second","mon","day","hour","sec","UTC","../../asn1",78,"pem","./pem",79,"PEMDecoder","lines","label",80,"DEREncoder","two","encodeTag","encodedTag","lenOctets","objid","getFullYear","numArray","sign","defaultBuffer",81,82,"PEMEncoder",83,"replacer","isUndefined","isNumber","isFinite","isRegExp","truncate","getMessage","actual","operator","expected","stackStartFunction","AssertionError","ok","_deepEqual","isDate","getTime","multiline","lastIndex","ignoreCase","isObject","objEquiv","isArguments","isNullOrUndefined","isPrimitive","aIsArgs","bIsArgs","pSlice","ka","objectKeys","kb","sort","expectedException","_throws","shouldThrow","block","hasOwn","generatedMessage","fn_name","next_line","notEqual","deepEqual","notDeepEqual","strictEqual","notStrictEqual","doesNotThrow","ifError","util/",84,"elt","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","L","placeHolders","Arr","uint8ToBase64","uint8","tripletToBase64","temp","extraBytes","toByteArray","fromByteArray","base64js",85,"ctor","superCtor","super_","TempCtor","BN","number","endian","words","negative","red","parseHex","parseBase","mul","toBitArray","w","bitLength","bit","wbit","smallMulTo","lo","carry","ncarry","rword","maxJ","strip","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","MPrime","iushln","isub","_tmp","K256","P224","P192","P25519","Red","prime","_prime","Mont","r2","imod","sqr","rinv","_invmp","minv","isubn","div","umod","wordSize","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","limbLen","limbPow","mod","word","imuln","_iaddn","dest","_normSign","inspect","zeros","groupSizes","groupBases","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","isNeg","neg","ineg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","inotn","bytesNeeded","bitsLeft","notn","setn","iadd","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","ie","ro","rx","guessLen13b","odd","conjugate","normalize13b","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","isqr","bits","carryMask","newCarry","ishln","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","testn","imaskn","maskn","iaddn","addn","subn","iabs","abs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","qj","divmod","positive","divn","divRound","dm","half","egcd","A","B","C","D","g","isEven","yp","xp","gcd","x1","x2","delta","cmpn","invm","isOdd","bincn","ucmp","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","ushl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","ireduce","rlen","imulK","outLen","shl","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont",86,"Rand","generate","_rand","getRandomValues","msCrypto","randomBytes","getByte",87,88,"fixup_uint32","x_pos","uint_max","scrub_vec","Global","SBOX","INV_SBOX","SUB_MIX","INV_SUB_MIX","init","RCON","bufferToArray","AES","_key","_doReset","sx","x4","x8","xi","_i","_results","G","blockSize","keySize","invKsRow","keyWords","ksRow","ksRows","_nRounds","_keySchedule","_invKeySchedule","encryptBlock","M","_doCryptBlock","decryptBlock","scrub","keySchedule","s0","s1","s2","s3","t0","t1","t2","t3",89,"StreamCipher","iv","decrypt","Transform","_finID","_cipher","aes","_prev","_cache","_secCache","_decrypt","_alen","_len","_mode","fill","_ghash","GHASH","_authTag","_called","xorTest","_update","rump","encrypt","_final","getAuthTag","setAuthTag","setAAD","./aes","./ghash","buffer-xor","cipher-base",90,"getCiphers","modes","createCipher","Cipher","createCipheriv","Cipheriv","deciphers","createDecipher","Decipher","createDecipheriv","Decipheriv","listCiphers","./decrypter","./encrypter","./modes",91,"Splitter","_last","_autopadding","unpad","last","padded","suite","password","config","modelist","AuthCipher","ebtk","thing","setAutoPadding","setTo","autoPadding","ECB","CBC","CFB","CFB8","CFB1","OFB","CTR","GCM","./authCipher","./modes/cbc","./modes/cfb","./modes/cfb1","./modes/cfb8","./modes/ctr","./modes/ecb","./modes/ofb","./streamCipher","evp_bytestokey","padBuff","writeUInt8",93,"fromArray","ghash","_multiply","lsb_Vi","Vi","Zi","abl",94,"cipher",95,"pad",96,"encryptStart",97,"encryptByte","byteParam","shiftIn",99,"incr32","getBlock",100,101,103,"keyLen","ivLen","aesModes","desModes","DES","browserify-aes/browser","browserify-aes/modes","browserify-des","browserify-des/modes",104,"CipherBase","modeName","_des","des","des-ede3-cbc","instantiate","EDE","des-ede3","des-ede-cbc","des-ede","des-cbc","des-ecb","des3","des.js",105,106,"blind","priv","getr","blinder","bn","modulus","publicExponent","unblinder","crt","blinds","blinded","c1","prime1","c2","prime2","qinv","coefficient","m1","exponent1","m2","exponent2","randombytes",107,"sha224WithRSAEncryption","hash","sha256WithRSAEncryption","sha384WithRSAEncryption","sha512WithRSAEncryption","DSA","ripemd160WithRSA","md5WithRSAEncryption",108,"Sign","algorithm","Writable","algos","_hashType","_hash","_tag","_signType","Verify","createSign","createVerify","_algos","verify","_write","sig","./algos","./sign","./verify","create-hash",109,"hashType","signType","parseKeys","curve","ecSign","dsaSign","curveId","curves","EC","genKeyPair","_importPrivate","privateKey","toDER","algo","priv_key","H","bits2int","kv","getKey","makeKey","makeR","hlen","hbits","bits2octets","createHmac","obits","elliptic","ec","./curves","browserify-rsa","create-hmac","parse-asn1",111,"pub","ecVerify","dsaVerify","padNum","pubkey","subjectPrivateKey","pub_key","unpacked","signature","checkValue","montp",112,"Zlib","DEFLATE","UNZIP","init_done","write_in_progress","pending_close","level","strategy","dictionary","bufferSet","zstream","zlib_deflate","zlib_inflate","NONE","INFLATE","GZIP","GUNZIP","DEFLATERAW","INFLATERAW","strm","deflateInit2","Z_DEFLATED","inflateInit2","Z_OK","_error","_writeCheck","in_off","in_len","out_off","out_len","writeSync","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","_set","avail_in","next_in","avail_out","next_out","deflate","inflate","Z_STREAM_END","deflateEnd","inflateEnd","deflateReset","inflateReset","pako/lib/zlib/constants","pako/lib/zlib/deflate.js","pako/lib/zlib/inflate.js","pako/lib/zlib/messages","pako/lib/zlib/zstream",113,"zlibBuffer","flow","nread","onEnd","zlibBufferSync","flushFlag","binding","_processChunk","Deflate","Inflate","Gzip","Gunzip","DeflateRaw","InflateRaw","Unzip","_opts","_chunkSize","chunkSize","Z_DEFAULT_CHUNK","_flushFlag","Z_MIN_CHUNK","Z_MAX_CHUNK","Z_MIN_WINDOWBITS","Z_MAX_WINDOWBITS","Z_MIN_LEVEL","Z_MAX_LEVEL","Z_MIN_MEMLEVEL","Z_MAX_MEMLEVEL","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","_binding","_hadError","errno","codes","Z_DEFAULT_COMPRESSION","Z_DEFAULT_WINDOWBITS","Z_DEFAULT_MEMLEVEL","_closed","_level","_strategy","Z_DEFAULT_LEVEL","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_VERSION_ERROR","createDeflate","createInflate","createGzip","createGunzip","createUnzip","deflateSync","gzip","gzipSync","deflateRaw","deflateRawSync","unzip","unzipSync","inflateSync","gunzip","gunzipSync","inflateRaw","inflateRawSync","RangeError","_flush","_transform","kind","_writableState","ended","ending","needDrain","availInAfter","availOutAfter","have","availOutBefore","inOff","availInBefore","newReq","er","./binding","_stream_transform",115,"typedArraySupport","Bar","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","fromNumber","fromString","fromObject","that","allocate","checked","fromBuffer","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","_augment","_isBuffer","fromPool","poolSize","rootParent","SlowBuffer","subject","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","hexWrite","remaining","strLen","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","firstByte","bytesPerSequence","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","toHex","checkOffset","ext","checkInt","objectWriteUInt16","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","leadSurrogate","dst","INSPECT_MAX_BYTES","compare","isEncoding","pos","equals","arrayIndexOf","foundIndex","swap","_arr","sliceLen","readUIntLE","readUIntBE","readUInt16LE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt16LE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","toArrayBuffer","BP","toLocaleString","base64-js",117,118,"200","201","202","203","204","205","206","207","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","422","423","424","425","426","428","429","431","500","501","502","503","504","505","506","507","509","510","511",119,"hashMode","_finalOrDigest","_decoder","_encoding","StringDecoder","inputEnc","outputEnc","outData","_toString","string_decoder",120,"objectToString","isBoolean","isNull","isSymbol","../../is-buffer/index.js",121,"ECDH","curveType","aliases","formatReturnValue","secp256k1","secp224r1","prime256v1","prime192v1","ed25519","secp384r1","secp521r1","p256","secp256r1","secp192r1","p384","p521","generateKeys","getPublicKey","computeSecret","other","inenc","otherPub","keyFromPublic","getPublic","getPrivate","getX","getPrivateKey","setPublicKey","_importPublic","setPrivateKey","_priv",122,"HashNoConstructor","Base","Hash","rmd160","sha","alg","./md5","ripemd160","sha.js",123,"bigEndian","intSize","zeroBuffer","toBuffer","hashSize","chrsz",124,"core_md5","olda","oldb","oldc","oldd","md5_ff","md5_gg","md5_hh","md5_ii","safe_add","md5_cmn","bit_rol","lsw","msw","cnt","helpers","./helpers",125,"Hmac","blocksize","_alg","ZEROS","ipad","_ipad","opad","_opad","create-hash/browser",126,"rng","pseudoRandomBytes","prng","hashes","getHashes","pbkdf2","pbkdf2Sync","dh","createECDH","publicEncrypt","browserify-cipher","browserify-sign","browserify-sign/algos","create-ecdh","diffie-hellman","public-encrypt",127,"utils","./des/cbc","./des/cipher","./des/des","./des/ede","./des/utils",128,"CBCState","_cbcInit","proto","_cbcState","inp","outOff","superProto",129,"bufferOff","_updateDecrypt","_updateEncrypt","_flushBuffer","inputOff","outputOff","_finalEncrypt","_finalDecrypt","_pad","_unpad",130,"DESState","_desState","deriveKeys","shiftTable","kL","kR","pc1","r28shl","pc2","ip","_encrypt","lStart","rStart","keyL","keyR","expand","substitute","rip","../des",131,"EDEState","k3","_edeState",132,"inL","inR","outL","outR","pc2table","sTable","sb","permuteTable","padSplit","group",133,"getDiffieHellman","gen","DH","createDiffieHellman","generator","genc","generatePrime","DiffieHellmanGroup","createDiffieHellmanGroup","DiffieHellman","./lib/dh","./lib/generatePrime","./lib/primes",134,"_pub","checkPrime","hex","primeCache","simpleSieve","fermatTest","millerRabin","rem","TWENTYFOUR","ELEVEN","TEN","THREE","SEVEN","malleable","setGenerator","__prime","_primeLen","_primeCode","MillerRabin","__gen","_gen","secret","getPrime","front","getGenerator","./generatePrime","miller-rabin",135,"_getPrimes","TWO","findPrime","n2","ONE","FIVE","FOUR",136,"modp1","modp2","modp5","modp14","modp15","modp16","modp17","modp18",137,"hmacDRBG","eddsa","../package.json","./elliptic/curve","./elliptic/curves","./elliptic/ec","./elliptic/eddsa","./elliptic/hmac-drbg","./elliptic/utils","brorand",138,"BaseCurve","zero","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","BasePoint","precomputed","getNAF","getJSF","point","validate","_fixedNafMul","doubles","_getDoubles","naf","I","step","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","wndWidth","comb","toJ","jsf","ja","jb","eq","decodePoint","pointFromX","encodeCompressed","compact","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","../../elliptic",139,"EdwardsCurve","twisted","mOneA","dd","oneC","Point","zOne","_mulA","_mulC","rhs","lhs","pointFromY","y2","isInfinity","normalize","fromJSON","_extDbl","nx","ny","nt","nz","_projDbl","_extAdd","_projAdd","mulAdd","zi","../curve",140,"edwards","./base","./edwards","./mont","./short",141,"MontCurve","i4","a24","aa","diffAdd","da",142,"ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","isRed","inf","JPoint","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","l1","l2","prevR","aprxSqrt","y1","len1","len2","_endoSplit","v1","v2","p1","p2","q1","q2","ax","_endoWnafMulAdd","npoints","ncoeffs","pre","endoMul","obj2point","ys1","dyinv","_precompute","negate","zinv","zinv2","ay","pz2","z2","u1","u2","h2","h3","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","yyu4","kbase","z3","pz3",143,"PresetCurve","defineCurve","sha256","sha384","sha512","../elliptic","./precomputed/secp256k1","hash.js",144,"nh","KeyPair","Signature","keyPair","keyFromPrivate","fromPrivate","fromPublic","drbg","pers","entropy","hmacStrength","ns2","_truncateToN","truncOnly","bkey","ns1","kp","kpX","recoveryParam","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","eNeg","rInv","getKeyRecoveryParam","Q","Qprime","./key","./signature",145,"privEnc","pubEnc","derive",146,"_importDER","Position","place","getLength","initial","octetLen","rmPadding","constructLength","octets","LN2","slen","backHalf",147,"EDDSA","pointClass","encodingLength","parseBytes","keyFromSecret","hashInt","messagePrefix","R","Rencoded","encodePoint","s_","pubBytes","S","makeSignature","SG","RplusAh","intFromLE","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","isPoint",148,"_secret","_pubBytes","cachedProperty","privBytes","getSecret",149,"_R","_S","_Rencoded","_Sencoded","Sencoded","toBytes",150,"HmacDRBG","predResist","outSize","minEntropy","reseed","reseedInterval","K","V","entropyEnc","nonceEnc","persEnc","_hmac","hmac","kmac","addEnc",151,152,"zero2","d1","d2","m14","m24","m8","computer",153,"_args","_from","_id","_inCache","_installable","_location","_nodeVersion","_npmUser","email","_npmVersion","_phantomChildren","_requested","rawSpec","scope","spec","_requiredBy","_resolved","_shasum","_shrinkwrap","_spec","_where","author","bugs","dependencies","devDependencies","browserify","coveralls","istanbul","jscs","jshint","mocha","uglify-js","directories","dist","tarball","files","gitHead","homepage","keywords","license","main","maintainers","optionalDependencies","readme","repository","scripts",154,"_maxListeners","defaultMaxListeners","setMaxListeners","addListener","newListener","warned","trace","fired","listenerCount","evlistener","emitter",155,"EVP_BytesToKey","salt","md_buf","ki","addmd","bufs","create-hash/md5",156,"common","ripemd","sha1","sha224","./hash/common","./hash/hmac","./hash/ripemd","./hash/sha","./hash/utils",157,"BlockHash","pending","pendingTotal","padLength","_delta8","_delta32","join32","_digest","../hash",158,"inner","outer",159,"RIPEMD160","Kh","rotl32","sum32","sum32_3","sum32_4","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","toHex32","split32",160,"SHA256","sha256_K","W","SHA224","SHA512","sha512_K","SHA384","SHA1","ch32","maj32","p32","s0_256","rotr32","s1_256","g0_256","g1_256","ft_1","ch64_hi","xh","xl","yh","yl","zh","zl","ch64_lo","maj64_hi","maj64_lo","s0_512_hi","c0_hi","rotr64_hi","c1_hi","c2_hi","s0_512_lo","c0_lo","rotr64_lo","c1_lo","c2_lo","s1_512_hi","s1_512_lo","g0_512_hi","shr64_hi","g0_512_lo","shr64_lo","g1_512_hi","g1_512_lo","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha1_K","T1","T2","_prepareBlock","c3_hi","c3_lo","ah","al","bh","ch","cl","dl","eh","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo",161,"htonl","zero8","cond",162,"scheme",163,"isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt",164,165,166,167,168,"rone","n1","rn1","getDivisor",169,170,"TYPED_OK","assign","sources","shrinkBuf","fnTyped","arraySet","src_offs","dest_offs","flattenChunks","chunks","fnUntyped","setTyped","Buf8","Buf16","Buf32",171,"adler32","adler",172,"Z_TREES","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_BINARY","Z_TEXT","Z_UNKNOWN",173,"makeTable","crc32","crc","crcTable",174,"rank","flush_pending","pending_buf","pending_out","total_out","flush_block_only","trees","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","w_size","MIN_LOOKAHEAD","_win","wmask","w_mask","strend","MAX_MATCH","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","insert","MIN_MATCH","ins_h","hash_shift","hash_mask","deflate_stored","max_block_size","pending_buf_size","BS_NEED_MORE","max_start","BS_FINISH_STARTED","BS_FINISH_DONE","deflate_fast","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","BS_BLOCK_DONE","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","lm_init","configuration_table","max_lazy","good_length","nice_length","max_chain","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","D_CODES","bl_tree","BL_CODES","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","L_CODES","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","INIT_STATE","BUSY_STATE","_tr_init","deflateSetHeader","MAX_MEM_LEVEL","deflateInit","MAX_WBITS","DEF_MEM_LEVEL","old_flush","beg","FINISH_STATE","text","hcrc","comment","os","EXTRA_STATE","OS_CODE","level_flags","PRESET_DICT","NAME_STATE","COMMENT_STATE","HCRC_STATE","bstate","func","_tr_align","_tr_stored_block","LENGTH_CODES","LITERALS","Config","deflateInfo","../utils/common","./adler32","./crc32","./messages","./trees",175,"BAD","TYPE","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane",176,"ZSWAP32","InflateState","havedict","wbits","ncode","nlen","ndist","lens","work","lendyn","distdyn","back","was","inflateResetKeep","HEAD","ENOUGH_LENS","ENOUGH_DISTS","inflateReset2","inflateInit","DEF_WBITS","fixedtables","virgin","sym","lenfix","distfix","inflate_table","LENS","DISTS","updatewindow","put","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","order","TYPEDO","inf_leave","FLAGS","DICTID","TIME","OS","xflags","EXLEN","extra_len","EXTRA","NAME","COMMENT","HCRC","DICT","CHECK","STORED","LEN_","TABLE","COPY_","COPY","LENLENS","CODES","CODELENS","LEN","inflate_fast","LIT","LENEXT","DIST","DISTEXT","MATCH","LENGTH","DONE","MEM","SYNC","inflateGetHeader","inflateInfo","./inffast","./inftrees",177,"MAXBITS","lbase","lext","dbase","dext","lens_index","table_index","incr","low","drop","huff","base_index","offs","extra_index",178,"-1","-2","-3","-4","-5","-6",179,"d_code","_dist_code","put_short","send_bits","Buf_size","send_code","bi_reverse","bi_flush","gen_bitlen","xbits","dyn_tree","max_code","stree","stat_desc","static_tree","has_stree","extra_bits","extra_base","max_length","gen_codes","next_code","tr_static_init","base_length","extra_lbits","_length_code","base_dist","extra_dbits","static_ltree","static_dtree","static_l_desc","StaticTreeDesc","static_d_desc","static_bl_desc","extra_blbits","MAX_BL_BITS","init_block","END_BLOCK","bi_windup","copy_block","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","elems","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","build_bl_tree","max_blindex","bl_order","send_all_trees","lcodes","dcodes","blcodes","detect_data_type","black_mask","static_init_done","TreeDesc","stored_len","STORED_BLOCK","STATIC_TREES","opt_lenb","static_lenb","DYN_TREES","DIST_CODE_LEN",180,"ZStream",181,"2.16.840.1.101.3.4.1.1","2.16.840.1.101.3.4.1.2","2.16.840.1.101.3.4.1.3","2.16.840.1.101.3.4.1.4","2.16.840.1.101.3.4.1.21","2.16.840.1.101.3.4.1.22","2.16.840.1.101.3.4.1.23","2.16.840.1.101.3.4.1.24","2.16.840.1.101.3.4.1.41","2.16.840.1.101.3.4.1.42","2.16.840.1.101.3.4.1.43","2.16.840.1.101.3.4.1.44",182,"RSAPrivateKey","seq","RSAPublicKey","PublicKey","AlgorithmIdentifier","bitstr","null_","PrivateKeyInfo","octstr","PrivateKey","EncryptedPrivateKeyInfo","EncryptedPrivateKey","DSAPrivateKey","DSAparam","ECPrivateKey","ECParameters","namedCurve","asn1.js",183,"findProc","startRegex","fullRegex","evp","okey","decrypted","cipherText","cipherKey","match2","browserify-aes",184,"subtype","ndata","stripped","fixProc","subjectPublicKey","parameters","kde","kdeparams","iters","aesid","keylen","compat","./aesid.json","./asn1","./fixProc",185,"normalizeArray","allowAboveRoot","up","splitPathRe","splitPath","resolvedPath","resolvedAbsolute","isAbsolute","trailingSlash","paths","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","basename",186,"iterations","MAX_ALLOC","hLen","DK","block1","U","destPos",187,188,"cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","fun","title","browser","argv","chdir","umask",189,"privateDecrypt","privateEncrypt","publicDecrypt","./privateDecrypt","./publicEncrypt",190,"i2ops",191,"oaep","iHash","maskedSeed","maskedDb","mgf","pkcs1","reverse","ps","dif","withPublic","private_key","zBuffer","./mgf","./withPublic","./xor",192,"hLen2","dblen","nonZero","cur","public_key","paddedMsg",193,194,195,"mapDomain","regexSeparators","labels","basicToDigit","digitToBasic","digit","flag","adapt","numPoints","firstTime","damp","baseMinusTMin","tMax","skew","oldi","baseMinusT","inputLength","initialN","bias","initialBias","lastIndexOf","maxInt","tMin","handledCPCount","basicLength","currentValue","handledCPCountPlusOne","qMinusT","toUnicode","regexPunycode","toASCII","regexNonASCII","punycode","not-basic","invalid-input","ucs2",196,"regexp","maxKeys","kstr","vstr",197,"stringifyPrimitive","ks",198,"./decode","./encode",199,"oldBrowser","./lib/_stream_duplex.js","Duplex","onend","processNextTick","onEndNT","./_stream_readable","./_stream_writable","core-util-is","process-nextick-args","PassThrough","./_stream_transform","ReadableState","objectMode","readableObjectMode","hwm","highWaterMark","defaultHwm","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","defaultEncoding","ranOut","awaitDrain","readingMore","_readableState","_read","readableAddChunk","addToFront","chunkInvalid","onEofChunk","emitReadable","maybeReadMore","needMoreData","computeNewHighWaterMark","MAX_HWM","howMuchToRead","emitReadable_","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resumeScheduled","resume_","fromList","stringMode","cpy","endReadable","endReadableNT","debugUtil","debuglog","isPaused","setEncoding","nOrig","doRead","pipe","pipeOpts","onunpipe","onfinish","ondrain","cleanedUp","unpipe","doEnd","stdout","stderr","endFn","dests","paused","_fromList","./_stream_duplex","string_decoder/","TransformState","afterTransform","needTransform","transforming","writecb","writechunk","ts","_transformState","rs","writeencoding","nop","WriteReq","WritableState","writableObjectMode","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","writev","_writev","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","onwriteError","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","finishMaybe","entry","cbs","prefinish","need","endWritable","internalUtil","deprecate","getBuffer","cork","uncork","setDefaultEncoding","util-deprecate","./lib/_stream_passthrough.js","./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js",208,209,210,"bytesToWords","wordsToBytes","processBlock","offset_i","M_offset_i","ar","br","cr","dr","f1","f2","f3","f4","f5","rotl","sl","zr","hr","sr","nBitsLeft","nBitsTotal","H_i","digestbytes",211,"finalSize","_block","_finalSize","_blockSize","_s",212,"Algorithm","./sha","./sha1","./sha224","./sha256","./sha384","./sha512",213,"Sha","_w","rol","_a","_b","_c","_d","_e","calcW","loop","./hash",214,"Sha1",215,"Sha224","Sha256","_f","_g","_h",216,"Maj","Sigma0","Sigma1","Gamma0","Gamma1",217,"Sha384","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","writeInt64BE",218,"Sha512","Gamma0l","Gamma1l","gamma0","gamma0l","gamma1","gamma1l","Wi7","Wi7l","Wi16","Wi16l","Wil","Wi","maj","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kil","chl","t1l","t2l",219,"EE","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js",220,"ClientRequest","statusCodes","defaultMaxSockets","METHODS","./lib/request","builtin-status-codes","xtend",221,"checkTypeSupport","fetch","ReadableByteStream","blobConstructor","haveArrayBuffer","haveSlice","msstream","mozchunkedarraybuffer","overrideMimeType","vbArray","VBArray",222,"decideMode","preferBinary","capability","statusValid","IncomingMessage","rStates","readyStates","_body","_headers","setHeader","_onFinish","lowerName","unsafeHeaders","getHeader","removeHeader","_destroyed","headersObj","credentials","then","_fetchResponse","_connect","_xhr","_response","LOADING","_onXHRProgress","onprogress","flushHeaders","setSocketKeepAlive","./capability","./response",223,"UNSENT","OPENED","HEADERS_RECEIVED","reader","rawHeaders","trailers","rawTrailers","statusMessage","statusText","_it","Symbol","iterator","getReader","_pos","getAllResponseHeaders","_charset","mimeType","charsetMatch","responseBody","MSStreamReader",224,"assertEncoding","isBufferEncoding","passThroughWrite","utf16DetectIncompleteChar","charReceived","charLength","base64DetectIncompleteChar","surrogateSize","detectIncompleteChar","charBuffer","charStr","available",225,"Url","slashes","search","urlParse","parseQueryString","slashesDenoteHost","urlFormat","urlResolve","urlResolveObject","resolveObject","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","unsafeProtocol","javascript","javascript:","hostlessProtocol","slashedProtocol","ftp","gopher","http:","https:","ftp:","gopher:","file:","querystring","queryIndex","splitter","uSplit","slashRegex","simplePath","lowerProto","hostEnd","hec","atSign","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","ae","esc","escape","qm","rel","tkeys","tk","tkey","rkeys","rk","rkey","relPath","isSourceAbs","isRelAbs","mustEndAbs","removeAllDots","srcPath","psychotic","authInHost","hasTrailingSlash","./util",226,227,"deprecated","warn",228,229,"seen","stylize","stylizeNoColor","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","styles","arrayToHash","recurseTimes","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","line","numLinesEst","timestamp","getHours","getMinutes","getSeconds","getDate","months","getMonth","formatRegExp","objects","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","yellow","special","boolean","null","./support/isBuffer",230,"Context","Object_keys","defineProp","globals","Script","display","win","contentWindow","wEval","eval","wExecScript","execScript","winKeys","runInNewContext","createContext","createScript",231],"mappings":"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AAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EACA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAEA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,GAEA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,EAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,E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EAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,iEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,kEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,oEAGA,mEACA,qEAGA,mEACA,qEAGA,mEACA,q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","file":"y-websockets-client.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n},{}],2:[function(require,module,exports){\n/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n},{}],3:[function(require,module,exports){\n\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n},{}],4:[function(require,module,exports){\n/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n\n},{}],5:[function(require,module,exports){\n(function (process,__filename){\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = fs.existsSync || path.existsSync\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' → '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n  opts.__proto__ = defaults\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n\n}).call(this,require('_process'),\"/node_modules\\\\bindings\\\\bindings.js\")\n\n},{\"_process\":188,\"fs\":114,\"path\":185}],6:[function(require,module,exports){\n(function (global){\n/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\n/*!\n * bufferutil: WebSocket buffer utils\n * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports.BufferUtil = {\n  merge: function(mergedBuffer, buffers) {\n    for (var i = 0, offset = 0, l = buffers.length; i < l; ++i) {\n      var buf = buffers[i];\n\n      buf.copy(mergedBuffer, offset);\n      offset += buf.length;\n    }\n  },\n\n  mask: function(source, mask, output, offset, length) {\n    var maskNum = mask.readUInt32LE(0, true)\n      , i = 0\n      , num;\n\n    for (; i < length - 3; i += 4) {\n      num = maskNum ^ source.readUInt32LE(i, true);\n\n      if (num < 0) num = 4294967296 + num;\n      output.writeUInt32LE(num, offset + i, true);\n    }\n\n    switch (length % 4) {\n      case 3: output[offset + i + 2] = source[i + 2] ^ mask[2];\n      case 2: output[offset + i + 1] = source[i + 1] ^ mask[1];\n      case 1: output[offset + i] = source[i] ^ mask[0];\n    }\n  },\n\n  unmask: function(data, mask) {\n    var maskNum = mask.readUInt32LE(0, true)\n      , length = data.length\n      , i = 0\n      , num;\n\n    for (; i < length - 3; i += 4) {\n      num = maskNum ^ data.readUInt32LE(i, true);\n\n      if (num < 0) num = 4294967296 + num;\n      data.writeUInt32LE(num, i, true);\n    }\n\n    switch (length % 4) {\n      case 3: data[i + 2] = data[i + 2] ^ mask[2];\n      case 2: data[i + 1] = data[i + 1] ^ mask[1];\n      case 1: data[i] = data[i] ^ mask[0];\n    }\n  }\n};\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\ntry {\n  module.exports = require('bindings')('bufferutil');\n} catch (e) {\n  module.exports = require('./fallback');\n}\n\n},{\"./fallback\":7,\"bindings\":5}],9:[function(require,module,exports){\n/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n},{}],10:[function(require,module,exports){\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n},{}],11:[function(require,module,exports){\n\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n},{}],12:[function(require,module,exports){\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n},{\"./debug\":13}],13:[function(require,module,exports){\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n},{\"ms\":33}],14:[function(require,module,exports){\n\nmodule.exports =  require('./lib/');\n\n},{\"./lib/\":15}],15:[function(require,module,exports){\n\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n},{\"./socket\":16,\"engine.io-parser\":25}],16:[function(require,module,exports){\n(function (global){\n/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function(){\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if('function' == typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' == typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./transport\":17,\"./transports\":18,\"component-emitter\":24,\"debug\":12,\"engine.io-parser\":25,\"indexof\":30,\"parsejson\":35,\"parseqs\":36,\"parseuri\":37}],17:[function(require,module,exports){\n/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n},{\"component-emitter\":24,\"engine.io-parser\":25}],18:[function(require,module,exports){\n(function (global){\n/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./polling-jsonp\":19,\"./polling-xhr\":20,\"./websocket\":22,\"xmlhttprequest-ssl\":23}],19:[function(require,module,exports){\n(function (global){\n\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  insertAt.parentNode.insertBefore(script, insertAt);\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./polling\":21,\"component-inherit\":11}],20:[function(require,module,exports){\n(function (global){\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./polling\":21,\"component-emitter\":24,\"component-inherit\":11,\"debug\":12,\"xmlhttprequest-ssl\":23}],21:[function(require,module,exports){\n/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n},{\"../transport\":17,\"component-inherit\":11,\"debug\":12,\"engine.io-parser\":25,\"parseqs\":36,\"xmlhttprequest-ssl\":23,\"yeast\":67}],22:[function(require,module,exports){\n(function (global){\n/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or the WebSocket-compatible interface\n * exposed by `ws` for Node environment.\n */\n\nvar WebSocket = BrowserWebSocket || (typeof window !== 'undefined' ? null : require('ws'));\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e){\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done(){\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function(){\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"../transport\":17,\"component-inherit\":11,\"debug\":12,\"engine.io-parser\":25,\"parseqs\":36,\"ws\":52,\"yeast\":67}],23:[function(require,module,exports){\n// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n\n},{\"has-cors\":29}],24:[function(require,module,exports){\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n},{}],25:[function(require,module,exports){\n(function (global){\n/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./keys\":26,\"after\":1,\"arraybuffer.slice\":2,\"base64-arraybuffer\":4,\"blob\":6,\"has-binary\":27,\"utf8\":51}],26:[function(require,module,exports){\n\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n},{}],27:[function(require,module,exports){\n(function (global){\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"isarray\":31}],28:[function(require,module,exports){\n(function (global){\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"isarray\":31}],29:[function(require,module,exports){\n\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n},{}],30:[function(require,module,exports){\n\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n},{}],31:[function(require,module,exports){\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n},{}],32:[function(require,module,exports){\n(function (global){\n/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],33:[function(require,module,exports){\n/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n},{}],34:[function(require,module,exports){\n/*!\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar fs = require('fs');\n\nfunction Options(defaults) {\n  var internalValues = {};\n  var values = this.value = {};\n  Object.keys(defaults).forEach(function(key) {\n    internalValues[key] = defaults[key];\n    Object.defineProperty(values, key, {\n      get: function() { return internalValues[key]; },\n      configurable: false,\n      enumerable: true\n    });\n  });\n  this.reset = function() {\n    Object.keys(defaults).forEach(function(key) {\n      internalValues[key] = defaults[key];\n    });\n    return this;\n  };\n  this.merge = function(options, required) {\n    options = options || {};\n    if (Object.prototype.toString.call(required) === '[object Array]') {\n      var missing = [];\n      for (var i = 0, l = required.length; i < l; ++i) {\n        var key = required[i];\n        if (!(key in options)) {\n          missing.push(key);\n        }\n      }\n      if (missing.length > 0) {\n        if (missing.length > 1) {\n          throw new Error('options ' +\n            missing.slice(0, missing.length - 1).join(', ') + ' and ' +\n            missing[missing.length - 1] + ' must be defined');\n        }\n        else throw new Error('option ' + missing[0] + ' must be defined');\n      }\n    }\n    Object.keys(options).forEach(function(key) {\n      if (key in internalValues) {\n        internalValues[key] = options[key];\n      }\n    });\n    return this;\n  };\n  this.copy = function(keys) {\n    var obj = {};\n    Object.keys(defaults).forEach(function(key) {\n      if (keys.indexOf(key) !== -1) {\n        obj[key] = values[key];\n      }\n    });\n    return obj;\n  };\n  this.read = function(filename, cb) {\n    if (typeof cb == 'function') {\n      var self = this;\n      fs.readFile(filename, function(error, data) {\n        if (error) return cb(error);\n        var conf = JSON.parse(data);\n        self.merge(conf);\n        cb();\n      });\n    }\n    else {\n      var conf = JSON.parse(fs.readFileSync(filename));\n      this.merge(conf);\n    }\n    return this;\n  };\n  this.isDefined = function(key) {\n    return typeof values[key] != 'undefined';\n  };\n  this.isDefinedAndNonNull = function(key) {\n    return typeof values[key] != 'undefined' && values[key] !== null;\n  };\n  Object.freeze(values);\n  Object.freeze(this);\n}\n\nmodule.exports = Options;\n\n},{\"fs\":114}],35:[function(require,module,exports){\n(function (global){\n/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],36:[function(require,module,exports){\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n\n},{}],37:[function(require,module,exports){\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n\n},{}],38:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n},{\"./manager\":39,\"./socket\":41,\"./url\":42,\"debug\":12,\"socket.io-parser\":44}],39:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function(){\n  this.lastPing = new Date;\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function(){\n  this.emitAll('pong', new Date - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  debug('cleanup');\n\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' == this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n},{\"./on\":40,\"./socket\":41,\"backo2\":3,\"component-bind\":9,\"component-emitter\":10,\"debug\":12,\"engine.io-client\":14,\"indexof\":30,\"socket.io-parser\":44}],40:[function(require,module,exports){\n\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n},{}],41:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n},{\"./on\":40,\"component-bind\":9,\"component-emitter\":10,\"debug\":12,\"has-binary\":28,\"socket.io-parser\":44,\"to-array\":47}],42:[function(require,module,exports){\n(function (global){\n\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"debug\":12,\"parseuri\":37}],43:[function(require,module,exports){\n(function (global){\n/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./is-buffer\":45,\"isarray\":31}],44:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'BINARY_EVENT',\n  'ACK',\n  'BINARY_ACK',\n  'ERROR'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n\n},{\"./binary\":43,\"./is-buffer\":45,\"component-emitter\":46,\"debug\":12,\"isarray\":31,\"json3\":32}],45:[function(require,module,exports){\n(function (global){\n\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],46:[function(require,module,exports){\narguments[4][24][0].apply(exports,arguments)\n},{\"dup\":24}],47:[function(require,module,exports){\nmodule.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n},{}],48:[function(require,module,exports){\n'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * An auto incrementing id which we can use to create \"unique\" Ultron instances\n * so we can track the event emitters that are added through the Ultron\n * interface.\n *\n * @type {Number}\n * @private\n */\nvar id = 0;\n\n/**\n * Ultron is high-intelligence robot. It gathers intelligence so it can start improving\n * upon his rudimentary design. It will learn from your EventEmitting patterns\n * and exterminate them.\n *\n * @constructor\n * @param {EventEmitter} ee EventEmitter instance we need to wrap.\n * @api public\n */\nfunction Ultron(ee) {\n  if (!(this instanceof Ultron)) return new Ultron(ee);\n\n  this.id = id++;\n  this.ee = ee;\n}\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.on = function on(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.on(event, fn, context);\n\n  return this;\n};\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.once = function once(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.once(event, fn, context);\n\n  return this;\n};\n\n/**\n * Remove the listeners we assigned for the given event.\n *\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.remove = function remove() {\n  var args = arguments\n    , event;\n\n  //\n  // When no event names are provided we assume that we need to clear all the\n  // events that were assigned through us.\n  //\n  if (args.length === 1 && 'string' === typeof args[0]) {\n    args = args[0].split(/[, ]+/);\n  } else if (!args.length) {\n    args = [];\n\n    for (event in this.ee._events) {\n      if (has.call(this.ee._events, event)) args.push(event);\n    }\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var listeners = this.ee.listeners(args[i]);\n\n    for (var j = 0; j < listeners.length; j++) {\n      event = listeners[j];\n\n      //\n      // Once listeners have a `listener` property that stores the real listener\n      // in the EventEmitter that ships with Node.js.\n      //\n      if (event.listener) {\n        if (event.listener.__ultron !== this.id) continue;\n        delete event.listener.__ultron;\n      } else {\n        if (event.__ultron !== this.id) continue;\n        delete event.__ultron;\n      }\n\n      this.ee.removeListener(args[i], event);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Destroy the Ultron instance, remove all listeners and release all references.\n *\n * @returns {Boolean}\n * @api public\n */\nUltron.prototype.destroy = function destroy() {\n  if (!this.ee) return false;\n\n  this.remove();\n  this.ee = null;\n\n  return true;\n};\n\n//\n// Expose the module.\n//\nmodule.exports = Ultron;\n\n},{}],49:[function(require,module,exports){\n'use strict';\n\n/*!\n * UTF-8 validate: UTF-8 validation for WebSockets.\n * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports.Validation = {\n  isValidUTF8: function(buffer) {\n    return true;\n  }\n};\n\n},{}],50:[function(require,module,exports){\n'use strict';\n\ntry {\n  module.exports = require('bindings')('validation');\n} catch (e) {\n  module.exports = require('./fallback');\n}\n\n},{\"./fallback\":49,\"bindings\":5}],51:[function(require,module,exports){\n(function (global){\n/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],52:[function(require,module,exports){\n'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar WS = module.exports = require('./lib/WebSocket');\n\nWS.Server = require('./lib/WebSocketServer');\nWS.Sender = require('./lib/Sender');\nWS.Receiver = require('./lib/Receiver');\n\n/**\n * Create a new WebSocket server.\n *\n * @param {Object} options Server options\n * @param {Function} fn Optional connection listener.\n * @returns {WS.Server}\n * @api public\n */\nWS.createServer = function createServer(options, fn) {\n  var server = new WS.Server(options);\n\n  if (typeof fn === 'function') {\n    server.on('connection', fn);\n  }\n\n  return server;\n};\n\n/**\n * Create a new WebSocket connection.\n *\n * @param {String} address The URL/address we need to connect to.\n * @param {Function} fn Open listener.\n * @returns {WS}\n * @api public\n */\nWS.connect = WS.createConnection = function connect(address, fn) {\n  var client = new WS(address);\n\n  if (typeof fn === 'function') {\n    client.on('open', fn);\n  }\n\n  return client;\n};\n\n},{\"./lib/Receiver\":60,\"./lib/Sender\":62,\"./lib/WebSocket\":65,\"./lib/WebSocketServer\":66}],53:[function(require,module,exports){\n(function (Buffer){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util');\n\nfunction BufferPool(initialSize, growStrategy, shrinkStrategy) {\n  if (this instanceof BufferPool === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  if (typeof initialSize === 'function') {\n    shrinkStrategy = growStrategy;\n    growStrategy = initialSize;\n    initialSize = 0;\n  }\n  else if (typeof initialSize === 'undefined') {\n    initialSize = 0;\n  }\n  this._growStrategy = (growStrategy || function(db, size) {\n    return db.used + size;\n  }).bind(null, this);\n  this._shrinkStrategy = (shrinkStrategy || function(db) {\n    return initialSize;\n  }).bind(null, this);\n  this._buffer = initialSize ? new Buffer(initialSize) : null;\n  this._offset = 0;\n  this._used = 0;\n  this._changeFactor = 0;\n  this.__defineGetter__('size', function(){\n    return this._buffer == null ? 0 : this._buffer.length;\n  });\n  this.__defineGetter__('used', function(){\n    return this._used;\n  });\n}\n\nBufferPool.prototype.get = function(length) {\n  if (this._buffer == null || this._offset + length > this._buffer.length) {\n    var newBuf = new Buffer(this._growStrategy(length));\n    this._buffer = newBuf;\n    this._offset = 0;\n  }\n  this._used += length;\n  var buf = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return buf;\n}\n\nBufferPool.prototype.reset = function(forceNewBuffer) {\n  var len = this._shrinkStrategy();\n  if (len < this.size) this._changeFactor -= 1;\n  if (forceNewBuffer || this._changeFactor < -2) {\n    this._changeFactor = 0;\n    this._buffer = len ? new Buffer(len) : null;\n  }\n  this._offset = 0;\n  this._used = 0;\n}\n\nmodule.exports = BufferPool;\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"util\":229}],54:[function(require,module,exports){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports.BufferUtil = {\n  merge: function(mergedBuffer, buffers) {\n    var offset = 0;\n    for (var i = 0, l = buffers.length; i < l; ++i) {\n      var buf = buffers[i];\n      buf.copy(mergedBuffer, offset);\n      offset += buf.length;\n    }\n  },\n  mask: function(source, mask, output, offset, length) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ source.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      output.writeUInt32LE(num, offset + i, true);\n    }\n    switch (length % 4) {\n      case 3: output[offset + i + 2] = source[i + 2] ^ mask[2];\n      case 2: output[offset + i + 1] = source[i + 1] ^ mask[1];\n      case 1: output[offset + i] = source[i] ^ mask[0];\n      case 0:;\n    }\n  },\n  unmask: function(data, mask) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var length = data.length;\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ data.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      data.writeUInt32LE(num, i, true);\n    }\n    switch (length % 4) {\n      case 3: data[i + 2] = data[i + 2] ^ mask[2];\n      case 2: data[i + 1] = data[i + 1] ^ mask[1];\n      case 1: data[i] = data[i] ^ mask[0];\n      case 0:;\n    }\n  }\n}\n\n},{}],55:[function(require,module,exports){\n'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\ntry {\n  module.exports = require('bufferutil');\n} catch (e) {\n  module.exports = require('./BufferUtil.fallback');\n}\n\n},{\"./BufferUtil.fallback\":54,\"bufferutil\":8}],56:[function(require,module,exports){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports = {\n  isValidErrorCode: function(code) {\n    return (code >= 1000 && code <= 1011 && code != 1004 && code != 1005 && code != 1006) ||\n         (code >= 3000 && code <= 4999);\n  },\n  1000: 'normal',\n  1001: 'going away',\n  1002: 'protocol error',\n  1003: 'unsupported data',\n  1004: 'reserved',\n  1005: 'reserved for extensions',\n  1006: 'reserved for extensions',\n  1007: 'inconsistent or invalid data',\n  1008: 'policy violation',\n  1009: 'message too big',\n  1010: 'extension handshake missing',\n  1011: 'an unexpected condition prevented the request from being fulfilled',\n};\n},{}],57:[function(require,module,exports){\n\nvar util = require('util');\n\n/**\n * Module exports.\n */\n\nexports.parse = parse;\nexports.format = format;\n\n/**\n * Parse extensions header value\n */\n\nfunction parse(value) {\n  value = value || '';\n\n  var extensions = {};\n\n  value.split(',').forEach(function(v) {\n    var params = v.split(';');\n    var token = params.shift().trim();\n    var paramsList = extensions[token] = extensions[token] || [];\n    var parsedParams = {};\n\n    params.forEach(function(param) {\n      var parts = param.trim().split('=');\n      var key = parts[0];\n      var value = parts[1];\n      if (typeof value === 'undefined') {\n        value = true;\n      } else {\n        // unquote value\n        if (value[0] === '\"') {\n          value = value.slice(1);\n        }\n        if (value[value.length - 1] === '\"') {\n          value = value.slice(0, value.length - 1);\n        }\n      }\n      (parsedParams[key] = parsedParams[key] || []).push(value);\n    });\n\n    paramsList.push(parsedParams);\n  });\n\n  return extensions;\n}\n\n/**\n * Format extensions header value\n */\n\nfunction format(value) {\n  return Object.keys(value).map(function(token) {\n    var paramsList = value[token];\n    if (!util.isArray(paramsList)) {\n      paramsList = [paramsList];\n    }\n    return paramsList.map(function(params) {\n      return [token].concat(Object.keys(params).map(function(k) {\n        var p = params[k];\n        if (!util.isArray(p)) p = [p];\n        return p.map(function(v) {\n          return v === true ? k : k + '=' + v;\n        }).join('; ');\n      })).join('; ');\n    }).join(', ');\n  }).join(', ');\n}\n\n},{\"util\":229}],58:[function(require,module,exports){\n(function (Buffer){\n\nvar zlib = require('zlib');\n\nvar AVAILABLE_WINDOW_BITS = [8, 9, 10, 11, 12, 13, 14, 15];\nvar DEFAULT_WINDOW_BITS = 15;\nvar DEFAULT_MEM_LEVEL = 8;\n\nPerMessageDeflate.extensionName = 'permessage-deflate';\n\n/**\n * Per-message Compression Extensions implementation\n */\n\nfunction PerMessageDeflate(options, isServer) {\n  if (this instanceof PerMessageDeflate === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  this._options = options || {};\n  this._isServer = !!isServer;\n  this._inflate = null;\n  this._deflate = null;\n  this.params = null;\n}\n\n/**\n * Create extension parameters offer\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.offer = function() {\n  var params = {};\n  if (this._options.serverNoContextTakeover) {\n    params.server_no_context_takeover = true;\n  }\n  if (this._options.clientNoContextTakeover) {\n    params.client_no_context_takeover = true;\n  }\n  if (this._options.serverMaxWindowBits) {\n    params.server_max_window_bits = this._options.serverMaxWindowBits;\n  }\n  if (this._options.clientMaxWindowBits) {\n    params.client_max_window_bits = this._options.clientMaxWindowBits;\n  } else if (this._options.clientMaxWindowBits == null) {\n    params.client_max_window_bits = true;\n  }\n  return params;\n};\n\n/**\n * Accept extension offer\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.accept = function(paramsList) {\n  paramsList = this.normalizeParams(paramsList);\n\n  var params;\n  if (this._isServer) {\n    params = this.acceptAsServer(paramsList);\n  } else {\n    params = this.acceptAsClient(paramsList);\n  }\n\n  this.params = params;\n  return params;\n};\n\n/**\n * Releases all resources used by the extension\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.cleanup = function() {\n  if (this._inflate) {\n    if (this._inflate.writeInProgress) {\n      this._inflate.pendingClose = true;\n    } else {\n      if (this._inflate.close) this._inflate.close();\n      this._inflate = null;\n    }\n  }\n  if (this._deflate) {\n    if (this._deflate.writeInProgress) {\n      this._deflate.pendingClose = true;\n    } else {\n      if (this._deflate.close) this._deflate.close();\n      this._deflate = null;\n    }\n  }\n};\n\n/**\n * Accept extension offer from client\n *\n * @api private\n */\n\nPerMessageDeflate.prototype.acceptAsServer = function(paramsList) {\n  var accepted = {};\n  var result = paramsList.some(function(params) {\n    accepted = {};\n    if (this._options.serverNoContextTakeover === false && params.server_no_context_takeover) {\n      return;\n    }\n    if (this._options.serverMaxWindowBits === false && params.server_max_window_bits) {\n      return;\n    }\n    if (typeof this._options.serverMaxWindowBits === 'number' &&\n        typeof params.server_max_window_bits === 'number' &&\n        this._options.serverMaxWindowBits > params.server_max_window_bits) {\n      return;\n    }\n    if (typeof this._options.clientMaxWindowBits === 'number' && !params.client_max_window_bits) {\n      return;\n    }\n\n    if (this._options.serverNoContextTakeover || params.server_no_context_takeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover !== false && params.client_no_context_takeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof this._options.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = this._options.serverMaxWindowBits;\n    } else if (typeof params.server_max_window_bits === 'number') {\n      accepted.server_max_window_bits = params.server_max_window_bits;\n    }\n    if (typeof this._options.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits !== false && typeof params.client_max_window_bits === 'number') {\n      accepted.client_max_window_bits = params.client_max_window_bits;\n    }\n    return true;\n  }, this);\n\n  if (!result) {\n    throw new Error('Doesn\\'t support the offered configuration');\n  }\n\n  return accepted;\n};\n\n/**\n * Accept extension response from server\n *\n * @api privaye\n */\n\nPerMessageDeflate.prototype.acceptAsClient = function(paramsList) {\n  var params = paramsList[0];\n  if (this._options.clientNoContextTakeover != null) {\n    if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n      throw new Error('Invalid value for \"client_no_context_takeover\"');\n    }\n  }\n  if (this._options.clientMaxWindowBits != null) {\n    if (this._options.clientMaxWindowBits === false && params.client_max_window_bits) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n    if (typeof this._options.clientMaxWindowBits === 'number' &&\n        (!params.client_max_window_bits || params.client_max_window_bits > this._options.clientMaxWindowBits)) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n  }\n  return params;\n};\n\n/**\n * Normalize extensions parameters\n *\n * @api private\n */\n\nPerMessageDeflate.prototype.normalizeParams = function(paramsList) {\n  return paramsList.map(function(params) {\n    Object.keys(params).forEach(function(key) {\n      var value = params[key];\n      if (value.length > 1) {\n        throw new Error('Multiple extension parameters for ' + key);\n      }\n\n      value = value[0];\n\n      switch (key) {\n      case 'server_no_context_takeover':\n      case 'client_no_context_takeover':\n        if (value !== true) {\n          throw new Error('invalid extension parameter value for ' + key + ' (' + value + ')');\n        }\n        params[key] = true;\n        break;\n      case 'server_max_window_bits':\n      case 'client_max_window_bits':\n        if (typeof value === 'string') {\n          value = parseInt(value, 10);\n          if (!~AVAILABLE_WINDOW_BITS.indexOf(value)) {\n            throw new Error('invalid extension parameter value for ' + key + ' (' + value + ')');\n          }\n        }\n        if (!this._isServer && value === true) {\n          throw new Error('Missing extension parameter value for ' + key);\n        }\n        params[key] = value;\n        break;\n      default:\n        throw new Error('Not defined extension parameter (' + key + ')');\n      }\n    }, this);\n    return params;\n  }, this);\n};\n\n/**\n * Decompress message\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.decompress = function (data, fin, callback) {\n  var endpoint = this._isServer ? 'client' : 'server';\n\n  if (!this._inflate) {\n    var maxWindowBits = this.params[endpoint + '_max_window_bits'];\n    this._inflate = zlib.createInflateRaw({\n      windowBits: 'number' === typeof maxWindowBits ? maxWindowBits : DEFAULT_WINDOW_BITS\n    });\n  }\n  this._inflate.writeInProgress = true;\n\n  var self = this;\n  var buffers = [];\n\n  this._inflate.on('error', onError).on('data', onData);\n  this._inflate.write(data);\n  if (fin) {\n    this._inflate.write(new Buffer([0x00, 0x00, 0xff, 0xff]));\n  }\n  this._inflate.flush(function() {\n    cleanup();\n    callback(null, Buffer.concat(buffers));\n  });\n\n  function onError(err) {\n    cleanup();\n    callback(err);\n  }\n\n  function onData(data) {\n    buffers.push(data);\n  }\n\n  function cleanup() {\n    if (!self._inflate) return;\n    self._inflate.removeListener('error', onError);\n    self._inflate.removeListener('data', onData);\n    self._inflate.writeInProgress = false;\n    if ((fin && self.params[endpoint + '_no_context_takeover']) || self._inflate.pendingClose) {\n      if (self._inflate.close) self._inflate.close();\n      self._inflate = null;\n    }\n  }\n};\n\n/**\n * Compress message\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.compress = function (data, fin, callback) {\n  var endpoint = this._isServer ? 'server' : 'client';\n\n  if (!this._deflate) {\n    var maxWindowBits = this.params[endpoint + '_max_window_bits'];\n    this._deflate = zlib.createDeflateRaw({\n      flush: zlib.Z_SYNC_FLUSH,\n      windowBits: 'number' === typeof maxWindowBits ? maxWindowBits : DEFAULT_WINDOW_BITS,\n      memLevel: this._options.memLevel || DEFAULT_MEM_LEVEL\n    });\n  }\n  this._deflate.writeInProgress = true;\n\n  var self = this;\n  var buffers = [];\n\n  this._deflate.on('error', onError).on('data', onData);\n  this._deflate.write(data);\n  this._deflate.flush(function() {\n    cleanup();\n    var data = Buffer.concat(buffers);\n    if (fin) {\n      data = data.slice(0, data.length - 4);\n    }\n    callback(null, data);\n  });\n\n  function onError(err) {\n    cleanup();\n    callback(err);\n  }\n\n  function onData(data) {\n    buffers.push(data);\n  }\n\n  function cleanup() {\n    if (!self._deflate) return;\n    self._deflate.removeListener('error', onError);\n    self._deflate.removeListener('data', onData);\n    self._deflate.writeInProgress = false;\n    if ((fin && self.params[endpoint + '_no_context_takeover']) || self._deflate.pendingClose) {\n      if (self._deflate.close) self._deflate.close();\n      self._deflate = null;\n    }\n  }\n};\n\nmodule.exports = PerMessageDeflate;\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"zlib\":113}],59:[function(require,module,exports){\n(function (Buffer){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util');\n\n/**\n * State constants\n */\n\nvar EMPTY = 0\n  , BODY = 1;\nvar BINARYLENGTH = 2\n  , BINARYBODY = 3;\n\n/**\n * Hixie Receiver implementation\n */\n\nfunction Receiver () {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  this.state = EMPTY;\n  this.buffers = [];\n  this.messageEnd = -1;\n  this.spanLength = 0;\n  this.dead = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  var self = this;\n  function doAdd() {\n    if (self.state === EMPTY) {\n      if (data.length == 2 && data[0] == 0xFF && data[1] == 0x00) {\n        self.reset();\n        self.onclose();\n        return;\n      }\n      if (data[0] === 0x80) {\n        self.messageEnd = 0;\n        self.state = BINARYLENGTH;\n        data = data.slice(1);\n      } else {\n\n      if (data[0] !== 0x00) {\n        self.error('payload must start with 0x00 byte', true);\n        return;\n      }\n      data = data.slice(1);\n      self.state = BODY;\n\n      }\n    }\n    if (self.state === BINARYLENGTH) {\n      var i = 0;\n      while ((i < data.length) && (data[i] & 0x80)) {\n        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);\n        ++i;\n      }\n      if (i < data.length) {\n        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);\n        self.state = BINARYBODY;\n        ++i;\n      }\n      if (i > 0)\n        data = data.slice(i);\n    }\n    if (self.state === BINARYBODY) {\n      var dataleft = self.messageEnd - self.spanLength;\n      if (data.length >= dataleft) {\n        // consume the whole buffer to finish the frame\n        self.buffers.push(data);\n        self.spanLength += dataleft;\n        self.messageEnd = dataleft;\n        return self.parse();\n      }\n      // frame's not done even if we consume it all\n      self.buffers.push(data);\n      self.spanLength += data.length;\n      return;\n    }\n    self.buffers.push(data);\n    if ((self.messageEnd = bufferIndex(data, 0xFF)) != -1) {\n      self.spanLength += self.messageEnd;\n      return self.parse();\n    }\n    else self.spanLength += data.length;\n  }\n  while(data) data = doAdd();\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.state = EMPTY;\n  this.buffers = [];\n};\n\n/**\n * Process buffered data.\n *\n * @api public\n */\n\nReceiver.prototype.parse = function() {\n  var output = new Buffer(this.spanLength);\n  var outputIndex = 0;\n  for (var bi = 0, bl = this.buffers.length; bi < bl - 1; ++bi) {\n    var buffer = this.buffers[bi];\n    buffer.copy(output, outputIndex);\n    outputIndex += buffer.length;\n  }\n  var lastBuffer = this.buffers[this.buffers.length - 1];\n  if (this.messageEnd > 0) lastBuffer.copy(output, outputIndex, 0, this.messageEnd);\n  if (this.state !== BODY) --this.messageEnd;\n  var tail = null;\n  if (this.messageEnd < lastBuffer.length - 1) {\n    tail = lastBuffer.slice(this.messageEnd + 1);\n  }\n  this.reset();\n  this.ontext(output.toString('utf8'));\n  return tail;\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, terminate) {\n  this.reset();\n  this.onerror(reason, terminate);\n  return this;\n};\n\n/**\n * Reset parser state\n *\n * @api private\n */\n\nReceiver.prototype.reset = function (reason) {\n  if (this.dead) return;\n  this.state = EMPTY;\n  this.buffers = [];\n  this.messageEnd = -1;\n  this.spanLength = 0;\n};\n\n/**\n * Internal api\n */\n\nfunction bufferIndex(buffer, byte) {\n  for (var i = 0, l = buffer.length; i < l; ++i) {\n    if (buffer[i] === byte) return i;\n  }\n  return -1;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"util\":229}],60:[function(require,module,exports){\n(function (Buffer){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , Validation = require('./Validation').Validation\n  , ErrorCodes = require('./ErrorCodes')\n  , BufferPool = require('./BufferPool')\n  , bufferUtil = require('./BufferUtil').BufferUtil\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Receiver implementation\n */\n\nfunction Receiver (extensions) {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  // memory pool for fragmented messages\n  var fragmentedPoolPrevUsed = -1;\n  this.fragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return fragmentedPoolPrevUsed = fragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((fragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  // memory pool for unfragmented messages\n  var unfragmentedPoolPrevUsed = -1;\n  this.unfragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return unfragmentedPoolPrevUsed = unfragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((unfragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  this.extensions = extensions || {};\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.overflow = [];\n  this.headerBuffer = new Buffer(10);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.currentMessage = [];\n  this.messageHandlers = [];\n  this.expectHeader(2, this.processPacket);\n  this.dead = false;\n  this.processing = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  var dataLength = data.length;\n  if (dataLength == 0) return;\n  if (this.expectBuffer == null) {\n    this.overflow.push(data);\n    return;\n  }\n  var toRead = Math.min(dataLength, this.expectBuffer.length - this.expectOffset);\n  fastCopy(toRead, data, this.expectBuffer, this.expectOffset);\n  this.expectOffset += toRead;\n  if (toRead < dataLength) {\n    this.overflow.push(data.slice(toRead));\n  }\n  while (this.expectBuffer && this.expectOffset == this.expectBuffer.length) {\n    var bufferForHandler = this.expectBuffer;\n    this.expectBuffer = null;\n    this.expectOffset = 0;\n    this.expectHandler.call(this, bufferForHandler);\n  }\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.overflow = null;\n  this.headerBuffer = null;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.unfragmentedBufferPool = null;\n  this.fragmentedBufferPool = null;\n  this.state = null;\n  this.currentMessage = null;\n  this.onerror = null;\n  this.ontext = null;\n  this.onbinary = null;\n  this.onclose = null;\n  this.onping = null;\n  this.onpong = null;\n};\n\n/**\n * Waits for a certain amount of header bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectHeader = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.headerBuffer.slice(this.expectOffset, this.expectOffset + length);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Waits for a certain amount of data bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectData = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.allocateFromPool(length, this.state.fragmentedOperation);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Allocates memory from the buffer pool.\n *\n * @api private\n */\n\nReceiver.prototype.allocateFromPool = function(length, isFragmented) {\n  return (isFragmented ? this.fragmentedBufferPool : this.unfragmentedBufferPool).get(length);\n};\n\n/**\n * Start processing a new packet.\n *\n * @api private\n */\n\nReceiver.prototype.processPacket = function (data) {\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    if ((data[0] & 0x30) != 0) {\n      this.error('reserved fields (2, 3) must be empty', 1002);\n      return;\n    }\n  } else {\n    if ((data[0] & 0x70) != 0) {\n      this.error('reserved fields must be empty', 1002);\n      return;\n    }\n  }\n  this.state.lastFragment = (data[0] & 0x80) == 0x80;\n  this.state.masked = (data[1] & 0x80) == 0x80;\n  var compressed = (data[0] & 0x40) == 0x40;\n  var opcode = data[0] & 0xf;\n  if (opcode === 0) {\n    if (compressed) {\n      this.error('continuation frame cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    // continuation frame\n    this.state.fragmentedOperation = true;\n    this.state.opcode = this.state.activeFragmentedOperation;\n    if (!(this.state.opcode == 1 || this.state.opcode == 2)) {\n      this.error('continuation frame cannot follow current opcode', 1002);\n      return;\n    }\n  }\n  else {\n    if (opcode < 3 && this.state.activeFragmentedOperation != null) {\n      this.error('data frames after the initial data frame must have opcode 0', 1002);\n      return;\n    }\n    if (opcode >= 8 && compressed) {\n      this.error('control frames cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    this.state.compressed = compressed;\n    this.state.opcode = opcode;\n    if (this.state.lastFragment === false) {\n      this.state.fragmentedOperation = true;\n      this.state.activeFragmentedOperation = opcode;\n    }\n    else this.state.fragmentedOperation = false;\n  }\n  var handler = opcodes[this.state.opcode];\n  if (typeof handler == 'undefined') this.error('no handler for opcode ' + this.state.opcode, 1002);\n  else {\n    handler.start.call(this, data);\n  }\n};\n\n/**\n * Endprocessing a packet.\n *\n * @api private\n */\n\nReceiver.prototype.endPacket = function() {\n  if (!this.state.fragmentedOperation) this.unfragmentedBufferPool.reset(true);\n  else if (this.state.lastFragment) this.fragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  if (this.state.lastFragment && this.state.opcode === this.state.activeFragmentedOperation) {\n    // end current fragmented operation\n    this.state.activeFragmentedOperation = null;\n  }\n  this.state.lastFragment = false;\n  this.state.opcode = this.state.activeFragmentedOperation != null ? this.state.activeFragmentedOperation : 0;\n  this.state.masked = false;\n  this.expectHeader(2, this.processPacket);\n};\n\n/**\n * Reset the parser state.\n *\n * @api private\n */\n\nReceiver.prototype.reset = function() {\n  if (this.dead) return;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.fragmentedBufferPool.reset(true);\n  this.unfragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.overflow = [];\n  this.currentMessage = [];\n  this.messageHandlers = [];\n};\n\n/**\n * Unmask received data.\n *\n * @api private\n */\n\nReceiver.prototype.unmask = function (mask, buf, binary) {\n  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);\n  if (binary) return buf;\n  return buf != null ? buf.toString('utf8') : '';\n};\n\n/**\n * Concatenates a list of buffers.\n *\n * @api private\n */\n\nReceiver.prototype.concatBuffers = function(buffers) {\n  var length = 0;\n  for (var i = 0, l = buffers.length; i < l; ++i) length += buffers[i].length;\n  var mergedBuffer = new Buffer(length);\n  bufferUtil.merge(mergedBuffer, buffers);\n  return mergedBuffer;\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, protocolErrorCode) {\n  this.reset();\n  this.onerror(reason, protocolErrorCode);\n  return this;\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nReceiver.prototype.flush = function() {\n  if (this.processing || this.dead) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nReceiver.prototype.applyExtensions = function(messageBuffer, fin, compressed, callback) {\n  var self = this;\n  if (compressed) {\n    this.extensions[PerMessageDeflate.extensionName].decompress(messageBuffer, fin, function(err, buffer) {\n      if (self.dead) return;\n      if (err) {\n        callback(new Error('invalid compressed data'));\n        return;\n      }\n      callback(null, buffer);\n    });\n  } else {\n    callback(null, messageBuffer);\n  }\n};\n\n/**\n * Buffer utilities\n */\n\nfunction readUInt16BE(start) {\n  return (this[start]<<8) +\n         this[start+1];\n}\n\nfunction readUInt32BE(start) {\n  return (this[start]<<24) +\n         (this[start+1]<<16) +\n         (this[start+2]<<8) +\n         this[start+3];\n}\n\nfunction fastCopy(length, srcBuffer, dstBuffer, dstOffset) {\n  switch (length) {\n    default: srcBuffer.copy(dstBuffer, dstOffset, 0, length); break;\n    case 16: dstBuffer[dstOffset+15] = srcBuffer[15];\n    case 15: dstBuffer[dstOffset+14] = srcBuffer[14];\n    case 14: dstBuffer[dstOffset+13] = srcBuffer[13];\n    case 13: dstBuffer[dstOffset+12] = srcBuffer[12];\n    case 12: dstBuffer[dstOffset+11] = srcBuffer[11];\n    case 11: dstBuffer[dstOffset+10] = srcBuffer[10];\n    case 10: dstBuffer[dstOffset+9] = srcBuffer[9];\n    case 9: dstBuffer[dstOffset+8] = srcBuffer[8];\n    case 8: dstBuffer[dstOffset+7] = srcBuffer[7];\n    case 7: dstBuffer[dstOffset+6] = srcBuffer[6];\n    case 6: dstBuffer[dstOffset+5] = srcBuffer[5];\n    case 5: dstBuffer[dstOffset+4] = srcBuffer[4];\n    case 4: dstBuffer[dstOffset+3] = srcBuffer[3];\n    case 3: dstBuffer[dstOffset+2] = srcBuffer[2];\n    case 2: dstBuffer[dstOffset+1] = srcBuffer[1];\n    case 1: dstBuffer[dstOffset] = srcBuffer[0];\n  }\n}\n\nfunction clone(obj) {\n  var cloned = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      cloned[k] = obj[k];\n    }\n  }\n  return cloned;\n}\n\n/**\n * Opcode handlers\n */\n\nvar opcodes = {\n  // text\n  '1': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['1'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          opcodes['1'].getData.call(self, readUInt16BE.call(data, 0));\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          opcodes['1'].getData.call(self, readUInt32BE.call(data, 4));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['1'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['1'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) return self.error(err.message, 1007);\n          if (buffer != null) self.currentMessage.push(buffer);\n\n          if (state.lastFragment) {\n            var messageBuffer = self.concatBuffers(self.currentMessage);\n            self.currentMessage = [];\n            if (!Validation.isValidUTF8(messageBuffer)) {\n              self.error('invalid utf8 sequence', 1007);\n              return;\n            }\n            self.ontext(messageBuffer.toString('utf8'), {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // binary\n  '2': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['2'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          opcodes['2'].getData.call(self, readUInt16BE.call(data, 0));\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          opcodes['2'].getData.call(self, readUInt32BE.call(data, 4, true));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['2'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['2'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) return self.error(err.message, 1007);\n          if (buffer != null) self.currentMessage.push(buffer);\n          if (state.lastFragment) {\n            var messageBuffer = self.concatBuffers(self.currentMessage);\n            self.currentMessage = [];\n            self.onbinary(messageBuffer, {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // close\n  '8': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented close is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['8'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['8'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['8'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n\n      var state = clone(this.state);\n      this.messageHandlers.push(function() {\n        if (data && data.length == 1) {\n          self.error('close packets with data must be at least two bytes long', 1002);\n          return;\n        }\n        var code = data && data.length > 1 ? readUInt16BE.call(data, 0) : 1000;\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          self.error('invalid error code', 1002);\n          return;\n        }\n        var message = '';\n        if (data && data.length > 2) {\n          var messageBuffer = data.slice(2);\n          if (!Validation.isValidUTF8(messageBuffer)) {\n            self.error('invalid utf8 sequence', 1007);\n            return;\n          }\n          message = messageBuffer.toString('utf8');\n        }\n        self.onclose(code, message, {masked: state.masked});\n        self.reset();\n      });\n      this.flush();\n    },\n  },\n  // ping\n  '9': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented ping is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['9'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['9'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['9'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = this.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onping(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // pong\n  '10': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented pong is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['10'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (this.state.masked) {\n        this.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['10'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        this.expectData(length, function(data) {\n          opcodes['10'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onpong(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  }\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./BufferPool\":53,\"./BufferUtil\":55,\"./ErrorCodes\":56,\"./PerMessageDeflate\":58,\"./Validation\":64,\"buffer\":116,\"util\":229}],61:[function(require,module,exports){\n(function (Buffer){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events')\n  , util = require('util')\n  , EventEmitter = events.EventEmitter;\n\n/**\n * Hixie Sender implementation\n */\n\nfunction Sender(socket) {\n  if (this instanceof Sender === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  events.EventEmitter.call(this);\n\n  this.socket = socket;\n  this.continuationFrame = false;\n  this.isClosed = false;\n}\n\nmodule.exports = Sender;\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Frames and writes data.\n *\n * @api public\n */\n\nSender.prototype.send = function(data, options, cb) {\n  if (this.isClosed) return;\n\n  var isString = typeof data == 'string'\n    , length = isString ? Buffer.byteLength(data) : data.length\n    , lengthbytes = (length > 127) ? 2 : 1 // assume less than 2**14 bytes\n    , writeStartMarker = this.continuationFrame == false\n    , writeEndMarker = !options || !(typeof options.fin != 'undefined' && !options.fin)\n    , buffer = new Buffer((writeStartMarker ? ((options && options.binary) ? (1 + lengthbytes) : 1) : 0) + length + ((writeEndMarker && !(options && options.binary)) ? 1 : 0))\n    , offset = writeStartMarker ? 1 : 0;\n\n  if (writeStartMarker) {\n    if (options && options.binary) {\n      buffer.write('\\x80', 'binary');\n      // assume length less than 2**14 bytes\n      if (lengthbytes > 1)\n        buffer.write(String.fromCharCode(128+length/128), offset++, 'binary');\n      buffer.write(String.fromCharCode(length&0x7f), offset++, 'binary');\n    } else\n      buffer.write('\\x00', 'binary');\n  }\n\n  if (isString) buffer.write(data, offset, 'utf8');\n  else data.copy(buffer, offset, 0);\n\n  if (writeEndMarker) {\n    if (options && options.binary) {\n      // sending binary, not writing end marker\n    } else\n      buffer.write('\\xff', offset + length, 'binary');\n    this.continuationFrame = false;\n  }\n  else this.continuationFrame = true;\n\n  try {\n    this.socket.write(buffer, 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function(code, data, mask, cb) {\n  if (this.isClosed) return;\n  this.isClosed = true;\n  try {\n    if (this.continuationFrame) this.socket.write(new Buffer([0xff], 'binary'));\n    this.socket.write(new Buffer([0xff, 0x00]), 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a ping message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.ping = function(data, options) {};\n\n/**\n * Sends a pong message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.pong = function(data, options) {};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nSender.prototype.error = function (reason) {\n  this.emit('error', reason);\n  return this;\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"events\":154,\"util\":229}],62:[function(require,module,exports){\n(function (Buffer){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events')\n  , util = require('util')\n  , EventEmitter = events.EventEmitter\n  , ErrorCodes = require('./ErrorCodes')\n  , bufferUtil = require('./BufferUtil').BufferUtil\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Sender implementation\n */\n\nfunction Sender(socket, extensions) {\n  if (this instanceof Sender === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  events.EventEmitter.call(this);\n\n  this._socket = socket;\n  this.extensions = extensions || {};\n  this.firstFragment = true;\n  this.compress = false;\n  this.messageHandlers = [];\n  this.processing = false;\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function(code, data, mask, cb) {\n  if (typeof code !== 'undefined') {\n    if (typeof code !== 'number' ||\n      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');\n  }\n  code = code || 1000;\n  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));\n  writeUInt16BE.call(dataBuffer, code, 0);\n  if (dataBuffer.length > 2) dataBuffer.write(data, 2);\n\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.frameAndSend(0x8, dataBuffer, true, mask);\n    callback();\n    if (typeof cb == 'function') cb();\n  });\n  this.flush();\n};\n\n/**\n * Sends a ping message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.ping = function(data, options) {\n  var mask = options && options.mask;\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.frameAndSend(0x9, data || '', true, mask);\n    callback();\n  });\n  this.flush();\n};\n\n/**\n * Sends a pong message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.pong = function(data, options) {\n  var mask = options && options.mask;\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.frameAndSend(0xa, data || '', true, mask);\n    callback();\n  });\n  this.flush();\n};\n\n/**\n * Sends text or binary data to the remote party.\n *\n * @api public\n */\n\nSender.prototype.send = function(data, options, cb) {\n  var finalFragment = options && options.fin === false ? false : true;\n  var mask = options && options.mask;\n  var compress = options && options.compress;\n  var opcode = options && options.binary ? 2 : 1;\n  if (this.firstFragment === false) {\n    opcode = 0;\n    compress = false;\n  } else {\n    this.firstFragment = false;\n    this.compress = compress;\n  }\n  if (finalFragment) this.firstFragment = true\n\n  var compressFragment = this.compress;\n\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.applyExtensions(data, finalFragment, compressFragment, function(err, data) {\n      if (err) {\n        if (typeof cb == 'function') cb(err);\n        else self.emit('error', err);\n        return;\n      }\n      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);\n      callback();\n    });\n  });\n  this.flush();\n};\n\n/**\n * Frames and sends a piece of data according to the HyBi WebSocket protocol.\n *\n * @api private\n */\n\nSender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, compressed, cb) {\n  var canModifyData = false;\n\n  if (!data) {\n    try {\n      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);\n    }\n    catch (e) {\n      if (typeof cb == 'function') cb(e);\n      else this.emit('error', e);\n    }\n    return;\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    canModifyData = true;\n    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {\n      data = getArrayBuffer(data);\n    } else {\n      //\n      // If people want to send a number, this would allocate the number in\n      // bytes as memory size instead of storing the number as buffer value. So\n      // we need to transform it to string in order to prevent possible\n      // vulnerabilities / memory attacks.\n      //\n      if (typeof data === 'number') data = data.toString();\n\n      data = new Buffer(data);\n    }\n  }\n\n  var dataLength = data.length\n    , dataOffset = maskData ? 6 : 2\n    , secondByte = dataLength;\n\n  if (dataLength >= 65536) {\n    dataOffset += 8;\n    secondByte = 127;\n  }\n  else if (dataLength > 125) {\n    dataOffset += 2;\n    secondByte = 126;\n  }\n\n  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);\n  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;\n  var outputBuffer = new Buffer(totalLength);\n  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;\n  if (compressed) outputBuffer[0] |= 0x40;\n\n  switch (secondByte) {\n    case 126:\n      writeUInt16BE.call(outputBuffer, dataLength, 2);\n      break;\n    case 127:\n      writeUInt32BE.call(outputBuffer, 0, 2);\n      writeUInt32BE.call(outputBuffer, dataLength, 6);\n  }\n\n  if (maskData) {\n    outputBuffer[1] = secondByte | 0x80;\n    var mask = this._randomMask || (this._randomMask = getRandomMask());\n    outputBuffer[dataOffset - 4] = mask[0];\n    outputBuffer[dataOffset - 3] = mask[1];\n    outputBuffer[dataOffset - 2] = mask[2];\n    outputBuffer[dataOffset - 1] = mask[3];\n    if (mergeBuffers) {\n      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n    else {\n      bufferUtil.mask(data, mask, data, 0, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n  }\n  else {\n    outputBuffer[1] = secondByte;\n    if (mergeBuffers) {\n      data.copy(outputBuffer, dataOffset);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n    else {\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n  }\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nSender.prototype.flush = function() {\n  if (this.processing) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nSender.prototype.applyExtensions = function(data, fin, compress, callback) {\n  if (compress && data) {\n    if ((data.buffer || data) instanceof ArrayBuffer) {\n      data = getArrayBuffer(data);\n    }\n    this.extensions[PerMessageDeflate.extensionName].compress(data, fin, callback);\n  } else {\n    callback(null, data);\n  }\n};\n\nmodule.exports = Sender;\n\nfunction writeUInt16BE(value, offset) {\n  this[offset] = (value & 0xff00)>>8;\n  this[offset+1] = value & 0xff;\n}\n\nfunction writeUInt32BE(value, offset) {\n  this[offset] = (value & 0xff000000)>>24;\n  this[offset+1] = (value & 0xff0000)>>16;\n  this[offset+2] = (value & 0xff00)>>8;\n  this[offset+3] = value & 0xff;\n}\n\nfunction getArrayBuffer(data) {\n  // data is either an ArrayBuffer or ArrayBufferView.\n  var array = new Uint8Array(data.buffer || data)\n    , l = data.byteLength || data.length\n    , o = data.byteOffset || 0\n    , buffer = new Buffer(l);\n  for (var i = 0; i < l; ++i) {\n    buffer[i] = array[o+i];\n  }\n  return buffer;\n}\n\nfunction getRandomMask() {\n  return new Buffer([\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255)\n  ]);\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./BufferUtil\":55,\"./ErrorCodes\":56,\"./PerMessageDeflate\":58,\"buffer\":116,\"events\":154,\"util\":229}],63:[function(require,module,exports){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n \nmodule.exports.Validation = {\n  isValidUTF8: function(buffer) {\n    return true;\n  }\n};\n\n\n},{}],64:[function(require,module,exports){\n'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\ntry {\n  module.exports = require('utf-8-validate');\n} catch (e) {\n  module.exports = require('./Validation.fallback');\n}\n\n},{\"./Validation.fallback\":63,\"utf-8-validate\":50}],65:[function(require,module,exports){\n(function (process,Buffer){\n'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar url = require('url')\n  , util = require('util')\n  , http = require('http')\n  , https = require('https')\n  , crypto = require('crypto')\n  , stream = require('stream')\n  , Ultron = require('ultron')\n  , Options = require('options')\n  , Sender = require('./Sender')\n  , Receiver = require('./Receiver')\n  , SenderHixie = require('./Sender.hixie')\n  , ReceiverHixie = require('./Receiver.hixie')\n  , Extensions = require('./Extensions')\n  , PerMessageDeflate = require('./PerMessageDeflate')\n  , EventEmitter = require('events').EventEmitter;\n\n/**\n * Constants\n */\n\n// Default protocol version\n\nvar protocolVersion = 13;\n\n// Close timeout\n\nvar closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly\n\n/**\n * WebSocket implementation\n *\n * @constructor\n * @param {String} address Connection address.\n * @param {String|Array} protocols WebSocket protocols.\n * @param {Object} options Additional connection options.\n * @api public\n */\nfunction WebSocket(address, protocols, options) {\n  if (this instanceof WebSocket === false) {\n    return new WebSocket(address, protocols, options);\n  }\n\n  EventEmitter.call(this);\n\n  if (protocols && !Array.isArray(protocols) && 'object' === typeof protocols) {\n    // accept the \"options\" Object as the 2nd argument\n    options = protocols;\n    protocols = null;\n  }\n\n  if ('string' === typeof protocols) {\n    protocols = [ protocols ];\n  }\n\n  if (!Array.isArray(protocols)) {\n    protocols = [];\n  }\n\n  this._socket = null;\n  this._ultron = null;\n  this._closeReceived = false;\n  this.bytesReceived = 0;\n  this.readyState = null;\n  this.supports = {};\n  this.extensions = {};\n\n  if (Array.isArray(address)) {\n    initAsServerClient.apply(this, address.concat(options));\n  } else {\n    initAsClient.apply(this, [address, protocols, options]);\n  }\n}\n\n/**\n * Inherits from EventEmitter.\n */\nutil.inherits(WebSocket, EventEmitter);\n\n/**\n * Ready States\n */\n[\"CONNECTING\", \"OPEN\", \"CLOSING\", \"CLOSED\"].forEach(function each(state, index) {\n    WebSocket.prototype[state] = WebSocket[state] = index;\n});\n\n/**\n * Gracefully closes the connection, after sending a description message to the server\n *\n * @param {Object} data to be sent to the server\n * @api public\n */\nWebSocket.prototype.close = function close(code, data) {\n  if (this.readyState === WebSocket.CLOSED) return;\n\n  if (this.readyState === WebSocket.CONNECTING) {\n    this.readyState = WebSocket.CLOSED;\n    return;\n  }\n\n  if (this.readyState === WebSocket.CLOSING) {\n    if (this._closeReceived && this._isServer) {\n      this.terminate();\n    }\n    return;\n  }\n\n  var self = this;\n  try {\n    this.readyState = WebSocket.CLOSING;\n    this._closeCode = code;\n    this._closeMessage = data;\n    var mask = !this._isServer;\n    this._sender.close(code, data, mask, function(err) {\n      if (err) self.emit('error', err);\n\n      if (self._closeReceived && self._isServer) {\n        self.terminate();\n      } else {\n        // ensure that the connection is cleaned up even when no response of closing handshake.\n        clearTimeout(self._closeTimer);\n        self._closeTimer = setTimeout(cleanupWebsocketResources.bind(self, true), closeTimeout);\n      }\n    });\n  } catch (e) {\n    this.emit('error', e);\n  }\n};\n\n/**\n * Pause the client stream\n *\n * @api public\n */\nWebSocket.prototype.pause = function pauser() {\n  if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n  return this._socket.pause();\n};\n\n/**\n * Sends a ping\n *\n * @param {Object} data to be sent to the server\n * @param {Object} Members - mask: boolean, binary: boolean\n * @param {boolean} dontFailWhenClosed indicates whether or not to throw if the connection isnt open\n * @api public\n */\nWebSocket.prototype.ping = function ping(data, options, dontFailWhenClosed) {\n  if (this.readyState !== WebSocket.OPEN) {\n    if (dontFailWhenClosed === true) return;\n    throw new Error('not opened');\n  }\n\n  options = options || {};\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n\n  this._sender.ping(data, options);\n};\n\n/**\n * Sends a pong\n *\n * @param {Object} data to be sent to the server\n * @param {Object} Members - mask: boolean, binary: boolean\n * @param {boolean} dontFailWhenClosed indicates whether or not to throw if the connection isnt open\n * @api public\n */\nWebSocket.prototype.pong = function(data, options, dontFailWhenClosed) {\n  if (this.readyState !== WebSocket.OPEN) {\n    if (dontFailWhenClosed === true) return;\n    throw new Error('not opened');\n  }\n\n  options = options || {};\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n\n  this._sender.pong(data, options);\n};\n\n/**\n * Resume the client stream\n *\n * @api public\n */\nWebSocket.prototype.resume = function resume() {\n  if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n  return this._socket.resume();\n};\n\n/**\n * Sends a piece of data\n *\n * @param {Object} data to be sent to the server\n * @param {Object} Members - mask: boolean, binary: boolean, compress: boolean\n * @param {function} Optional callback which is executed after the send completes\n * @api public\n */\n\nWebSocket.prototype.send = function send(data, options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  if (this.readyState !== WebSocket.OPEN) {\n    if (typeof cb === 'function') cb(new Error('not opened'));\n    else throw new Error('not opened');\n    return;\n  }\n\n  if (!data) data = '';\n  if (this._queue) {\n    var self = this;\n    this._queue.push(function() { self.send(data, options, cb); });\n    return;\n  }\n\n  options = options || {};\n  options.fin = true;\n\n  if (typeof options.binary === 'undefined') {\n    options.binary = (data instanceof ArrayBuffer || data instanceof Buffer ||\n      data instanceof Uint8Array ||\n      data instanceof Uint16Array ||\n      data instanceof Uint32Array ||\n      data instanceof Int8Array ||\n      data instanceof Int16Array ||\n      data instanceof Int32Array ||\n      data instanceof Float32Array ||\n      data instanceof Float64Array);\n  }\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n  if (typeof options.compress === 'undefined') options.compress = true;\n  if (!this.extensions[PerMessageDeflate.extensionName]) {\n    options.compress = false;\n  }\n\n  var readable = typeof stream.Readable === 'function'\n    ? stream.Readable\n    : stream.Stream;\n\n  if (data instanceof readable) {\n    startQueue(this);\n    var self = this;\n\n    sendStream(this, data, options, function send(error) {\n      process.nextTick(function tock() {\n        executeQueueSends(self);\n      });\n\n      if (typeof cb === 'function') cb(error);\n    });\n  } else {\n    this._sender.send(data, options, cb);\n  }\n};\n\n/**\n * Streams data through calls to a user supplied function\n *\n * @param {Object} Members - mask: boolean, binary: boolean, compress: boolean\n * @param {function} 'function (error, send)' which is executed on successive ticks of which send is 'function (data, final)'.\n * @api public\n */\nWebSocket.prototype.stream = function stream(options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  var self = this;\n\n  if (typeof cb !== 'function') throw new Error('callback must be provided');\n\n  if (this.readyState !== WebSocket.OPEN) {\n    if (typeof cb === 'function') cb(new Error('not opened'));\n    else throw new Error('not opened');\n    return;\n  }\n\n  if (this._queue) {\n    this._queue.push(function () { self.stream(options, cb); });\n    return;\n  }\n\n  options = options || {};\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n  if (typeof options.compress === 'undefined') options.compress = true;\n  if (!this.extensions[PerMessageDeflate.extensionName]) {\n    options.compress = false;\n  }\n\n  startQueue(this);\n\n  function send(data, final) {\n    try {\n      if (self.readyState !== WebSocket.OPEN) throw new Error('not opened');\n      options.fin = final === true;\n      self._sender.send(data, options);\n      if (!final) process.nextTick(cb.bind(null, null, send));\n      else executeQueueSends(self);\n    } catch (e) {\n      if (typeof cb === 'function') cb(e);\n      else {\n        delete self._queue;\n        self.emit('error', e);\n      }\n    }\n  }\n\n  process.nextTick(cb.bind(null, null, send));\n};\n\n/**\n * Immediately shuts down the connection\n *\n * @api public\n */\nWebSocket.prototype.terminate = function terminate() {\n  if (this.readyState === WebSocket.CLOSED) return;\n\n  if (this._socket) {\n    this.readyState = WebSocket.CLOSING;\n\n    // End the connection\n    try { this._socket.end(); }\n    catch (e) {\n      // Socket error during end() call, so just destroy it right now\n      cleanupWebsocketResources.call(this, true);\n      return;\n    }\n\n    // Add a timeout to ensure that the connection is completely\n    // cleaned up within 30 seconds, even if the clean close procedure\n    // fails for whatever reason\n    // First cleanup any pre-existing timeout from an earlier \"terminate\" call,\n    // if one exists.  Otherwise terminate calls in quick succession will leak timeouts\n    // and hold the program open for `closeTimout` time.\n    if (this._closeTimer) { clearTimeout(this._closeTimer); }\n    this._closeTimer = setTimeout(cleanupWebsocketResources.bind(this, true), closeTimeout);\n  } else if (this.readyState === WebSocket.CONNECTING) {\n    cleanupWebsocketResources.call(this, true);\n  }\n};\n\n/**\n * Expose bufferedAmount\n *\n * @api public\n */\nObject.defineProperty(WebSocket.prototype, 'bufferedAmount', {\n  get: function get() {\n    var amount = 0;\n    if (this._socket) {\n      amount = this._socket.bufferSize || 0;\n    }\n    return amount;\n  }\n});\n\n/**\n * Emulates the W3C Browser based WebSocket interface using function members.\n *\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\n['open', 'error', 'close', 'message'].forEach(function(method) {\n  Object.defineProperty(WebSocket.prototype, 'on' + method, {\n    /**\n     * Returns the current listener\n     *\n     * @returns {Mixed} the set function or undefined\n     * @api public\n     */\n    get: function get() {\n      var listener = this.listeners(method)[0];\n      return listener ? (listener._listener ? listener._listener : listener) : undefined;\n    },\n\n    /**\n     * Start listening for events\n     *\n     * @param {Function} listener the listener\n     * @returns {Mixed} the set function or undefined\n     * @api public\n     */\n    set: function set(listener) {\n      this.removeAllListeners(method);\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\n/**\n * Emulates the W3C Browser based WebSocket interface using addEventListener.\n *\n * @see https://developer.mozilla.org/en/DOM/element.addEventListener\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\nWebSocket.prototype.addEventListener = function(method, listener) {\n  var target = this;\n\n  function onMessage (data, flags) {\n    listener.call(target, new MessageEvent(data, !!flags.binary, target));\n  }\n\n  function onClose (code, message) {\n    listener.call(target, new CloseEvent(code, message, target));\n  }\n\n  function onError (event) {\n    event.type = 'error';\n    event.target = target;\n    listener.call(target, event);\n  }\n\n  function onOpen () {\n    listener.call(target, new OpenEvent(target));\n  }\n\n  if (typeof listener === 'function') {\n    if (method === 'message') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  }\n};\n\nmodule.exports = WebSocket;\nmodule.exports.buildHostHeader = buildHostHeader\n\n/**\n * W3C MessageEvent\n *\n * @see http://www.w3.org/TR/html5/comms.html\n * @constructor\n * @api private\n */\nfunction MessageEvent(dataArg, isBinary, target) {\n  this.type = 'message';\n  this.data = dataArg;\n  this.target = target;\n  this.binary = isBinary; // non-standard.\n}\n\n/**\n * W3C CloseEvent\n *\n * @see http://www.w3.org/TR/html5/comms.html\n * @constructor\n * @api private\n */\nfunction CloseEvent(code, reason, target) {\n  this.type = 'close';\n  this.wasClean = (typeof code === 'undefined' || code === 1000);\n  this.code = code;\n  this.reason = reason;\n  this.target = target;\n}\n\n/**\n * W3C OpenEvent\n *\n * @see http://www.w3.org/TR/html5/comms.html\n * @constructor\n * @api private\n */\nfunction OpenEvent(target) {\n  this.type = 'open';\n  this.target = target;\n}\n\n// Append port number to Host header, only if specified in the url\n// and non-default\nfunction buildHostHeader(isSecure, hostname, port) {\n  var headerHost = hostname;\n  if (hostname) {\n    if ((isSecure && (port != 443)) || (!isSecure && (port != 80))){\n      headerHost = headerHost + ':' + port;\n    }\n  }\n  return headerHost;\n}\n\n/**\n * Entirely private apis,\n * which may or may not be bound to a sepcific WebSocket instance.\n */\nfunction initAsServerClient(req, socket, upgradeHead, options) {\n  options = new Options({\n    protocolVersion: protocolVersion,\n    protocol: null,\n    extensions: {}\n  }).merge(options);\n\n  // expose state properties\n  this.protocol = options.value.protocol;\n  this.protocolVersion = options.value.protocolVersion;\n  this.extensions = options.value.extensions;\n  this.supports.binary = (this.protocolVersion !== 'hixie-76');\n  this.upgradeReq = req;\n  this.readyState = WebSocket.CONNECTING;\n  this._isServer = true;\n\n  // establish connection\n  if (options.value.protocolVersion === 'hixie-76') {\n    establishConnection.call(this, ReceiverHixie, SenderHixie, socket, upgradeHead);\n  } else {\n    establishConnection.call(this, Receiver, Sender, socket, upgradeHead);\n  }\n}\n\nfunction initAsClient(address, protocols, options) {\n  options = new Options({\n    origin: null,\n    protocolVersion: protocolVersion,\n    host: null,\n    headers: null,\n    protocol: protocols.join(','),\n    agent: null,\n\n    // ssl-related options\n    pfx: null,\n    key: null,\n    passphrase: null,\n    cert: null,\n    ca: null,\n    ciphers: null,\n    rejectUnauthorized: null,\n    perMessageDeflate: true,\n    localAddress: null\n  }).merge(options);\n\n  if (options.value.protocolVersion !== 8 && options.value.protocolVersion !== 13) {\n    throw new Error('unsupported protocol version');\n  }\n\n  // verify URL and establish http class\n  var serverUrl = url.parse(address);\n  var isUnixSocket = serverUrl.protocol === 'ws+unix:';\n  if (!serverUrl.host && !isUnixSocket) throw new Error('invalid url');\n  var isSecure = serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:';\n  var httpObj = isSecure ? https : http;\n  var port = serverUrl.port || (isSecure ? 443 : 80);\n  var auth = serverUrl.auth;\n\n  // prepare extensions\n  var extensionsOffer = {};\n  var perMessageDeflate;\n  if (options.value.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(typeof options.value.perMessageDeflate !== true ? options.value.perMessageDeflate : {}, false);\n    extensionsOffer[PerMessageDeflate.extensionName] = perMessageDeflate.offer();\n  }\n\n  // expose state properties\n  this._isServer = false;\n  this.url = address;\n  this.protocolVersion = options.value.protocolVersion;\n  this.supports.binary = (this.protocolVersion !== 'hixie-76');\n\n  // begin handshake\n  var key = new Buffer(options.value.protocolVersion + '-' + Date.now()).toString('base64');\n  var shasum = crypto.createHash('sha1');\n  shasum.update(key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n  var expectedServerKey = shasum.digest('base64');\n\n  var agent = options.value.agent;\n\n  var headerHost = buildHostHeader(isSecure, serverUrl.hostname, port)\n\n  var requestOptions = {\n    port: port,\n    host: serverUrl.hostname,\n    headers: {\n      'Connection': 'Upgrade',\n      'Upgrade': 'websocket',\n      'Host': headerHost,\n      'Sec-WebSocket-Version': options.value.protocolVersion,\n      'Sec-WebSocket-Key': key\n    }\n  };\n\n  // If we have basic auth.\n  if (auth) {\n    requestOptions.headers.Authorization = 'Basic ' + new Buffer(auth).toString('base64');\n  }\n\n  if (options.value.protocol) {\n    requestOptions.headers['Sec-WebSocket-Protocol'] = options.value.protocol;\n  }\n\n  if (options.value.host) {\n    requestOptions.headers.Host = options.value.host;\n  }\n\n  if (options.value.headers) {\n    for (var header in options.value.headers) {\n       if (options.value.headers.hasOwnProperty(header)) {\n        requestOptions.headers[header] = options.value.headers[header];\n       }\n    }\n  }\n\n  if (Object.keys(extensionsOffer).length) {\n    requestOptions.headers['Sec-WebSocket-Extensions'] = Extensions.format(extensionsOffer);\n  }\n\n  if (options.isDefinedAndNonNull('pfx')\n   || options.isDefinedAndNonNull('key')\n   || options.isDefinedAndNonNull('passphrase')\n   || options.isDefinedAndNonNull('cert')\n   || options.isDefinedAndNonNull('ca')\n   || options.isDefinedAndNonNull('ciphers')\n   || options.isDefinedAndNonNull('rejectUnauthorized')) {\n\n    if (options.isDefinedAndNonNull('pfx')) requestOptions.pfx = options.value.pfx;\n    if (options.isDefinedAndNonNull('key')) requestOptions.key = options.value.key;\n    if (options.isDefinedAndNonNull('passphrase')) requestOptions.passphrase = options.value.passphrase;\n    if (options.isDefinedAndNonNull('cert')) requestOptions.cert = options.value.cert;\n    if (options.isDefinedAndNonNull('ca')) requestOptions.ca = options.value.ca;\n    if (options.isDefinedAndNonNull('ciphers')) requestOptions.ciphers = options.value.ciphers;\n    if (options.isDefinedAndNonNull('rejectUnauthorized')) requestOptions.rejectUnauthorized = options.value.rejectUnauthorized;\n\n    if (!agent) {\n        // global agent ignores client side certificates\n        agent = new httpObj.Agent(requestOptions);\n    }\n  }\n\n  requestOptions.path = serverUrl.path || '/';\n\n  if (agent) {\n    requestOptions.agent = agent;\n  }\n\n  if (isUnixSocket) {\n    requestOptions.socketPath = serverUrl.pathname;\n  }\n\n  if (options.value.localAddress) {\n    requestOptions.localAddress = options.value.localAddress;\n  }\n\n  if (options.value.origin) {\n    if (options.value.protocolVersion < 13) requestOptions.headers['Sec-WebSocket-Origin'] = options.value.origin;\n    else requestOptions.headers.Origin = options.value.origin;\n  }\n\n  var self = this;\n  var req = httpObj.request(requestOptions);\n\n  req.on('error', function onerror(error) {\n    self.emit('error', error);\n    cleanupWebsocketResources.call(self, error);\n  });\n\n  req.once('response', function response(res) {\n    var error;\n\n    if (!self.emit('unexpected-response', req, res)) {\n      error = new Error('unexpected server response (' + res.statusCode + ')');\n      req.abort();\n      self.emit('error', error);\n    }\n\n    cleanupWebsocketResources.call(self, error);\n  });\n\n  req.once('upgrade', function upgrade(res, socket, upgradeHead) {\n    if (self.readyState === WebSocket.CLOSED) {\n      // client closed before server accepted connection\n      self.emit('close');\n      self.removeAllListeners();\n      socket.end();\n      return;\n    }\n\n    var serverKey = res.headers['sec-websocket-accept'];\n    if (typeof serverKey === 'undefined' || serverKey !== expectedServerKey) {\n      self.emit('error', 'invalid server key');\n      self.removeAllListeners();\n      socket.end();\n      return;\n    }\n\n    var serverProt = res.headers['sec-websocket-protocol'];\n    var protList = (options.value.protocol || \"\").split(/, */);\n    var protError = null;\n\n    if (!options.value.protocol && serverProt) {\n      protError = 'server sent a subprotocol even though none requested';\n    } else if (options.value.protocol && !serverProt) {\n      protError = 'server sent no subprotocol even though requested';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'server responded with an invalid protocol';\n    }\n\n    if (protError) {\n      self.emit('error', protError);\n      self.removeAllListeners();\n      socket.end();\n      return;\n    } else if (serverProt) {\n      self.protocol = serverProt;\n    }\n\n    var serverExtensions = Extensions.parse(res.headers['sec-websocket-extensions']);\n    if (perMessageDeflate && serverExtensions[PerMessageDeflate.extensionName]) {\n      try {\n        perMessageDeflate.accept(serverExtensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        self.emit('error', 'invalid extension parameter');\n        self.removeAllListeners();\n        socket.end();\n        return;\n      }\n      self.extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n    }\n\n    establishConnection.call(self, Receiver, Sender, socket, upgradeHead);\n\n    // perform cleanup on http resources\n    req.removeAllListeners();\n    req = null;\n    agent = null;\n  });\n\n  req.end();\n  this.readyState = WebSocket.CONNECTING;\n}\n\nfunction establishConnection(ReceiverClass, SenderClass, socket, upgradeHead) {\n  var ultron = this._ultron = new Ultron(socket)\n    , called = false\n    , self = this;\n\n  socket.setTimeout(0);\n  socket.setNoDelay(true);\n\n  this._receiver = new ReceiverClass(this.extensions);\n  this._socket = socket;\n\n  // socket cleanup handlers\n  ultron.on('end', cleanupWebsocketResources.bind(this));\n  ultron.on('close', cleanupWebsocketResources.bind(this));\n  ultron.on('error', cleanupWebsocketResources.bind(this));\n\n  // ensure that the upgradeHead is added to the receiver\n  function firstHandler(data) {\n    if (called || self.readyState === WebSocket.CLOSED) return;\n\n    called = true;\n    socket.removeListener('data', firstHandler);\n    ultron.on('data', realHandler);\n\n    if (upgradeHead && upgradeHead.length > 0) {\n      realHandler(upgradeHead);\n      upgradeHead = null;\n    }\n\n    if (data) realHandler(data);\n  }\n\n  // subsequent packets are pushed straight to the receiver\n  function realHandler(data) {\n    self.bytesReceived += data.length;\n    self._receiver.add(data);\n  }\n\n  ultron.on('data', firstHandler);\n\n  // if data was passed along with the http upgrade,\n  // this will schedule a push of that on to the receiver.\n  // this has to be done on next tick, since the caller\n  // hasn't had a chance to set event handlers on this client\n  // object yet.\n  process.nextTick(firstHandler);\n\n  // receiver event handlers\n  self._receiver.ontext = function ontext(data, flags) {\n    flags = flags || {};\n\n    self.emit('message', data, flags);\n  };\n\n  self._receiver.onbinary = function onbinary(data, flags) {\n    flags = flags || {};\n\n    flags.binary = true;\n    self.emit('message', data, flags);\n  };\n\n  self._receiver.onping = function onping(data, flags) {\n    flags = flags || {};\n\n    self.pong(data, {\n      mask: !self._isServer,\n      binary: flags.binary === true\n    }, true);\n\n    self.emit('ping', data, flags);\n  };\n\n  self._receiver.onpong = function onpong(data, flags) {\n    self.emit('pong', data, flags || {});\n  };\n\n  self._receiver.onclose = function onclose(code, data, flags) {\n    flags = flags || {};\n\n    self._closeReceived = true;\n    self.close(code, data);\n  };\n\n  self._receiver.onerror = function onerror(reason, errorCode) {\n    // close the connection when the receiver reports a HyBi error code\n    self.close(typeof errorCode !== 'undefined' ? errorCode : 1002, '');\n    self.emit('error', reason, errorCode);\n  };\n\n  // finalize the client\n  this._sender = new SenderClass(socket, this.extensions);\n  this._sender.on('error', function onerror(error) {\n    self.close(1002, '');\n    self.emit('error', error);\n  });\n\n  this.readyState = WebSocket.OPEN;\n  this.emit('open');\n}\n\nfunction startQueue(instance) {\n  instance._queue = instance._queue || [];\n}\n\nfunction executeQueueSends(instance) {\n  var queue = instance._queue;\n  if (typeof queue === 'undefined') return;\n\n  delete instance._queue;\n  for (var i = 0, l = queue.length; i < l; ++i) {\n    queue[i]();\n  }\n}\n\nfunction sendStream(instance, stream, options, cb) {\n  stream.on('data', function incoming(data) {\n    if (instance.readyState !== WebSocket.OPEN) {\n      if (typeof cb === 'function') cb(new Error('not opened'));\n      else {\n        delete instance._queue;\n        instance.emit('error', new Error('not opened'));\n      }\n      return;\n    }\n\n    options.fin = false;\n    instance._sender.send(data, options);\n  });\n\n  stream.on('end', function end() {\n    if (instance.readyState !== WebSocket.OPEN) {\n      if (typeof cb === 'function') cb(new Error('not opened'));\n      else {\n        delete instance._queue;\n        instance.emit('error', new Error('not opened'));\n      }\n      return;\n    }\n\n    options.fin = true;\n    instance._sender.send(null, options);\n\n    if (typeof cb === 'function') cb(null);\n  });\n}\n\nfunction cleanupWebsocketResources(error) {\n  if (this.readyState === WebSocket.CLOSED) return;\n\n  var emitClose = this.readyState !== WebSocket.CONNECTING;\n  this.readyState = WebSocket.CLOSED;\n\n  clearTimeout(this._closeTimer);\n  this._closeTimer = null;\n\n  if (emitClose) {\n    // If the connection was closed abnormally (with an error), or if\n    // the close control frame was not received then the close code\n    // must default to 1006.\n    if (error || !this._closeReceived) {\n      this._closeCode = 1006;\n    }\n    this.emit('close', this._closeCode || 1000, this._closeMessage || '');\n  }\n\n  if (this._socket) {\n    if (this._ultron) this._ultron.destroy();\n    this._socket.on('error', function onerror() {\n      try { this.destroy(); }\n      catch (e) {}\n    });\n\n    try {\n      if (!error) this._socket.end();\n      else this._socket.destroy();\n    } catch (e) { /* Ignore termination errors */ }\n\n    this._socket = null;\n    this._ultron = null;\n  }\n\n  if (this._sender) {\n    this._sender.removeAllListeners();\n    this._sender = null;\n  }\n\n  if (this._receiver) {\n    this._receiver.cleanup();\n    this._receiver = null;\n  }\n\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    this.extensions[PerMessageDeflate.extensionName].cleanup();\n  }\n\n  this.extensions = null;\n\n  this.removeAllListeners();\n  this.on('error', function onerror() {}); // catch all errors after this\n  delete this._queue;\n}\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n\n},{\"./Extensions\":57,\"./PerMessageDeflate\":58,\"./Receiver\":60,\"./Receiver.hixie\":59,\"./Sender\":62,\"./Sender.hixie\":61,\"_process\":188,\"buffer\":116,\"crypto\":126,\"events\":154,\"http\":220,\"https\":162,\"options\":34,\"stream\":219,\"ultron\":48,\"url\":225,\"util\":229}],66:[function(require,module,exports){\n(function (Buffer){\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , events = require('events')\n  , http = require('http')\n  , crypto = require('crypto')\n  , Options = require('options')\n  , WebSocket = require('./WebSocket')\n  , Extensions = require('./Extensions')\n  , PerMessageDeflate = require('./PerMessageDeflate')\n  , tls = require('tls')\n  , url = require('url');\n\n/**\n * WebSocket Server implementation\n */\n\nfunction WebSocketServer(options, callback) {\n  if (this instanceof WebSocketServer === false) {\n    return new WebSocketServer(options, callback);\n  }\n\n  events.EventEmitter.call(this);\n\n  options = new Options({\n    host: '0.0.0.0',\n    port: null,\n    server: null,\n    verifyClient: null,\n    handleProtocols: null,\n    path: null,\n    noServer: false,\n    disableHixie: false,\n    clientTracking: true,\n    perMessageDeflate: true\n  }).merge(options);\n\n  if (!options.isDefinedAndNonNull('port') && !options.isDefinedAndNonNull('server') && !options.value.noServer) {\n    throw new TypeError('`port` or a `server` must be provided');\n  }\n\n  var self = this;\n\n  if (options.isDefinedAndNonNull('port')) {\n    this._server = http.createServer(function (req, res) {\n      var body = http.STATUS_CODES[426];\n      res.writeHead(426, {\n        'Content-Length': body.length,\n        'Content-Type': 'text/plain'\n      });\n      res.end(body);\n    });\n    this._server.allowHalfOpen = false;\n    this._server.listen(options.value.port, options.value.host, callback);\n    this._closeServer = function() { if (self._server) self._server.close(); };\n  }\n  else if (options.value.server) {\n    this._server = options.value.server;\n    if (options.value.path) {\n      // take note of the path, to avoid collisions when multiple websocket servers are\n      // listening on the same http server\n      if (this._server._webSocketPaths && options.value.server._webSocketPaths[options.value.path]) {\n        throw new Error('two instances of WebSocketServer cannot listen on the same http server path');\n      }\n      if (typeof this._server._webSocketPaths !== 'object') {\n        this._server._webSocketPaths = {};\n      }\n      this._server._webSocketPaths[options.value.path] = 1;\n    }\n  }\n  if (this._server) this._server.once('listening', function() { self.emit('listening'); });\n\n  if (typeof this._server != 'undefined') {\n    this._server.on('error', function(error) {\n      self.emit('error', error)\n    });\n    this._server.on('upgrade', function(req, socket, upgradeHead) {\n      //copy upgradeHead to avoid retention of large slab buffers used in node core\n      var head = new Buffer(upgradeHead.length);\n      upgradeHead.copy(head);\n\n      self.handleUpgrade(req, socket, head, function(client) {\n        self.emit('connection'+req.url, client);\n        self.emit('connection', client);\n      });\n    });\n  }\n\n  this.options = options.value;\n  this.path = options.value.path;\n  this.clients = [];\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(WebSocketServer, events.EventEmitter);\n\n/**\n * Immediately shuts down the connection.\n *\n * @api public\n */\n\nWebSocketServer.prototype.close = function(callback) {\n  // terminate all associated clients\n  var error = null;\n  try {\n    for (var i = 0, l = this.clients.length; i < l; ++i) {\n      this.clients[i].terminate();\n    }\n  }\n  catch (e) {\n    error = e;\n  }\n\n  // remove path descriptor, if any\n  if (this.path && this._server._webSocketPaths) {\n    delete this._server._webSocketPaths[this.path];\n    if (Object.keys(this._server._webSocketPaths).length == 0) {\n      delete this._server._webSocketPaths;\n    }\n  }\n\n  // close the http server if it was internally created\n  try {\n    if (typeof this._closeServer !== 'undefined') {\n      this._closeServer();\n    }\n  }\n  finally {\n    delete this._server;\n  }\n  if(callback)\n    callback(error);\n  else if(error)\n    throw error;\n}\n\n/**\n * Handle a HTTP Upgrade request.\n *\n * @api public\n */\n\nWebSocketServer.prototype.handleUpgrade = function(req, socket, upgradeHead, cb) {\n  // check for wrong path\n  if (this.options.path) {\n    var u = url.parse(req.url);\n    if (u && u.pathname !== this.options.path) return;\n  }\n\n  if (typeof req.headers.upgrade === 'undefined' || req.headers.upgrade.toLowerCase() !== 'websocket') {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  if (req.headers['sec-websocket-key1']) handleHixieUpgrade.apply(this, arguments);\n  else handleHybiUpgrade.apply(this, arguments);\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Entirely private apis,\n * which may or may not be bound to a sepcific WebSocket instance.\n */\n\nfunction handleHybiUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function() {\n    try { socket.destroy(); } catch (e) {}\n  }\n  socket.on('error', errorHandler);\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify version\n  var version = parseInt(req.headers['sec-websocket-version']);\n  if ([8, 13].indexOf(version) === -1) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify protocol\n  var protocols = req.headers['sec-websocket-protocol'];\n\n  // verify client\n  var origin = version < 13 ?\n    req.headers['sec-websocket-origin'] :\n    req.headers['origin'];\n\n  // handle extensions offer\n  var extensionsOffer = Extensions.parse(req.headers['sec-websocket-extensions']);\n\n  // handler to call when the connection sequence completes\n  var self = this;\n  var completeHybiUpgrade2 = function(protocol) {\n\n    // calc key\n    var key = req.headers['sec-websocket-key'];\n    var shasum = crypto.createHash('sha1');\n    shasum.update(key + \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\");\n    key = shasum.digest('base64');\n\n    var headers = [\n        'HTTP/1.1 101 Switching Protocols'\n      , 'Upgrade: websocket'\n      , 'Connection: Upgrade'\n      , 'Sec-WebSocket-Accept: ' + key\n    ];\n\n    if (typeof protocol != 'undefined') {\n      headers.push('Sec-WebSocket-Protocol: ' + protocol);\n    }\n\n    var extensions = {};\n    try {\n      extensions = acceptExtensions.call(self, extensionsOffer);\n    } catch (err) {\n      abortConnection(socket, 400, 'Bad Request');\n      return;\n    }\n\n    if (Object.keys(extensions).length) {\n      var serverExtensions = {};\n      Object.keys(extensions).forEach(function(token) {\n        serverExtensions[token] = [extensions[token].params]\n      });\n      headers.push('Sec-WebSocket-Extensions: ' + Extensions.format(serverExtensions));\n    }\n\n    // allows external modification/inspection of handshake headers\n    self.emit('headers', headers);\n\n    socket.setTimeout(0);\n    socket.setNoDelay(true);\n    try {\n      socket.write(headers.concat('', '').join('\\r\\n'));\n    }\n    catch (e) {\n      // if the upgrade write fails, shut the connection down hard\n      try { socket.destroy(); } catch (e) {}\n      return;\n    }\n\n    var client = new WebSocket([req, socket, upgradeHead], {\n      protocolVersion: version,\n      protocol: protocol,\n      extensions: extensions\n    });\n\n    if (self.options.clientTracking) {\n      self.clients.push(client);\n      client.on('close', function() {\n        var index = self.clients.indexOf(client);\n        if (index != -1) {\n          self.clients.splice(index, 1);\n        }\n      });\n    }\n\n    // signal upgrade complete\n    socket.removeListener('error', errorHandler);\n    cb(client);\n  }\n\n  // optionally call external protocol selection handler before\n  // calling completeHybiUpgrade2\n  var completeHybiUpgrade1 = function() {\n    // choose from the sub-protocols\n    if (typeof self.options.handleProtocols == 'function') {\n        var protList = (protocols || \"\").split(/, */);\n        var callbackCalled = false;\n        var res = self.options.handleProtocols(protList, function(result, protocol) {\n          callbackCalled = true;\n          if (!result) abortConnection(socket, 401, 'Unauthorized');\n          else completeHybiUpgrade2(protocol);\n        });\n        if (!callbackCalled) {\n            // the handleProtocols handler never called our callback\n            abortConnection(socket, 501, 'Could not process protocols');\n        }\n        return;\n    } else {\n        if (typeof protocols !== 'undefined') {\n            completeHybiUpgrade2(protocols.split(/, */)[0]);\n        }\n        else {\n            completeHybiUpgrade2();\n        }\n    }\n  }\n\n  // optionally call external client verification handler\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      this.options.verifyClient(info, function(result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n\n        if (!result) abortConnection(socket, code, name);\n        else completeHybiUpgrade1();\n      });\n      return;\n    }\n    else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n\n  completeHybiUpgrade1();\n}\n\nfunction handleHixieUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function() {\n    try { socket.destroy(); } catch (e) {}\n  }\n  socket.on('error', errorHandler);\n\n  // bail if options prevent hixie\n  if (this.options.disableHixie) {\n    abortConnection(socket, 401, 'Hixie support disabled');\n    return;\n  }\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key2']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  var origin = req.headers['origin']\n    , self = this;\n\n  // setup handshake completion to run after client has been verified\n  var onClientVerified = function() {\n    var wshost;\n    if (!req.headers['x-forwarded-host'])\n        wshost = req.headers.host;\n    else\n        wshost = req.headers['x-forwarded-host'];\n    var location = ((req.headers['x-forwarded-proto'] === 'https' || socket.encrypted) ? 'wss' : 'ws') + '://' + wshost + req.url\n      , protocol = req.headers['sec-websocket-protocol'];\n\n    // handshake completion code to run once nonce has been successfully retrieved\n    var completeHandshake = function(nonce, rest) {\n      // calculate key\n      var k1 = req.headers['sec-websocket-key1']\n        , k2 = req.headers['sec-websocket-key2']\n        , md5 = crypto.createHash('md5');\n\n      [k1, k2].forEach(function (k) {\n        var n = parseInt(k.replace(/[^\\d]/g, ''))\n          , spaces = k.replace(/[^ ]/g, '').length;\n        if (spaces === 0 || n % spaces !== 0){\n          abortConnection(socket, 400, 'Bad Request');\n          return;\n        }\n        n /= spaces;\n        md5.update(String.fromCharCode(\n          n >> 24 & 0xFF,\n          n >> 16 & 0xFF,\n          n >> 8  & 0xFF,\n          n       & 0xFF));\n      });\n      md5.update(nonce.toString('binary'));\n\n      var headers = [\n          'HTTP/1.1 101 Switching Protocols'\n        , 'Upgrade: WebSocket'\n        , 'Connection: Upgrade'\n        , 'Sec-WebSocket-Location: ' + location\n      ];\n      if (typeof protocol != 'undefined') headers.push('Sec-WebSocket-Protocol: ' + protocol);\n      if (typeof origin != 'undefined') headers.push('Sec-WebSocket-Origin: ' + origin);\n\n      socket.setTimeout(0);\n      socket.setNoDelay(true);\n      try {\n        // merge header and hash buffer\n        var headerBuffer = new Buffer(headers.concat('', '').join('\\r\\n'));\n        var hashBuffer = new Buffer(md5.digest('binary'), 'binary');\n        var handshakeBuffer = new Buffer(headerBuffer.length + hashBuffer.length);\n        headerBuffer.copy(handshakeBuffer, 0);\n        hashBuffer.copy(handshakeBuffer, headerBuffer.length);\n\n        // do a single write, which - upon success - causes a new client websocket to be setup\n        socket.write(handshakeBuffer, 'binary', function(err) {\n          if (err) return; // do not create client if an error happens\n          var client = new WebSocket([req, socket, rest], {\n            protocolVersion: 'hixie-76',\n            protocol: protocol\n          });\n          if (self.options.clientTracking) {\n            self.clients.push(client);\n            client.on('close', function() {\n              var index = self.clients.indexOf(client);\n              if (index != -1) {\n                self.clients.splice(index, 1);\n              }\n            });\n          }\n\n          // signal upgrade complete\n          socket.removeListener('error', errorHandler);\n          cb(client);\n        });\n      }\n      catch (e) {\n        try { socket.destroy(); } catch (e) {}\n        return;\n      }\n    }\n\n    // retrieve nonce\n    var nonceLength = 8;\n    if (upgradeHead && upgradeHead.length >= nonceLength) {\n      var nonce = upgradeHead.slice(0, nonceLength);\n      var rest = upgradeHead.length > nonceLength ? upgradeHead.slice(nonceLength) : null;\n      completeHandshake.call(self, nonce, rest);\n    }\n    else {\n      // nonce not present in upgradeHead, so we must wait for enough data\n      // data to arrive before continuing\n      var nonce = new Buffer(nonceLength);\n      upgradeHead.copy(nonce, 0);\n      var received = upgradeHead.length;\n      var rest = null;\n      var handler = function (data) {\n        var toRead = Math.min(data.length, nonceLength - received);\n        if (toRead === 0) return;\n        data.copy(nonce, received, 0, toRead);\n        received += toRead;\n        if (received == nonceLength) {\n          socket.removeListener('data', handler);\n          if (toRead < data.length) rest = data.slice(toRead);\n          completeHandshake.call(self, nonce, rest);\n        }\n      }\n      socket.on('data', handler);\n    }\n  }\n\n  // verify client\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      var self = this;\n      this.options.verifyClient(info, function(result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n\n        if (!result) abortConnection(socket, code, name);\n        else onClientVerified.apply(self);\n      });\n      return;\n    }\n    else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n\n  // no client verification required\n  onClientVerified();\n}\n\nfunction acceptExtensions(offer) {\n  var extensions = {};\n  var options = this.options.perMessageDeflate;\n  if (options && offer[PerMessageDeflate.extensionName]) {\n    var perMessageDeflate = new PerMessageDeflate(options !== true ? options : {}, true);\n    perMessageDeflate.accept(offer[PerMessageDeflate.extensionName]);\n    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n  }\n  return extensions;\n}\n\nfunction abortConnection(socket, code, name) {\n  try {\n    var response = [\n      'HTTP/1.1 ' + code + ' ' + name,\n      'Content-type: text/html'\n    ];\n    socket.write(response.concat('', '').join('\\r\\n'));\n  }\n  catch (e) { /* ignore errors - we've aborted this connection */ }\n  finally {\n    // ensure that an early aborted connection is shut down completely\n    try { socket.destroy(); } catch (e) {}\n  }\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./Extensions\":57,\"./PerMessageDeflate\":58,\"./WebSocket\":65,\"buffer\":116,\"crypto\":126,\"events\":154,\"http\":220,\"options\":34,\"tls\":114,\"url\":225,\"util\":229}],67:[function(require,module,exports){\n'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n},{}],68:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar io = require('socket.io-client');\n\nfunction extend(Y) {\n  var Connector = function (_Y$AbstractConnector) {\n    _inherits(Connector, _Y$AbstractConnector);\n\n    function Connector(y, options) {\n      _classCallCheck(this, Connector);\n\n      if (options === undefined) {\n        throw new Error('Options must not be undefined!');\n      }\n      if (options.room == null) {\n        throw new Error('You must define a room name!');\n      }\n      options.role = 'slave';\n\n      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Connector).call(this, y, options));\n\n      _this.options = options;\n      if (options.url == null) {\n        var protocol = '073'; // version 0.7.3\n        // if not defined, try to match protocol\n        if (typeof window !== 'undefined' || window.location.protocol === 'http:') {\n          // always runs on port \"6\"+protocol\n          options.url = 'https://yjs.dbis.rwth-aachen.de:6' + protocol;\n        } else {\n          // always runs on port \"5\"+protocol\n          options.url = 'http://yjs.dbis.rwth-aachen.de:5' + protocol;\n        }\n      }\n      var socket = io(options.url);\n      _this.socket = socket;\n      var self = _this;\n      if (socket.connected) {\n        joinRoom();\n      } else {\n        socket.on('connect', joinRoom);\n      }\n      function joinRoom() {\n        socket.emit('joinRoom', options.room);\n        self.userJoined('server', 'master');\n\n        socket.on('yjsEvent', function (message) {\n          if (message.type != null) {\n            if (message.type === 'sync done') {\n              self.setUserId(socket.id);\n            }\n            if (message.room === options.room) {\n              self.receiveMessage('server', message);\n            }\n          }\n        });\n\n        socket.on('disconnect', function (peer) {\n          self.userLeft('server');\n        });\n      }\n      return _this;\n    }\n\n    _createClass(Connector, [{\n      key: 'disconnect',\n      value: function disconnect() {\n        this.socket.disconnect();\n        _get(Object.getPrototypeOf(Connector.prototype), 'disconnect', this).call(this);\n      }\n    }, {\n      key: 'reconnect',\n      value: function reconnect() {\n        this.socket.connect();\n        this.socket.emit('joinRoom', this.options.room);\n        this.userJoined('server', 'master');\n        _get(Object.getPrototypeOf(Connector.prototype), 'reconnect', this).call(this);\n      }\n    }, {\n      key: 'send',\n      value: function send(uid, message) {\n        message.room = this.options.room;\n        this.socket.emit('yjsEvent', message);\n      }\n    }, {\n      key: 'broadcast',\n      value: function broadcast(message) {\n        message.room = this.options.room;\n        this.socket.emit('yjsEvent', message);\n      }\n    }, {\n      key: 'isDisconnected',\n      value: function isDisconnected() {\n        return this.socket.disconnected;\n      }\n    }]);\n\n    return Connector;\n  }(Y.AbstractConnector);\n\n  Y.extend('websockets-client', Connector);\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{\"socket.io-client\":38}],69:[function(require,module,exports){\nvar asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n\n},{\"./asn1/api\":70,\"./asn1/base\":72,\"./asn1/constants\":76,\"./asn1/decoders\":78,\"./asn1/encoders\":81,\"bn.js\":85}],70:[function(require,module,exports){\nvar asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n\n},{\"../asn1\":69,\"inherits\":165,\"vm\":230}],71:[function(require,module,exports){\nvar inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n\n},{\"../base\":72,\"buffer\":116,\"inherits\":165}],72:[function(require,module,exports){\nvar base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n\n},{\"./buffer\":71,\"./node\":73,\"./reporter\":74}],73:[function(require,module,exports){\nvar Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'octstr', 'bitstr', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'ia5str', 'utf8str', 'bmpstr',\n  'numstr', 'printstr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input);\n        else\n          this._decodeChoice(input);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input);\n    else\n      result = this._decodeChoice(input);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      var fail = state.children.some(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input);\n      });\n      if (fail)\n        return err;\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0]);\n  else if (tag === 'octstr' || tag === 'bitstr')\n    return this._decodeStr(input, tag);\n  else if (tag === 'ia5str' || tag === 'utf8str' || tag === 'bmpstr')\n    return this._decodeStr(input, tag);\n  else if (tag === 'numstr' || tag === 'printstr')\n    return this._decodeStr(input, tag);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag);\n  else if (tag === 'null_')\n    return this._decodeNull(input);\n  else if (tag === 'bool')\n    return this._decodeBool(input);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0]);\n  else if (state.use !== null)\n    return this._getUse(state.use, input._reporterState.obj)._decode(input);\n  else\n    return input.error('unknown tag: ' + tag);\n\n  return null;\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n  var present = true;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // For error reporting\n  var prevKey;\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be ommited only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (tag === 'octstr' || tag === 'bitstr' || tag === 'ia5str')\n    return this._encodeStr(data, tag);\n  else if (tag === 'utf8str' || tag === 'bmpstr')\n    return this._encodeStr(data, tag);\n  else if (tag === 'numstr' || tag === 'printstr')\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n},{\"../base\":72,\"minimalistic-assert\":169}],74:[function(require,module,exports){\nvar inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  Error.captureStackTrace(this, ReporterError);\n\n  return this;\n};\n\n},{\"inherits\":165}],75:[function(require,module,exports){\nvar constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n\n},{\"../constants\":76}],76:[function(require,module,exports){\nvar constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n\n},{\"./der\":75}],77:[function(require,module,exports){\nvar inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der');\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'ia5str' || tag === 'utf8str') {\n    return buffer.raw().toString();\n  } else if(tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n\n    return numstr;\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n\n    return printstr;\n  } else if(tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num >= 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n\n},{\"../../asn1\":69,\"inherits\":165}],78:[function(require,module,exports){\nvar decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n\n},{\"./der\":77,\"./pem\":79}],79:[function(require,module,exports){\nvar inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n\n},{\"../../asn1\":69,\"./der\":77,\"buffer\":116,\"inherits\":165}],80:[function(require,module,exports){\nvar inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'octstr') {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'ia5str' || tag === 'utf8str') {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n\n},{\"../../asn1\":69,\"buffer\":116,\"inherits\":165}],81:[function(require,module,exports){\nvar encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n\n},{\"./der\":80,\"./pem\":82}],82:[function(require,module,exports){\nvar inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n\n},{\"../../asn1\":69,\"./der\":80,\"buffer\":116,\"inherits\":165}],83:[function(require,module,exports){\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// when used in node, this will actually load the util module we depend on\n// versus loading the builtin util module as happens otherwise\n// this is a bug in node module loading as far as I am concerned\nvar util = require('util/');\n\nvar pSlice = Array.prototype.slice;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  }\n  else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = stackStartFunction.name;\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction replacer(key, value) {\n  if (util.isUndefined(value)) {\n    return '' + value;\n  }\n  if (util.isNumber(value) && !isFinite(value)) {\n    return value.toString();\n  }\n  if (util.isFunction(value) || util.isRegExp(value)) {\n    return value.toString();\n  }\n  return value;\n}\n\nfunction truncate(s, n) {\n  if (util.isString(s)) {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction getMessage(self) {\n  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(JSON.stringify(self.expected, replacer), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {\n    if (actual.length != expected.length) return false;\n\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i] !== expected[i]) return false;\n    }\n\n    return true;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!util.isObject(actual) && !util.isObject(expected)) {\n    return actual == expected;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b) {\n  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b)) {\n    return a === b;\n  }\n  var aIsArgs = isArguments(a),\n      bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b);\n  }\n  var ka = objectKeys(a),\n      kb = objectKeys(b),\n      key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  } else if (actual instanceof expected) {\n    return true;\n  } else if (expected.call({}, actual) === true) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (util.isString(expected)) {\n    message = expected;\n    expected = null;\n  }\n\n  try {\n    block();\n  } catch (e) {\n    actual = e;\n  }\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  if (!shouldThrow && expectedException(actual, expected)) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws.apply(this, [true].concat(pSlice.call(arguments)));\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/message) {\n  _throws.apply(this, [false].concat(pSlice.call(arguments)));\n};\n\nassert.ifError = function(err) { if (err) {throw err;}};\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n\n},{\"util/\":229}],84:[function(require,module,exports){\nvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n},{}],85:[function(require,module,exports){\n(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    // May be `new BN(bn)` ?\n    if (number !== null &&\n      typeof number === 'object' &&\n      Array.isArray(number.words)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    assert(this.bitLength() <= 53, 'Number can only safely store up to 53 bits');\n    return parseInt(this.toString(), 10);\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || byteLength;\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new Array(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    if (this.isZero()) return this.clone();\n\n    var r = this.clone();\n    r.negative = this.negative ^ 1;\n    return r;\n  };\n\n  BN.prototype.ineg = function ineg () {\n    this.negative ^= 1;\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    while (this.length < bytesNeeded) {\n      this.words[this.length++] = 0;\n    }\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    while (this.length <= off) {\n      this.words[this.length++] = 0;\n    }\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  /*\n  // NOTE: This could be potentionally used to generate loop-less multiplications\n  function _genCombMulTo(alen, blen) {\n    var len = alen + blen - 1;\n    var src = [\n      'var a = self.words;',\n      'var b = num.words;',\n      'var o = out.words;',\n      'var c = 0;',\n      'var lo;',\n      'var mid;',\n      'var hi;'\n    ];\n    for (var i = 0; i < alen; i++) {\n      src.push('var a' + i + ' = a[' + i + '] | 0;');\n      src.push('var al' + i + ' = a' + i + ' & 0x1fff;');\n      src.push('var ah' + i + ' = a' + i + ' >>> 13;');\n    }\n    for (var i = 0; i < blen; i++) {\n      src.push('var b' + i + ' = b[' + i + '] | 0;');\n      src.push('var bl' + i + ' = b' + i + ' & 0x1fff;');\n      src.push('var bh' + i + ' = b' + i + ' >>> 13;');\n    }\n    src.push('');\n    src.push('out.length = ' + len + ';');\n\n    for (var k = 0; k < len; k++) {\n      var minJ = Math.max(0, k - alen + 1);\n      var maxJ = Math.min(k, blen - 1);\n\n      src.push('\\/* k = ' + k + ' *\\/');\n      src.push('var w' + k + ' = c;');\n      src.push('c = 0;');\n      for (var j = minJ; j <= maxJ; j++) {\n        var i = k - j;\n\n        src.push('lo = Math.imul(al' + i + ', bl' + j + ');');\n        src.push('mid = Math.imul(al' + i + ', bh' + j + ');');\n        src.push('mid = (mid + Math.imul(ah' + i + ', bl' + j + ')) | 0;');\n        src.push('hi = Math.imul(ah' + i + ', bh' + j + ');');\n\n        src.push('w' + k + ' = (w' + k + ' + lo) | 0;');\n        src.push('w' + k + ' = (w' + k + ' + ((mid & 0x1fff) << 13)) | 0;');\n        src.push('c = (c + hi) | 0;');\n        src.push('c = (c + (mid >>> 13)) | 0;');\n        src.push('c = (c + (w' + k + ' >>> 26)) | 0;');\n        src.push('w' + k + ' &= 0x3ffffff;');\n      }\n    }\n    // Store in separate step for better memory access\n    for (var k = 0; k < len; k++)\n      src.push('o[' + k + '] = w' + k + ';');\n    src.push('if (c !== 0) {',\n             '  o[' + k + '] = c;',\n             '  out.length++;',\n             '}',\n             'return out;');\n\n    return src.join('\\n');\n  }\n  console.log(_genCombMulTo(10, 10));\n  */\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.length = 19;\n    /* k = 0 */\n    var w0 = c;\n    c = 0;\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    w0 = (w0 + lo) | 0;\n    w0 = (w0 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    var w1 = c;\n    c = 0;\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    w1 = (w1 + lo) | 0;\n    w1 = (w1 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    lo = Math.imul(al0, bl1);\n    mid = Math.imul(al0, bh1);\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = Math.imul(ah0, bh1);\n    w1 = (w1 + lo) | 0;\n    w1 = (w1 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    var w2 = c;\n    c = 0;\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    w2 = (w2 + lo) | 0;\n    w2 = (w2 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    lo = Math.imul(al1, bl1);\n    mid = Math.imul(al1, bh1);\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = Math.imul(ah1, bh1);\n    w2 = (w2 + lo) | 0;\n    w2 = (w2 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    lo = Math.imul(al0, bl2);\n    mid = Math.imul(al0, bh2);\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = Math.imul(ah0, bh2);\n    w2 = (w2 + lo) | 0;\n    w2 = (w2 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    var w3 = c;\n    c = 0;\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    lo = Math.imul(al2, bl1);\n    mid = Math.imul(al2, bh1);\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = Math.imul(ah2, bh1);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    lo = Math.imul(al1, bl2);\n    mid = Math.imul(al1, bh2);\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = Math.imul(ah1, bh2);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    lo = Math.imul(al0, bl3);\n    mid = Math.imul(al0, bh3);\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = Math.imul(ah0, bh3);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    var w4 = c;\n    c = 0;\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al3, bl1);\n    mid = Math.imul(al3, bh1);\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = Math.imul(ah3, bh1);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al2, bl2);\n    mid = Math.imul(al2, bh2);\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = Math.imul(ah2, bh2);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al1, bl3);\n    mid = Math.imul(al1, bh3);\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = Math.imul(ah1, bh3);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al0, bl4);\n    mid = Math.imul(al0, bh4);\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = Math.imul(ah0, bh4);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    var w5 = c;\n    c = 0;\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al4, bl1);\n    mid = Math.imul(al4, bh1);\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = Math.imul(ah4, bh1);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al3, bl2);\n    mid = Math.imul(al3, bh2);\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = Math.imul(ah3, bh2);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al2, bl3);\n    mid = Math.imul(al2, bh3);\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = Math.imul(ah2, bh3);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al1, bl4);\n    mid = Math.imul(al1, bh4);\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = Math.imul(ah1, bh4);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al0, bl5);\n    mid = Math.imul(al0, bh5);\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = Math.imul(ah0, bh5);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    var w6 = c;\n    c = 0;\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al5, bl1);\n    mid = Math.imul(al5, bh1);\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = Math.imul(ah5, bh1);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al4, bl2);\n    mid = Math.imul(al4, bh2);\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = Math.imul(ah4, bh2);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al3, bl3);\n    mid = Math.imul(al3, bh3);\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = Math.imul(ah3, bh3);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al2, bl4);\n    mid = Math.imul(al2, bh4);\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = Math.imul(ah2, bh4);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al1, bl5);\n    mid = Math.imul(al1, bh5);\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = Math.imul(ah1, bh5);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al0, bl6);\n    mid = Math.imul(al0, bh6);\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = Math.imul(ah0, bh6);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    var w7 = c;\n    c = 0;\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al6, bl1);\n    mid = Math.imul(al6, bh1);\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = Math.imul(ah6, bh1);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al5, bl2);\n    mid = Math.imul(al5, bh2);\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = Math.imul(ah5, bh2);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al4, bl3);\n    mid = Math.imul(al4, bh3);\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = Math.imul(ah4, bh3);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al3, bl4);\n    mid = Math.imul(al3, bh4);\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = Math.imul(ah3, bh4);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al2, bl5);\n    mid = Math.imul(al2, bh5);\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = Math.imul(ah2, bh5);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al1, bl6);\n    mid = Math.imul(al1, bh6);\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = Math.imul(ah1, bh6);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al0, bl7);\n    mid = Math.imul(al0, bh7);\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = Math.imul(ah0, bh7);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    var w8 = c;\n    c = 0;\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al7, bl1);\n    mid = Math.imul(al7, bh1);\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = Math.imul(ah7, bh1);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al6, bl2);\n    mid = Math.imul(al6, bh2);\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = Math.imul(ah6, bh2);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al5, bl3);\n    mid = Math.imul(al5, bh3);\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = Math.imul(ah5, bh3);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al4, bl4);\n    mid = Math.imul(al4, bh4);\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = Math.imul(ah4, bh4);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al3, bl5);\n    mid = Math.imul(al3, bh5);\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = Math.imul(ah3, bh5);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al2, bl6);\n    mid = Math.imul(al2, bh6);\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = Math.imul(ah2, bh6);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al1, bl7);\n    mid = Math.imul(al1, bh7);\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = Math.imul(ah1, bh7);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al0, bl8);\n    mid = Math.imul(al0, bh8);\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = Math.imul(ah0, bh8);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    var w9 = c;\n    c = 0;\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al8, bl1);\n    mid = Math.imul(al8, bh1);\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = Math.imul(ah8, bh1);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al7, bl2);\n    mid = Math.imul(al7, bh2);\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = Math.imul(ah7, bh2);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al6, bl3);\n    mid = Math.imul(al6, bh3);\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = Math.imul(ah6, bh3);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al5, bl4);\n    mid = Math.imul(al5, bh4);\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = Math.imul(ah5, bh4);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al4, bl5);\n    mid = Math.imul(al4, bh5);\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = Math.imul(ah4, bh5);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al3, bl6);\n    mid = Math.imul(al3, bh6);\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = Math.imul(ah3, bh6);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al2, bl7);\n    mid = Math.imul(al2, bh7);\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = Math.imul(ah2, bh7);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al1, bl8);\n    mid = Math.imul(al1, bh8);\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = Math.imul(ah1, bh8);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al0, bl9);\n    mid = Math.imul(al0, bh9);\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = Math.imul(ah0, bh9);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    var w10 = c;\n    c = 0;\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al8, bl2);\n    mid = Math.imul(al8, bh2);\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = Math.imul(ah8, bh2);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al7, bl3);\n    mid = Math.imul(al7, bh3);\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = Math.imul(ah7, bh3);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al6, bl4);\n    mid = Math.imul(al6, bh4);\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = Math.imul(ah6, bh4);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al5, bl5);\n    mid = Math.imul(al5, bh5);\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = Math.imul(ah5, bh5);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al4, bl6);\n    mid = Math.imul(al4, bh6);\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = Math.imul(ah4, bh6);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al3, bl7);\n    mid = Math.imul(al3, bh7);\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = Math.imul(ah3, bh7);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al2, bl8);\n    mid = Math.imul(al2, bh8);\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = Math.imul(ah2, bh8);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al1, bl9);\n    mid = Math.imul(al1, bh9);\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = Math.imul(ah1, bh9);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    var w11 = c;\n    c = 0;\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al8, bl3);\n    mid = Math.imul(al8, bh3);\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = Math.imul(ah8, bh3);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al7, bl4);\n    mid = Math.imul(al7, bh4);\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = Math.imul(ah7, bh4);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al6, bl5);\n    mid = Math.imul(al6, bh5);\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = Math.imul(ah6, bh5);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al5, bl6);\n    mid = Math.imul(al5, bh6);\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = Math.imul(ah5, bh6);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al4, bl7);\n    mid = Math.imul(al4, bh7);\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = Math.imul(ah4, bh7);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al3, bl8);\n    mid = Math.imul(al3, bh8);\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = Math.imul(ah3, bh8);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al2, bl9);\n    mid = Math.imul(al2, bh9);\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = Math.imul(ah2, bh9);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    var w12 = c;\n    c = 0;\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al8, bl4);\n    mid = Math.imul(al8, bh4);\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = Math.imul(ah8, bh4);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al7, bl5);\n    mid = Math.imul(al7, bh5);\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = Math.imul(ah7, bh5);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al6, bl6);\n    mid = Math.imul(al6, bh6);\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = Math.imul(ah6, bh6);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al5, bl7);\n    mid = Math.imul(al5, bh7);\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = Math.imul(ah5, bh7);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al4, bl8);\n    mid = Math.imul(al4, bh8);\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = Math.imul(ah4, bh8);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al3, bl9);\n    mid = Math.imul(al3, bh9);\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = Math.imul(ah3, bh9);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    var w13 = c;\n    c = 0;\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al8, bl5);\n    mid = Math.imul(al8, bh5);\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = Math.imul(ah8, bh5);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al7, bl6);\n    mid = Math.imul(al7, bh6);\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = Math.imul(ah7, bh6);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al6, bl7);\n    mid = Math.imul(al6, bh7);\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = Math.imul(ah6, bh7);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al5, bl8);\n    mid = Math.imul(al5, bh8);\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = Math.imul(ah5, bh8);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al4, bl9);\n    mid = Math.imul(al4, bh9);\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = Math.imul(ah4, bh9);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    var w14 = c;\n    c = 0;\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al8, bl6);\n    mid = Math.imul(al8, bh6);\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = Math.imul(ah8, bh6);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al7, bl7);\n    mid = Math.imul(al7, bh7);\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = Math.imul(ah7, bh7);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al6, bl8);\n    mid = Math.imul(al6, bh8);\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = Math.imul(ah6, bh8);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al5, bl9);\n    mid = Math.imul(al5, bh9);\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = Math.imul(ah5, bh9);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    var w15 = c;\n    c = 0;\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    lo = Math.imul(al8, bl7);\n    mid = Math.imul(al8, bh7);\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = Math.imul(ah8, bh7);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    lo = Math.imul(al7, bl8);\n    mid = Math.imul(al7, bh8);\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = Math.imul(ah7, bh8);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    lo = Math.imul(al6, bl9);\n    mid = Math.imul(al6, bh9);\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = Math.imul(ah6, bh9);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    var w16 = c;\n    c = 0;\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    w16 = (w16 + lo) | 0;\n    w16 = (w16 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    lo = Math.imul(al8, bl8);\n    mid = Math.imul(al8, bh8);\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = Math.imul(ah8, bh8);\n    w16 = (w16 + lo) | 0;\n    w16 = (w16 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    lo = Math.imul(al7, bl9);\n    mid = Math.imul(al7, bh9);\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = Math.imul(ah7, bh9);\n    w16 = (w16 + lo) | 0;\n    w16 = (w16 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    var w17 = c;\n    c = 0;\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    w17 = (w17 + lo) | 0;\n    w17 = (w17 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    lo = Math.imul(al8, bl9);\n    mid = Math.imul(al8, bh9);\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = Math.imul(ah8, bh9);\n    w17 = (w17 + lo) | 0;\n    w17 = (w17 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    var w18 = c;\n    c = 0;\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    w18 = (w18 + lo) | 0;\n    w18 = (w18 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    // Bigger storage is needed\n    var len = num.length + shift;\n    var i;\n    if (this.words.length < len) {\n      var t = new Array(len);\n      for (i = 0; i < this.length; i++) {\n        t[i] = this.words[i];\n      }\n      this.words = t;\n    } else {\n      i = this.length;\n    }\n\n    // Zeroify rest\n    this.length = Math.max(this.length, len);\n    for (; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return { div: q || null, mod: a };\n  };\n\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.neg) {\n          mod = mod.add(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return { div: div, mod: res.mod };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.neg) {\n          mod = mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return { div: new BN(0), mod: this };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return { div: this.divn(num.words[0]), mod: null };\n      }\n\n      if (mode === 'mod') {\n        return { div: null, mod: new BN(this.modn(num.words[0])) };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      while (x.isEven()) {\n        x.iushrn(1);\n        if (A.isEven() && B.isEven()) {\n          A.iushrn(1);\n          B.iushrn(1);\n        } else {\n          A.iadd(yp).iushrn(1);\n          B.isub(xp).iushrn(1);\n        }\n      }\n\n      while (y.isEven()) {\n        y.iushrn(1);\n        if (C.isEven() && D.isEven()) {\n          C.iushrn(1);\n          D.iushrn(1);\n        } else {\n          C.iadd(yp).iushrn(1);\n          D.isub(xp).iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      while (a.isEven()) {\n        a.iushrn(1);\n        if (x1.isEven()) {\n          x1.iushrn(1);\n        } else {\n          x1.iadd(delta).iushrn(1);\n        }\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n        if (x2.isEven()) {\n          x2.iushrn(1);\n        } else {\n          x2.iadd(delta).iushrn(1);\n        }\n      }\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.clone();\n    if (num.isZero()) return this.clone();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      for (var i = this.length; i < s + 1; i++) {\n        this.words[i] = 0;\n      }\n      this.words[s] |= q;\n      this.length = s + 1;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) {\n      res = -res;\n    }\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res;\n\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.ushl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    input.words[i - 10] = prev >>> 22;\n    input.length -= 9;\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var hi;\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      hi = w * 0x40;\n      lo += w * 0x3d1;\n      hi += (lo / 0x4000000) | 0;\n      lo &= 0x3ffffff;\n\n      num.words[i] = lo;\n\n      lo = hi;\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    var r = a.clone();\n    r.negative ^= 1;\n    return r.iadd(this.m)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a);\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n\n},{}],86:[function(require,module,exports){\nvar r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\nif (typeof window === 'object') {\n  if (window.crypto && window.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n  } else {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker\n  try {\n    var crypto = require('cry' + 'pto');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n    // Emulate crypto API using randy\n    Rand.prototype._rand = function _rand(n) {\n      var res = new Uint8Array(n);\n      for (var i = 0; i < res.length; i++)\n        res[i] = this.rand.getByte();\n      return res;\n    };\n  }\n}\n\n},{}],87:[function(require,module,exports){\n\n},{}],88:[function(require,module,exports){\n(function (Buffer){\n// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction scrub_vec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n  return false\n}\n\nfunction Global () {\n  this.SBOX = []\n  this.INV_SBOX = []\n  this.SUB_MIX = [[], [], [], []]\n  this.INV_SUB_MIX = [[], [], [], []]\n  this.init()\n  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\n}\n\nGlobal.prototype.init = function () {\n  var d, i, sx, t, x, x2, x4, x8, xi, _i\n  d = (function () {\n    var _i, _results\n    _results = []\n    for (i = _i = 0; _i < 256; i = ++_i) {\n      if (i < 128) {\n        _results.push(i << 1)\n      } else {\n        _results.push((i << 1) ^ 0x11b)\n      }\n    }\n    return _results\n  })()\n  x = 0\n  xi = 0\n  for (i = _i = 0; _i < 256; i = ++_i) {\n    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    this.SBOX[x] = sx\n    this.INV_SBOX[sx] = x\n    x2 = d[x]\n    x4 = d[x2]\n    x8 = d[x4]\n    t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    this.SUB_MIX[3][x] = t\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    this.INV_SUB_MIX[3][sx] = t\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n  return true\n}\n\nvar G = new Global()\n\nAES.blockSize = 4 * 4\n\nAES.prototype.blockSize = AES.blockSize\n\nAES.keySize = 256 / 8\n\nAES.prototype.keySize = AES.keySize\n\nfunction bufferToArray (buf) {\n  var len = buf.length / 4\n  var out = new Array(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n  return out\n}\nfunction AES (key) {\n  this._key = bufferToArray(key)\n  this._doReset()\n}\n\nAES.prototype._doReset = function () {\n  var invKsRow, keySize, keyWords, ksRow, ksRows, t\n  keyWords = this._key\n  keySize = keyWords.length\n  this._nRounds = keySize + 6\n  ksRows = (this._nRounds + 1) * 4\n  this._keySchedule = []\n  for (ksRow = 0; ksRow < ksRows; ksRow++) {\n    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)\n  }\n  this._invKeySchedule = []\n  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n    ksRow = ksRows - invKsRow\n    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]\n    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]\n  }\n  return true\n}\n\nAES.prototype.encryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var temp = [M[3], M[1]]\n  M[1] = temp[0]\n  M[3] = temp[1]\n  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrub_vec(this._keySchedule)\n  scrub_vec(this._invKeySchedule)\n  scrub_vec(this._key)\n}\n\nAES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {\n  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3\n\n  s0 = M[0] ^ keySchedule[0]\n  s1 = M[1] ^ keySchedule[1]\n  s2 = M[2] ^ keySchedule[2]\n  s3 = M[3] ^ keySchedule[3]\n  ksRow = 4\n  for (var round = 1; round < this._nRounds; round++) {\n    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  return [\n    fixup_uint32(t0),\n    fixup_uint32(t1),\n    fixup_uint32(t2),\n    fixup_uint32(t3)\n  ]\n}\n\nexports.AES = AES\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],89:[function(require,module,exports){\n(function (Buffer){\nvar aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\ninherits(StreamCipher, Transform)\nmodule.exports = StreamCipher\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  if (!(this instanceof StreamCipher)) {\n    return new StreamCipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])])\n  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])])\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  this._cache = new Buffer('')\n  this._secCache = new Buffer('')\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  iv.copy(this._prev)\n  this._mode = mode\n  var h = new Buffer(4)\n  h.fill(0)\n  this._ghash = new GHASH(this._cipher.encryptBlock(h))\n  this._authTag = null\n  this._called = false\n}\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = new Buffer(rump)\n      rump.fill(0)\n      this._ghash.update(rump)\n    }\n  }\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) {\n    throw new Error('Unsupported state or unable to authenticate data')\n  }\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt) {\n    if (xorTest(tag, this._authTag)) {\n      throw new Error('Unsupported state or unable to authenticate data')\n    }\n  } else {\n    this._authTag = tag\n  }\n  this._cipher.scrub()\n}\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {\n    return this._authTag\n  } else {\n    throw new Error('Attempting to get auth tag in unsupported state')\n  }\n}\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (this._decrypt) {\n    this._authTag = tag\n  } else {\n    throw new Error('Attempting to set auth tag in unsupported state')\n  }\n}\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (!this._called) {\n    this._ghash.update(buf)\n    this._alen += buf.length\n  } else {\n    throw new Error('Attempting to set AAD in unsupported state')\n  }\n}\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) {\n    out++\n  }\n  var len = Math.min(a.length, b.length)\n  var i = -1\n  while (++i < len) {\n    out += (a[i] ^ b[i])\n  }\n  return out\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./aes\":88,\"./ghash\":93,\"buffer\":116,\"buffer-xor\":115,\"cipher-base\":119,\"inherits\":165}],90:[function(require,module,exports){\nvar ciphers = require('./encrypter')\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nvar deciphers = require('./decrypter')\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nvar modes = require('./modes')\nfunction getCiphers () {\n  return Object.keys(modes)\n}\nexports.listCiphers = exports.getCiphers = getCiphers\n\n},{\"./decrypter\":91,\"./encrypter\":92,\"./modes\":94}],91:[function(require,module,exports){\n(function (Buffer){\nvar aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar modes = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar AuthCipher = require('./authCipher')\nvar ebtk = require('evp_bytestokey')\n\ninherits(Decipher, Transform)\nfunction Decipher (mode, key, iv) {\n  if (!(this instanceof Decipher)) {\n    return new Decipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  iv.copy(this._prev)\n  this._mode = mode\n  this._autopadding = true\n}\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n}\nfunction Splitter () {\n  if (!(this instanceof Splitter)) {\n    return new Splitter()\n  }\n  this.cache = new Buffer('')\n}\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n  return null\n}\nSplitter.prototype.flush = function () {\n  if (this.cache.length) {\n    return this.cache\n  }\n}\nfunction unpad (last) {\n  var padded = last[15]\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) {\n    return\n  }\n  return last.slice(0, 16 - padded)\n}\n\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv)\n  }\n  if (typeof password === 'string') {\n    password = new Buffer(password)\n  }\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length)\n  }\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length)\n  }\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv, true)\n  }\n  return new Decipher(modelist[config.mode], password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./aes\":88,\"./authCipher\":89,\"./modes\":94,\"./modes/cbc\":95,\"./modes/cfb\":96,\"./modes/cfb1\":97,\"./modes/cfb8\":98,\"./modes/ctr\":99,\"./modes/ecb\":100,\"./modes/ofb\":101,\"./streamCipher\":102,\"buffer\":116,\"cipher-base\":119,\"evp_bytestokey\":155,\"inherits\":165}],92:[function(require,module,exports){\n(function (Buffer){\nvar aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar modes = require('./modes')\nvar ebtk = require('evp_bytestokey')\nvar StreamCipher = require('./streamCipher')\nvar AuthCipher = require('./authCipher')\ninherits(Cipher, Transform)\nfunction Cipher (mode, key, iv) {\n  if (!(this instanceof Cipher)) {\n    return new Cipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  iv.copy(this._prev)\n  this._mode = mode\n  this._autopadding = true\n}\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n}\n\nfunction Splitter () {\n  if (!(this instanceof Splitter)) {\n    return new Splitter()\n  }\n  this.cache = new Buffer('')\n}\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = new Buffer(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n  var out = Buffer.concat([this.cache, padBuff])\n  return out\n}\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv)\n  }\n  if (typeof password === 'string') {\n    password = new Buffer(password)\n  }\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length)\n  }\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length)\n  }\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv)\n  }\n  return new Cipher(modelist[config.mode], password, iv)\n}\nfunction createCipher (suite, password) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./aes\":88,\"./authCipher\":89,\"./modes\":94,\"./modes/cbc\":95,\"./modes/cfb\":96,\"./modes/cfb1\":97,\"./modes/cfb8\":98,\"./modes/ctr\":99,\"./modes/ecb\":100,\"./modes/ofb\":101,\"./streamCipher\":102,\"buffer\":116,\"cipher-base\":119,\"evp_bytestokey\":155,\"inherits\":165}],93:[function(require,module,exports){\n(function (Buffer){\nvar zeros = new Buffer(16)\nzeros.fill(0)\nmodule.exports = GHASH\nfunction GHASH (key) {\n  this.h = key\n  this.state = new Buffer(16)\n  this.state.fill(0)\n  this.cache = new Buffer('')\n}\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsb_Vi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi = xor(Zi, Vi)\n    }\n\n    // Store the value of LSB(V_i)\n    lsb_Vi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsb_Vi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, zeros], 16))\n  }\n  this.ghash(fromArray([\n    0, abl,\n    0, bl\n  ]))\n  return this.state\n}\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\nfunction fromArray (out) {\n  out = out.map(fixup_uint32)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction xor (a, b) {\n  return [\n    a[0] ^ b[0],\n    a[1] ^ b[1],\n    a[2] ^ b[2],\n    a[3] ^ b[3]\n  ]\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],94:[function(require,module,exports){\nexports['aes-128-ecb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-192-ecb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-256-ecb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-128-cbc'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes-192-cbc'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes-256-cbc'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes128'] = exports['aes-128-cbc']\nexports['aes192'] = exports['aes-192-cbc']\nexports['aes256'] = exports['aes-256-cbc']\nexports['aes-128-cfb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-192-cfb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-256-cfb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-128-cfb8'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-192-cfb8'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-256-cfb8'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-128-cfb1'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-192-cfb1'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-256-cfb1'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-128-ofb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-192-ofb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-256-ofb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-128-ctr'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-192-ctr'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-256-ctr'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-128-gcm'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\nexports['aes-192-gcm'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\nexports['aes-256-gcm'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\n\n},{}],95:[function(require,module,exports){\nvar xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n\n},{\"buffer-xor\":115}],96:[function(require,module,exports){\n(function (Buffer){\nvar xor = require('buffer-xor')\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = new Buffer('')\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = new Buffer('')\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"buffer-xor\":115}],97:[function(require,module,exports){\n(function (Buffer){\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = new Buffer(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n  return out\n}\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = new Buffer(buffer.length)\n  buffer = Buffer.concat([buffer, new Buffer([value])])\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n  return out\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],98:[function(require,module,exports){\n(function (Buffer){\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])])\n  return out\n}\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = new Buffer(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n  return out\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],99:[function(require,module,exports){\n(function (Buffer){\nvar xor = require('buffer-xor')\n\nfunction incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlock(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"buffer-xor\":115}],100:[function(require,module,exports){\nexports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n\n},{}],101:[function(require,module,exports){\n(function (Buffer){\nvar xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"buffer-xor\":115}],102:[function(require,module,exports){\n(function (Buffer){\nvar aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\ninherits(StreamCipher, Transform)\nmodule.exports = StreamCipher\nfunction StreamCipher (mode, key, iv, decrypt) {\n  if (!(this instanceof StreamCipher)) {\n    return new StreamCipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  this._cache = new Buffer('')\n  this._secCache = new Buffer('')\n  this._decrypt = decrypt\n  iv.copy(this._prev)\n  this._mode = mode\n}\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./aes\":88,\"buffer\":116,\"cipher-base\":119,\"inherits\":165}],103:[function(require,module,exports){\nvar ebtk = require('evp_bytestokey')\nvar aes = require('browserify-aes/browser')\nvar DES = require('browserify-des')\nvar desModes = require('browserify-des/modes')\nvar aesModes = require('browserify-aes/modes')\nfunction createCipher (suite, password) {\n  var keyLen, ivLen\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\nfunction createDecipher (suite, password) {\n  var keyLen, ivLen\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    return aes.createCipheriv(suite, key, iv)\n  } else if (desModes[suite]) {\n    return new DES({\n      key: key,\n      iv: iv,\n      mode: suite\n    })\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n}\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    return aes.createDecipheriv(suite, key, iv)\n  } else if (desModes[suite]) {\n    return new DES({\n      key: key,\n      iv: iv,\n      mode: suite,\n      decrypt: true\n    })\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n}\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\nexports.listCiphers = exports.getCiphers = getCiphers\n\n},{\"browserify-aes/browser\":90,\"browserify-aes/modes\":94,\"browserify-des\":104,\"browserify-des/modes\":105,\"evp_bytestokey\":155}],104:[function(require,module,exports){\n(function (Buffer){\nvar CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return new Buffer(this._des.final())\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"cipher-base\":119,\"des.js\":127,\"inherits\":165}],105:[function(require,module,exports){\nexports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n\n},{}],106:[function(require,module,exports){\n(function (Buffer){\nvar bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"bn.js\":85,\"buffer\":116,\"randombytes\":199}],107:[function(require,module,exports){\n(function (Buffer){\n'use strict'\nexports['RSA-SHA224'] = exports.sha224WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha224',\n  id: new Buffer('302d300d06096086480165030402040500041c', 'hex')\n}\nexports['RSA-SHA256'] = exports.sha256WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha256',\n  id: new Buffer('3031300d060960864801650304020105000420', 'hex')\n}\nexports['RSA-SHA384'] = exports.sha384WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha384',\n  id: new Buffer('3041300d060960864801650304020205000430', 'hex')\n}\nexports['RSA-SHA512'] = exports.sha512WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha512',\n  id: new Buffer('3051300d060960864801650304020305000440', 'hex')\n}\nexports['RSA-SHA1'] = {\n  sign: 'rsa',\n  hash: 'sha1',\n  id: new Buffer('3021300906052b0e03021a05000414', 'hex')\n}\nexports['ecdsa-with-SHA1'] = {\n  sign: 'ecdsa',\n  hash: 'sha1',\n  id: new Buffer('', 'hex')\n}\n\nexports.DSA = exports['DSA-SHA1'] = exports['DSA-SHA'] = {\n  sign: 'dsa',\n  hash: 'sha1',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA224'] = exports['DSA-WITH-SHA224'] = {\n  sign: 'dsa',\n  hash: 'sha224',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA256'] = exports['DSA-WITH-SHA256'] = {\n  sign: 'dsa',\n  hash: 'sha256',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA384'] = exports['DSA-WITH-SHA384'] = {\n  sign: 'dsa',\n  hash: 'sha384',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA512'] = exports['DSA-WITH-SHA512'] = {\n  sign: 'dsa',\n  hash: 'sha512',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-RIPEMD160'] = {\n  sign: 'dsa',\n  hash: 'rmd160',\n  id: new Buffer('', 'hex')\n}\nexports['RSA-RIPEMD160'] = exports.ripemd160WithRSA = {\n  sign: 'rsa',\n  hash: 'rmd160',\n  id: new Buffer('3021300906052b2403020105000414', 'hex')\n}\nexports['RSA-MD5'] = exports.md5WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'md5',\n  id: new Buffer('3020300c06082a864886f70d020505000410', 'hex')\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],108:[function(require,module,exports){\n(function (Buffer){\nvar _algos = require('./algos')\nvar createHash = require('create-hash')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar stream = require('stream')\nvar verify = require('./verify')\n\nvar algos = {}\nObject.keys(_algos).forEach(function (key) {\n  algos[key] = algos[key.toLowerCase()] = _algos[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algos[algorithm]\n  if (!data) {\n    throw new Error('Unknown message digest')\n  }\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') {\n    data = new Buffer(data, enc)\n  }\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(Buffer.concat([this._tag, hash]), key, this._hashType, this._signType)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algos[algorithm]\n  if (!data) {\n    throw new Error('Unknown message digest')\n  }\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') {\n    data = new Buffer(data, enc)\n  }\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') {\n    sig = new Buffer(sig, enc)\n  }\n\n  this.end()\n  var hash = this._hash.digest()\n\n  return verify(sig, Buffer.concat([this._tag, hash]), key, this._signType)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./algos\":107,\"./sign\":110,\"./verify\":111,\"buffer\":116,\"create-hash\":122,\"inherits\":165,\"stream\":219}],109:[function(require,module,exports){\n'use strict'\nexports['1.3.132.0.10'] = 'secp256k1'\n\nexports['1.3.132.0.33'] = 'p224'\n\nexports['1.2.840.10045.3.1.1'] = 'p192'\n\nexports['1.2.840.10045.3.1.7'] = 'p256'\n\nexports['1.3.132.0.34'] = 'p384'\n\nexports['1.3.132.0.35'] = 'p521'\n\n},{}],110:[function(require,module,exports){\n(function (Buffer){\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar curves = require('./curves')\nvar elliptic = require('elliptic')\nvar parseKeys = require('parse-asn1')\n\nvar BN = require('bn.js')\nvar EC = elliptic.ec\n\nfunction sign (hash, key, hashType, signType) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    if (signType !== 'ecdsa') throw new Error('wrong private key type')\n\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') {\n      throw new Error('wrong private key type')\n    }\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa') throw new Error('wrong private key type')\n  }\n\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) {\n    pad.push(0xff)\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.genKeyPair()\n\n  key._importPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (!s.cmpn(0)) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) {\n    r = [ 0 ].concat(r)\n  }\n  // Pad values\n  if (s[0] & 0x80) {\n    s = [0].concat(s)\n  }\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([zeros, x])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k)\n    .update(v)\n    .update(new Buffer([0]))\n    .update(x)\n    .update(hbits)\n    .digest()\n  v = createHmac(algo, k)\n    .update(v)\n    .digest()\n  k = createHmac(algo, k)\n    .update(v)\n    .update(new Buffer([1]))\n    .update(x)\n    .update(hbits)\n    .digest()\n  v = createHmac(algo, k)\n    .update(v)\n    .digest()\n  return {\n    k: k,\n    v: v\n  }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) {\n    bits.ishrn(shift)\n  }\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([zeros, out])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t, k\n\n  do {\n    t = new Buffer('')\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k)\n        .update(kv.v)\n        .digest()\n      t = Buffer.concat([t, kv.v])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k)\n      .update(kv.v)\n      .update(new Buffer([0]))\n      .digest()\n    kv.v = createHmac(algo, kv.k)\n      .update(kv.v)\n      .digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./curves\":109,\"bn.js\":85,\"browserify-rsa\":106,\"buffer\":116,\"create-hmac\":125,\"elliptic\":137,\"parse-asn1\":184}],111:[function(require,module,exports){\n(function (Buffer){\n// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar curves = require('./curves')\nvar elliptic = require('elliptic')\nvar parseKeys = require('parse-asn1')\n\nvar BN = require('bn.js')\nvar EC = elliptic.ec\n\nfunction verify (sig, hash, key, signType) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    if (signType !== 'ecdsa') {\n      throw new Error('wrong public key type')\n    }\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') {\n      throw new Error('wrong public key type')\n    }\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa') {\n      throw new Error('wrong public key type')\n    }\n  }\n  var len = pub.modulus.byteLength()\n  var pad = [ 1 ]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = new Buffer(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n\n  sig = new Buffer(sig.fromRed().toArray())\n  var out = 0\n  if (padNum < 8) {\n    out = 1\n  }\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) {\n    out = 1\n  }\n\n  i = -1\n  while (++i < len) {\n    out |= (sig[i] ^ pad[i])\n  }\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(\n      y.toRed(montp)\n        .redPow(r.mul(w).mod(q))\n        .fromRed()\n  ).mod(p).mod(q)\n  return !v.cmp(r)\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) {\n    throw new Error('invalid sig')\n  }\n  if (b.cmp(q) >= q) {\n    throw new Error('invalid sig')\n  }\n}\n\nmodule.exports = verify\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./curves\":109,\"bn.js\":85,\"buffer\":116,\"elliptic\":137,\"parse-asn1\":184}],112:[function(require,module,exports){\n(function (process,Buffer){\nvar msg = require('pako/lib/zlib/messages');\nvar zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (mode < exports.DEFLATE || mode > exports.UNZIP)\n    throw new TypeError(\"Bad argument\");\n    \n  this.mode = mode;\n  this.init_done = false;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.windowBits = 0;\n  this.level = 0;\n  this.memLevel = 0;\n  this.strategy = 0;\n  this.dictionary = null;\n}\n\nZlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {\n  this.windowBits = windowBits;\n  this.level = level;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n  // dictionary not supported.\n  \n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP)\n    this.windowBits += 16;\n    \n  if (this.mode === exports.UNZIP)\n    this.windowBits += 32;\n    \n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW)\n    this.windowBits = -this.windowBits;\n    \n  this.strm = new zstream();\n  \n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateInit2(\n        this.strm,\n        this.level,\n        exports.Z_DEFLATED,\n        this.windowBits,\n        this.memLevel,\n        this.strategy\n      );\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      var status  = zlib_inflate.inflateInit2(\n        this.strm,\n        this.windowBits\n      );\n      break;\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n  \n  if (status !== exports.Z_OK) {\n    this._error(status);\n    return;\n  }\n  \n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype.params = function() {\n  throw new Error(\"deflateParams Not supported\");\n};\n\nZlib.prototype._writeCheck = function() {\n  if (!this.init_done)\n    throw new Error(\"write before init\");\n    \n  if (this.mode === exports.NONE)\n    throw new Error(\"already finalized\");\n    \n  if (this.write_in_progress)\n    throw new Error(\"write already in progress\");\n    \n  if (this.pending_close)\n    throw new Error(\"close is pending\");\n};\n\nZlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {    \n  this._writeCheck();\n  this.write_in_progress = true;\n  \n  var self = this;\n  process.nextTick(function() {\n    self.write_in_progress = false;\n    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);\n    self.callback(res[0], res[1]);\n    \n    if (self.pending_close)\n      self.close();\n  });\n  \n  return this;\n};\n\n// set method for Node buffers, used by pako\nfunction bufferSet(data, offset) {\n  for (var i = 0; i < data.length; i++) {\n    this[offset + i] = data[i];\n  }\n}\n\nZlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this._writeCheck();\n  return this._write(flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this.write_in_progress = true;\n  \n  if (flush !== exports.Z_NO_FLUSH &&\n      flush !== exports.Z_PARTIAL_FLUSH &&\n      flush !== exports.Z_SYNC_FLUSH &&\n      flush !== exports.Z_FULL_FLUSH &&\n      flush !== exports.Z_FINISH &&\n      flush !== exports.Z_BLOCK) {\n    throw new Error(\"Invalid flush value\");\n  }\n  \n  if (input == null) {\n    input = new Buffer(0);\n    in_len = 0;\n    in_off = 0;\n  }\n  \n  if (out._set)\n    out.set = out._set;\n  else\n    out.set = bufferSet;\n  \n  var strm = this.strm;\n  strm.avail_in = in_len;\n  strm.input = input;\n  strm.next_in = in_off;\n  strm.avail_out = out_len;\n  strm.output = out;\n  strm.next_out = out_off;\n  \n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflate(strm, flush);\n      break;\n    case exports.UNZIP:\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflate(strm, flush);\n      break;\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n  \n  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {\n    this._error(status);\n  }\n  \n  this.write_in_progress = false;\n  return [strm.avail_in, strm.avail_out];\n};\n\nZlib.prototype.close = function() {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n  \n  this.pending_close = false;\n  \n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n  \n  this.mode = exports.NONE;\n};\n\nZlib.prototype.reset = function() {\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflateReset(this.strm);\n      break;\n  }\n  \n  if (status !== exports.Z_OK) {\n    this._error(status);\n  }\n};\n\nZlib.prototype._error = function(status) {\n  this.onerror(msg[status] + ': ' + this.strm.msg, status);\n  \n  this.write_in_progress = false;\n  if (this.pending_close)\n    this.close();\n};\n\nexports.Zlib = Zlib;\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n\n},{\"_process\":188,\"buffer\":116,\"pako/lib/zlib/constants\":172,\"pako/lib/zlib/deflate.js\":174,\"pako/lib/zlib/inflate.js\":176,\"pako/lib/zlib/messages\":178,\"pako/lib/zlib/zstream\":180}],113:[function(require,module,exports){\n(function (process,Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Transform = require('_stream_transform');\n\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = (16 * 1024);\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nObject.keys(binding).forEach(function(k) {\n  if (k.match(/^Z/)) exports[k] = binding[k];\n});\n\n// translation table for return codes.\nexports.codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nObject.keys(exports.codes).forEach(function(k) {\n  exports.codes[exports.codes[k]] = k;\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function(o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function(o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function(o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function(o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function(o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function(o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function(o) {\n  return new Unzip(o);\n};\n\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function(buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function(buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function(buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function(buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf = Buffer.concat(buffers, nread);\n    buffers = [];\n    callback(null, buf);\n    engine.close();\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string')\n    buffer = new Buffer(buffer);\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('Not a string or buffer');\n\n  var flushFlag = binding.Z_FINISH;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush) {\n    if (opts.flush !== binding.Z_NO_FLUSH &&\n        opts.flush !== binding.Z_PARTIAL_FLUSH &&\n        opts.flush !== binding.Z_SYNC_FLUSH &&\n        opts.flush !== binding.Z_FULL_FLUSH &&\n        opts.flush !== binding.Z_FINISH &&\n        opts.flush !== binding.Z_BLOCK) {\n      throw new Error('Invalid flush flag: ' + opts.flush);\n    }\n  }\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK ||\n        opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS ||\n        opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL ||\n        opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL ||\n        opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED &&\n        opts.strategy != exports.Z_HUFFMAN_ONLY &&\n        opts.strategy != exports.Z_RLE &&\n        opts.strategy != exports.Z_FIXED &&\n        opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._binding = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._binding.onerror = function(message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    self._binding = null;\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,\n                     level,\n                     opts.memLevel || exports.Z_DEFAULT_MEMLEVEL,\n                     strategy,\n                     opts.dictionary);\n\n  this._buffer = new Buffer(this._chunkSize);\n  this._offset = 0;\n  this._closed = false;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function(level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL ||\n      level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED &&\n      strategy != exports.Z_HUFFMAN_ONLY &&\n      strategy != exports.Z_RLE &&\n      strategy != exports.Z_FIXED &&\n      strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function() {\n      self._binding.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function() {\n  return this._binding.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function(callback) {\n  this._transform(new Buffer(0), '', callback);\n};\n\nZlib.prototype.flush = function(kind, callback) {\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || (kind === void 0 && !callback)) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback)\n      this.once('end', callback);\n  } else if (ws.needDrain) {\n    var self = this;\n    this.once('drain', function() {\n      self.flush(callback);\n    });\n  } else {\n    this._flushFlag = kind;\n    this.write(new Buffer(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function(callback) {\n  if (callback)\n    process.nextTick(callback);\n\n  if (this._closed)\n    return;\n\n  this._closed = true;\n\n  this._binding.close();\n\n  var self = this;\n  process.nextTick(function() {\n    self.emit('close');\n  });\n};\n\nZlib.prototype._transform = function(chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (!chunk === null && !Buffer.isBuffer(chunk))\n    return cb(new Error('invalid input'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last)\n    flushFlag = binding.Z_FINISH;\n  else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  var self = this;\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function(chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function(er) {\n      error = er;\n    });\n\n    do {\n      var res = this._binding.writeSync(flushFlag,\n                                        chunk, // in\n                                        inOff, // in_off\n                                        availInBefore, // in_len\n                                        this._buffer, // out\n                                        this._offset, //out_off\n                                        availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    this.close();\n\n    return buf;\n  }\n\n  var req = this._binding.write(flushFlag,\n                                chunk, // in\n                                inOff, // in_off\n                                availInBefore, // in_len\n                                this._buffer, // out\n                                this._offset, //out_off\n                                availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    if (self._hadError)\n      return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = new Buffer(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += (availInBefore - availInAfter);\n      availInBefore = availInAfter;\n\n      if (!async)\n        return true;\n\n      var newReq = self._binding.write(flushFlag,\n                                       chunk,\n                                       inOff,\n                                       availInBefore,\n                                       self._buffer,\n                                       self._offset,\n                                       self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async)\n      return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n\n},{\"./binding\":112,\"_process\":188,\"_stream_transform\":208,\"assert\":83,\"buffer\":116,\"util\":229}],114:[function(require,module,exports){\narguments[4][87][0].apply(exports,arguments)\n},{\"dup\":87}],115:[function(require,module,exports){\n(function (Buffer){\nmodule.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],116:[function(require,module,exports){\n(function (global){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"base64-js\":84,\"ieee754\":163,\"isarray\":117}],117:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],118:[function(require,module,exports){\nmodule.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Moved Temporarily\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Time-out\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Request Entity Too Large\",\n  \"414\": \"Request-URI Too Large\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Requested Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Time-out\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n\n},{}],119:[function(require,module,exports){\n(function (Buffer){\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\nvar StringDecoder = require('string_decoder').StringDecoder\nmodule.exports = CipherBase\ninherits(CipherBase, Transform)\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  this._decoder = null\n  this._encoding = null\n}\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = new Buffer(data, inputEnc)\n  }\n  var outData = this._update(data)\n  if (this.hashMode) {\n    return this\n  }\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\n\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this._final())\n  } catch (e) {\n    err = e\n  } finally {\n    done(err)\n  }\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this._final() || new Buffer('')\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, final) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n  if (this._encoding !== enc) {\n    throw new Error('can\\'t switch encodings')\n  }\n  var out = this._decoder.write(value)\n  if (final) {\n    out += this._decoder.end()\n  }\n  return out\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"inherits\":165,\"stream\":219,\"string_decoder\":224}],120:[function(require,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")})\n\n},{\"../../is-buffer/index.js\":166}],121:[function(require,module,exports){\n(function (Buffer){\nvar elliptic = require('elliptic');\nvar BN = require('bn.js');\n\nmodule.exports = function createECDH(curve) {\n\treturn new ECDH(curve);\n};\n\nvar aliases = {\n\tsecp256k1: {\n\t\tname: 'secp256k1',\n\t\tbyteLength: 32\n\t},\n\tsecp224r1: {\n\t\tname: 'p224',\n\t\tbyteLength: 28\n\t},\n\tprime256v1: {\n\t\tname: 'p256',\n\t\tbyteLength: 32\n\t},\n\tprime192v1: {\n\t\tname: 'p192',\n\t\tbyteLength: 24\n\t},\n\ted25519: {\n\t\tname: 'ed25519',\n\t\tbyteLength: 32\n\t},\n\tsecp384r1: {\n\t\tname: 'p384',\n\t\tbyteLength: 48\n\t},\n\tsecp521r1: {\n\t\tname: 'p521',\n\t\tbyteLength: 66\n\t}\n};\n\naliases.p224 = aliases.secp224r1;\naliases.p256 = aliases.secp256r1 = aliases.prime256v1;\naliases.p192 = aliases.secp192r1 = aliases.prime192v1;\naliases.p384 = aliases.secp384r1;\naliases.p521 = aliases.secp521r1;\n\nfunction ECDH(curve) {\n\tthis.curveType = aliases[curve];\n\tif (!this.curveType ) {\n\t\tthis.curveType = {\n\t\t\tname: curve\n\t\t};\n\t}\n\tthis.curve = new elliptic.ec(this.curveType.name);\n\tthis.keys = void 0;\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n\tthis.keys = this.curve.genKeyPair();\n\treturn this.getPublicKey(enc, format);\n};\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n\tinenc = inenc || 'utf8';\n\tif (!Buffer.isBuffer(other)) {\n\t\tother = new Buffer(other, inenc);\n\t}\n\tvar otherPub = this.curve.keyFromPublic(other).getPublic();\n\tvar out = otherPub.mul(this.keys.getPrivate()).getX();\n\treturn formatReturnValue(out, enc, this.curveType.byteLength);\n};\n\nECDH.prototype.getPublicKey = function (enc, format) {\n\tvar key = this.keys.getPublic(format === 'compressed', true);\n\tif (format === 'hybrid') {\n\t\tif (key[key.length - 1] % 2) {\n\t\t\tkey[0] = 7;\n\t\t} else {\n\t\t\tkey [0] = 6;\n\t\t}\n\t}\n\treturn formatReturnValue(key, enc);\n};\n\nECDH.prototype.getPrivateKey = function (enc) {\n\treturn formatReturnValue(this.keys.getPrivate(), enc);\n};\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n\tenc = enc || 'utf8';\n\tif (!Buffer.isBuffer(pub)) {\n\t\tpub = new Buffer(pub, enc);\n\t}\n\tthis.keys._importPublic(pub);\n\treturn this;\n};\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n\tenc = enc || 'utf8';\n\tif (!Buffer.isBuffer(priv)) {\n\t\tpriv = new Buffer(priv, enc);\n\t}\n\tvar _priv = new BN(priv);\n\t_priv = _priv.toString(16);\n\tthis.keys._importPrivate(_priv);\n\treturn this;\n};\n\nfunction formatReturnValue(bn, enc, len) {\n\tif (!Array.isArray(bn)) {\n\t\tbn = bn.toArray();\n\t}\n\tvar buf = new Buffer(bn);\n\tif (len && buf.length < len) {\n\t\tvar zeros = new Buffer(len - buf.length);\n\t\tzeros.fill(0);\n\t\tbuf = Buffer.concat([zeros, buf]);\n\t}\n\tif (!enc) {\n\t\treturn buf;\n\t} else {\n\t\treturn buf.toString(enc);\n\t}\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"bn.js\":85,\"buffer\":116,\"elliptic\":137}],122:[function(require,module,exports){\n(function (Buffer){\n'use strict';\nvar inherits = require('inherits')\nvar md5 = require('./md5')\nvar rmd160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar Base = require('cipher-base')\n\nfunction HashNoConstructor(hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n  this.buffers = []\n}\n\ninherits(HashNoConstructor, Base)\n\nHashNoConstructor.prototype._update = function (data) {\n  this.buffers.push(data)\n}\n\nHashNoConstructor.prototype._final = function () {\n  var buf = Buffer.concat(this.buffers)\n  var r = this._hash(buf)\n  this.buffers = null\n\n  return r\n}\n\nfunction Hash(hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if ('md5' === alg) return new HashNoConstructor(md5)\n  if ('rmd160' === alg || 'ripemd160' === alg) return new HashNoConstructor(rmd160)\n\n  return new Hash(sha(alg))\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./md5\":124,\"buffer\":116,\"cipher-base\":119,\"inherits\":165,\"ripemd160\":210,\"sha.js\":212}],123:[function(require,module,exports){\n(function (Buffer){\n'use strict';\nvar intSize = 4;\nvar zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);\nvar chrsz = 8;\n\nfunction toArray(buf, bigEndian) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize));\n    buf = Buffer.concat([buf, zeroBuffer], len);\n  }\n\n  var arr = [];\n  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;\n  for (var i = 0; i < buf.length; i += intSize) {\n    arr.push(fn.call(buf, i));\n  }\n  return arr;\n}\n\nfunction toBuffer(arr, size, bigEndian) {\n  var buf = new Buffer(size);\n  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;\n  for (var i = 0; i < arr.length; i++) {\n    fn.call(buf, arr[i], i * 4, true);\n  }\n  return buf;\n}\n\nfunction hash(buf, fn, hashSize, bigEndian) {\n  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);\n  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);\n  return toBuffer(arr, hashSize, bigEndian);\n}\nexports.hash = hash;\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],124:[function(require,module,exports){\n'use strict';\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\nvar helpers = require('./helpers');\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n\n    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn(q, a, b, x, s, t)\n{\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n}\nfunction md5_ff(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\nfunction md5_gg(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\nfunction md5_hh(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5_ii(a, b, c, d, x, s, t)\n{\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\nmodule.exports = function md5(buf) {\n  return helpers.hash(buf, core_md5, 16);\n};\n},{\"./helpers\":123}],125:[function(require,module,exports){\n(function (Buffer){\n'use strict';\nvar createHash = require('create-hash/browser');\nvar inherits = require('inherits')\n\nvar Transform = require('stream').Transform\n\nvar ZEROS = new Buffer(128)\nZEROS.fill(0)\n\nfunction Hmac(alg, key) {\n  Transform.call(this)\n  alg = alg.toLowerCase()\n  if (typeof key === 'string') {\n    key = new Buffer(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = createHash(alg).update(key).digest()\n\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = new Buffer(blocksize)\n  var opad = this._opad = new Buffer(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = createHash(alg).update(ipad)\n}\n\ninherits(Hmac, Transform)\n\nHmac.prototype.update = function (data, enc) {\n  this._hash.update(data, enc)\n\n  return this\n}\n\nHmac.prototype._transform = function (data, _, next) {\n  this._hash.update(data)\n\n  next()\n}\n\nHmac.prototype._flush = function (next) {\n  this.push(this.digest())\n\n  next()\n}\n\nHmac.prototype.digest = function (enc) {\n  var h = this._hash.digest()\n\n  return createHash(this._alg).update(this._opad).update(h).digest(enc)\n}\n\nmodule.exports = function createHmac(alg, key) {\n  return new Hmac(alg, key)\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"create-hash/browser\":122,\"inherits\":165,\"stream\":219}],126:[function(require,module,exports){\n'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(require('browserify-sign/algos')))\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n;[\n  'Cipher',\n  'createCipher',\n  'Cipheriv',\n  'createCipheriv',\n  'Decipher',\n  'createDecipher',\n  'Decipheriv',\n  'createDecipheriv',\n  'getCiphers',\n  'listCiphers'\n].forEach(function (key) {\n  exports[key] = aes[key]\n})\n\nvar dh = require('diffie-hellman')\n;[\n  'DiffieHellmanGroup',\n  'createDiffieHellmanGroup',\n  'getDiffieHellman',\n  'createDiffieHellman',\n  'DiffieHellman'\n].forEach(function (key) {\n  exports[key] = dh[key]\n})\n\nvar sign = require('browserify-sign')\n;[\n  'createSign',\n  'Sign',\n  'createVerify',\n  'Verify'\n].forEach(function (key) {\n  exports[key] = sign[key]\n})\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\n;[\n  'publicEncrypt',\n  'privateEncrypt',\n  'publicDecrypt',\n  'privateDecrypt'\n].forEach(function (key) {\n  exports[key] = publicEncrypt[key]\n})\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n;[\n  'createCredentials'\n].forEach(function (name) {\n  exports[name] = function () {\n    throw new Error([\n      'sorry, ' + name + ' is not implemented yet',\n      'we accept pull requests',\n      'https://github.com/crypto-browserify/crypto-browserify'\n    ].join('\\n'))\n  }\n})\n\n},{\"browserify-cipher\":103,\"browserify-sign\":108,\"browserify-sign/algos\":107,\"create-ecdh\":121,\"create-hash\":122,\"create-hmac\":125,\"diffie-hellman\":133,\"pbkdf2\":186,\"public-encrypt\":189,\"randombytes\":199}],127:[function(require,module,exports){\n'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n\n},{\"./des/cbc\":128,\"./des/cipher\":129,\"./des/des\":130,\"./des/ede\":131,\"./des/utils\":132}],128:[function(require,module,exports){\n'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n\n},{\"inherits\":165,\"minimalistic-assert\":169}],129:[function(require,module,exports){\n'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n\n},{\"minimalistic-assert\":169}],130:[function(require,module,exports){\n'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar utils = des.utils;\nvar Cipher = des.Cipher;\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n\n},{\"../des\":127,\"inherits\":165,\"minimalistic-assert\":169}],131:[function(require,module,exports){\n'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar Cipher = des.Cipher;\nvar DES = des.DES;\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n\n},{\"../des\":127,\"inherits\":165,\"minimalistic-assert\":169}],132:[function(require,module,exports){\n'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n\n},{}],133:[function(require,module,exports){\n(function (Buffer){\nvar generatePrime = require('./lib/generatePrime');\nvar primes = require('./lib/primes');\n\nvar DH = require('./lib/dh');\n\nfunction getDiffieHellman(mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex');\n  var gen = new Buffer(primes[mod].gen, 'hex');\n\n  return new DH(prime, gen);\n}\n\nfunction createDiffieHellman(prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || (typeof enc === 'string' && ['hex', 'binary', 'base64'].indexOf(enc) === -1)) {\n    genc = generator;\n    generator = enc;\n    enc = undefined;\n  }\n\n  enc = enc || 'binary';\n  genc = genc || 'binary';\n  generator = generator || new Buffer([2]);\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc);\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true);\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc);\n  }\n\n  return new DH(prime, generator, true);\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./lib/dh\":134,\"./lib/generatePrime\":135,\"./lib/primes\":136,\"buffer\":116}],134:[function(require,module,exports){\n(function (Buffer){\nvar BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./generatePrime\":135,\"bn.js\":85,\"buffer\":116,\"miller-rabin\":168,\"randombytes\":199}],135:[function(require,module,exports){\nvar randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n\n},{\"bn.js\":85,\"miller-rabin\":168,\"randombytes\":199}],136:[function(require,module,exports){\nmodule.exports={\n    \"modp1\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"\n    },\n    \"modp2\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"\n    },\n    \"modp5\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"\n    },\n    \"modp14\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"\n    },\n    \"modp15\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"\n    },\n    \"modp16\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"\n    },\n    \"modp17\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"\n    },\n    \"modp18\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"\n    }\n}\n},{}],137:[function(require,module,exports){\n'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.hmacDRBG = require('./elliptic/hmac-drbg');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n\n},{\"../package.json\":153,\"./elliptic/curve\":140,\"./elliptic/curves\":143,\"./elliptic/ec\":144,\"./elliptic/eddsa\":147,\"./elliptic/hmac-drbg\":150,\"./elliptic/utils\":152,\"brorand\":86}],138:[function(require,module,exports){\n'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n  return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n  if (bytes[0] === 0x04 && bytes.length - 1 === 2 * len) {\n    return this.point(bytes.slice(1, 1 + len),\n                      bytes.slice(1 + len, 1 + 2 * len));\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n\n},{\"../../elliptic\":137,\"bn.js\":85}],139:[function(require,module,exports){\n'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new bn(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new bn(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new bn(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new bn(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - 1) / (d y^2 + 1)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.one);\n  var rhs = y2.redMul(this.d).redAdd(this.one);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = z ? new bn(z, 16) : this.curve.one;\n    this.t = t && new bn(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n\n},{\"../../elliptic\":137,\"../curve\":140,\"bn.js\":85,\"inherits\":165}],140:[function(require,module,exports){\n'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n\n},{\"./base\":138,\"./edwards\":139,\"./mont\":141,\"./short\":142}],141:[function(require,module,exports){\n'use strict';\n\nvar curve = require('../curve');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.i4 = new bn(4).toRed(this.red).redInvm();\n  this.two = new bn(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new bn(x, 16);\n    this.z = new bn(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n\n},{\"../../elliptic\":137,\"../curve\":140,\"bn.js\":85,\"inherits\":165}],142:[function(require,module,exports){\n'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\n},{\"../../elliptic\":137,\"../curve\":140,\"bn.js\":85,\"inherits\":165}],143:[function(require,module,exports){\n'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '0',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n\n},{\"../elliptic\":137,\"./precomputed/secp256k1\":151,\"hash.js\":156}],144:[function(require,module,exports){\n'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n  do {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray();\n  for (var i = bkey.length; i < bytes; i++)\n    bkey.unshift(0);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray();\n  for (var i = nonce.length; i < bytes; i++)\n    nonce.unshift(0);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new bn(1));\n  do {\n    var k = new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  } while (true);\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  return p.getX().umod(this.n).cmp(r) === 0;\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var eNeg = n.sub(e);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  var rInv = signature.r.invm(n);\n  return r.mul(s).add(this.g.mul(eNeg)).mul(rInv);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime = this.recoverPubKey(e, signature, i);\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n\n},{\"../../elliptic\":137,\"./key\":145,\"./signature\":146,\"bn.js\":85}],145:[function(require,module,exports){\n'use strict';\n\nvar bn = require('bn.js');\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n\n},{\"bn.js\":85}],146:[function(require,module,exports){\n'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam !== null)\n    this.recoveryParam = options.recoveryParam;\n  else\n    this.recoveryParam = null;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n\n},{\"../../elliptic\":137,\"bn.js\":85}],147:[function(require,module,exports){\n'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n\n},{\"../../elliptic\":137,\"./key\":148,\"./signature\":149,\"hash.js\":156}],148:[function(require,module,exports){\n'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n\n},{\"../../elliptic\":137}],149:[function(require,module,exports){\n'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof bn)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n\n},{\"../../elliptic\":137,\"bn.js\":85}],150:[function(require,module,exports){\n'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this.reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc);\n  var nonce = utils.toArray(options.nonce, options.nonceEnc);\n  var pers = utils.toArray(options.pers, options.persEnc);\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this.reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toBuffer(entropy, entropyEnc);\n  add = utils.toBuffer(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this.reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this.reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc);\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this.reseed++;\n  return utils.encode(res, enc);\n};\n\n},{\"../elliptic\":137,\"hash.js\":156}],151:[function(require,module,exports){\nmodule.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n\n},{}],152:[function(require,module,exports){\n'use strict';\n\nvar utils = exports;\nvar bn = require('bn.js');\n\nutils.assert = function assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n};\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (!enc) {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  } else if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, computer) {\n  var name = computer.name;\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new bn(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n\n},{\"bn.js\":85}],153:[function(require,module,exports){\nmodule.exports={\n  \"_args\": [\n    [\n      \"elliptic@^6.0.0\",\n      \"C:\\\\Users\\\\kevin\\\\GitHub\\\\yjs\\\\node_modules\\\\browserify-sign\"\n    ]\n  ],\n  \"_from\": \"elliptic@>=6.0.0 <7.0.0\",\n  \"_id\": \"elliptic@6.0.2\",\n  \"_inCache\": true,\n  \"_installable\": true,\n  \"_location\": \"/elliptic\",\n  \"_nodeVersion\": \"5.0.0\",\n  \"_npmUser\": {\n    \"email\": \"fedor@indutny.com\",\n    \"name\": \"indutny\"\n  },\n  \"_npmVersion\": \"3.3.6\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"name\": \"elliptic\",\n    \"raw\": \"elliptic@^6.0.0\",\n    \"rawSpec\": \"^6.0.0\",\n    \"scope\": null,\n    \"spec\": \">=6.0.0 <7.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"/browserify-sign\",\n    \"/create-ecdh\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.0.2.tgz\",\n  \"_shasum\": \"219b96cd92aa9885d91d31c1fd42eaa5eb4483a9\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"elliptic@^6.0.0\",\n  \"_where\": \"C:\\\\Users\\\\kevin\\\\GitHub\\\\yjs\\\\node_modules\\\\browserify-sign\",\n  \"author\": {\n    \"email\": \"fedor@indutny.com\",\n    \"name\": \"Fedor Indutny\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.0.0\",\n    \"brorand\": \"^1.0.1\",\n    \"hash.js\": \"^1.0.0\",\n    \"inherits\": \"^2.0.1\"\n  },\n  \"description\": \"EC cryptography\",\n  \"devDependencies\": {\n    \"browserify\": \"^3.44.2\",\n    \"coveralls\": \"^2.11.3\",\n    \"istanbul\": \"^0.3.17\",\n    \"jscs\": \"^1.11.3\",\n    \"jshint\": \"^2.6.0\",\n    \"mocha\": \"^2.1.0\",\n    \"uglify-js\": \"^2.4.13\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"shasum\": \"219b96cd92aa9885d91d31c1fd42eaa5eb4483a9\",\n    \"tarball\": \"http://registry.npmjs.org/elliptic/-/elliptic-6.0.2.tgz\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"gitHead\": \"330106da186712d228d79bc71ae8e7e68565fa9d\",\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"keywords\": [\n    \"Cryptography\",\n    \"EC\",\n    \"Elliptic\",\n    \"curve\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"lib/elliptic.js\",\n  \"maintainers\": [\n    {\n      \"name\": \"indutny\",\n      \"email\": \"fedor@indutny.com\"\n    }\n  ],\n  \"name\": \"elliptic\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n  },\n  \"scripts\": {\n    \"coveralls\": \"cat ./coverage/lcov.info | coveralls\",\n    \"test\": \"make lint && istanbul test _mocha --reporter=spec test/*-test.js\"\n  },\n  \"version\": \"6.0.2\"\n}\n\n},{}],154:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n},{}],155:[function(require,module,exports){\n(function (Buffer){\nvar md5 = require('create-hash/md5')\nmodule.exports = EVP_BytesToKey\nfunction EVP_BytesToKey (password, salt, keyLen, ivLen) {\n  if (!Buffer.isBuffer(password)) {\n    password = new Buffer(password, 'binary')\n  }\n  if (salt && !Buffer.isBuffer(salt)) {\n    salt = new Buffer(salt, 'binary')\n  }\n  keyLen = keyLen / 8\n  ivLen = ivLen || 0\n  var ki = 0\n  var ii = 0\n  var key = new Buffer(keyLen)\n  var iv = new Buffer(ivLen)\n  var addmd = 0\n  var md_buf\n  var i\n  var bufs = []\n  while (true) {\n    if (addmd++ > 0) {\n      bufs.push(md_buf)\n    }\n    bufs.push(password)\n    if (salt) {\n      bufs.push(salt)\n    }\n    md_buf = md5(Buffer.concat(bufs))\n    bufs = []\n    i = 0\n    if (keyLen > 0) {\n      while (true) {\n        if (keyLen === 0) {\n          break\n        }\n        if (i === md_buf.length) {\n          break\n        }\n        key[ki++] = md_buf[i]\n        keyLen--\n        i++\n      }\n    }\n    if (ivLen > 0 && i !== md_buf.length) {\n      while (true) {\n        if (ivLen === 0) {\n          break\n        }\n        if (i === md_buf.length) {\n          break\n        }\n        iv[ii++] = md_buf[i]\n        ivLen--\n        i++\n      }\n    }\n    if (keyLen === 0 && ivLen === 0) {\n      break\n    }\n  }\n  for (i = 0; i < md_buf.length; i++) {\n    md_buf[i] = 0\n  }\n  return {\n    key: key,\n    iv: iv\n  }\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"create-hash/md5\":124}],156:[function(require,module,exports){\nvar hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n\n},{\"./hash/common\":157,\"./hash/hmac\":158,\"./hash/ripemd\":159,\"./hash/sha\":160,\"./hash/utils\":161}],157:[function(require,module,exports){\nvar hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n\n},{\"../hash\":156}],158:[function(require,module,exports){\nvar hmac = exports;\n\nvar hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (var i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (var i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n\n},{\"../hash\":156}],159:[function(require,module,exports){\nvar hash = require('../hash');\nvar utils = hash.utils;\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = hash.common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n\n},{\"../hash\":156}],160:[function(require,module,exports){\nvar hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nvar rotr32 = utils.rotr32;\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\nvar BlockHash = hash.common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nexports.sha256 = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nexports.sha224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [ 0x6a09e667, 0xf3bcc908,\n             0xbb67ae85, 0x84caa73b,\n             0x3c6ef372, 0xfe94f82b,\n             0xa54ff53a, 0x5f1d36f1,\n             0x510e527f, 0xade682d1,\n             0x9b05688c, 0x2b3e6c1f,\n             0x1f83d9ab, 0xfb41bd6b,\n             0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nexports.sha512 = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(c0_hi, c0_lo,\n                      c1_hi, c1_lo,\n                      c2_hi, c2_lo,\n                      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,\n                          c1_hi, c1_lo,\n                          c2_hi, c2_lo,\n                          c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(c0_hi, c0_lo,\n                           c1_hi, c1_lo,\n                           c2_hi, c2_lo,\n                           c3_hi, c3_lo,\n                           c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(c0_hi, c0_lo,\n                           c1_hi, c1_lo,\n                           c2_hi, c2_lo,\n                           c3_hi, c3_lo,\n                           c4_hi, c4_lo);\n\n    var c0_hi = s0_512_hi(ah, al);\n    var c0_lo = s0_512_lo(ah, al);\n    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [ 0xcbbb9d5d, 0xc1059ed8,\n             0x629a292a, 0x367cd507,\n             0x9159015a, 0x3070dd17,\n             0x152fecd8, 0xf70e5939,\n             0x67332667, 0xffc00b31,\n             0x8eb44a87, 0x68581511,\n             0xdb0c2e0d, 0x64f98fa7,\n             0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nexports.sha384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,\n             0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nexports.sha1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (var i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\n\nfunction ch64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\n},{\"../hash\":156}],161:[function(require,module,exports){\nvar utils = exports;\nvar inherits = require('inherits');\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (var i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nutils.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nutils.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nutils.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nutils.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nutils.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nutils.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nutils.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nutils.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nutils.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nutils.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nutils.sum32_5 = sum32_5;\n\nfunction assert(cond, msg) {\n  if (!cond)\n    throw new Error(msg || 'Assertion failed');\n}\nutils.assert = assert;\n\nutils.inherits = inherits;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n};\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n};\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n};\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n};\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n};\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n};\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n};\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n};\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n};\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n};\nexports.shr64_lo = shr64_lo;\n\n},{\"inherits\":165}],162:[function(require,module,exports){\nvar http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    params.protocol = 'https:';\n    return http.request.call(this, params, cb);\n}\n\n},{\"http\":220}],163:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],164:[function(require,module,exports){\narguments[4][30][0].apply(exports,arguments)\n},{\"dup\":30}],165:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],166:[function(require,module,exports){\n/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n\n},{}],167:[function(require,module,exports){\narguments[4][31][0].apply(exports,arguments)\n},{\"dup\":31}],168:[function(require,module,exports){\nvar bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._rand = function _rand(n) {\n  var len = n.bitLength();\n  var buf = this.rand.generate(Math.ceil(len / 8));\n\n  // Set low bits\n  buf[0] |= 3;\n\n  // Mask high bits\n  var mask = len & 0x7;\n  if (mask !== 0)\n    buf[buf.length - 1] >>= 7 - mask;\n\n  return new bn(buf);\n}\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  var n2 = n1.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._rand(n2);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  var n2 = n1.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._rand(n2);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n\n},{\"bn.js\":85,\"brorand\":86}],169:[function(require,module,exports){\nmodule.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n\n},{}],170:[function(require,module,exports){\n'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs+len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n\n},{}],171:[function(require,module,exports){\n'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n\n},{}],172:[function(require,module,exports){\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n},{}],173:[function(require,module,exports){\n'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n =0; n < 256; n++) {\n    c = n;\n    for (var k =0; k < 8; k++) {\n      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc = crc ^ (-1);\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n\n},{}],174:[function(require,module,exports){\n'use strict';\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg   = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2*L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only (s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH-1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH-1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length-1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH-1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nvar Config = function (good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n};\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);\n  this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS+1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  s.d_buf = s.lit_bufsize >> 1;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n                );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n/* =========================================================================\n * Copy the source state to the destination state\n */\n//function deflateCopy(dest, source) {\n//\n//}\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n\n},{\"../utils/common\":170,\"./adler32\":171,\"./crc32\":173,\"./messages\":178,\"./trees\":179}],175:[function(require,module,exports){\n'use strict';\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n},{}],176:[function(require,module,exports){\n'use strict';\n\n\nvar utils = require('../utils/common');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar inflate_fast = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction ZSWAP32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window,src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window,src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n    case HEAD:\n      if (state.wrap === 0) {\n        state.mode = TYPEDO;\n        break;\n      }\n      //=== NEEDBITS(16);\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = FLAGS;\n        break;\n      }\n      state.flags = 0;           /* expect zlib header */\n      if (state.head) {\n        state.head.done = false;\n      }\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n        strm.msg = 'incorrect header check';\n        state.mode = BAD;\n        break;\n      }\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\n      if (state.wbits === 0) {\n        state.wbits = len;\n      }\n      else if (len > state.wbits) {\n        strm.msg = 'invalid window size';\n        state.mode = BAD;\n        break;\n      }\n      state.dmax = 1 << len;\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = hold & 0x200 ? DICTID : TYPE;\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      break;\n    case FLAGS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.flags = hold;\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      if (state.flags & 0xe000) {\n        strm.msg = 'unknown header flags set';\n        state.mode = BAD;\n        break;\n      }\n      if (state.head) {\n        state.head.text = ((hold >> 8) & 1);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = TIME;\n      /* falls through */\n    case TIME:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.time = hold;\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC4(state.check, hold)\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        hbuf[2] = (hold >>> 16) & 0xff;\n        hbuf[3] = (hold >>> 24) & 0xff;\n        state.check = crc32(state.check, hbuf, 4, 0);\n        //===\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = OS;\n      /* falls through */\n    case OS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.xflags = (hold & 0xff);\n        state.head.os = (hold >> 8);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = EXLEN;\n      /* falls through */\n    case EXLEN:\n      if (state.flags & 0x0400) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length = hold;\n        if (state.head) {\n          state.head.extra_len = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      else if (state.head) {\n        state.head.extra = null/*Z_NULL*/;\n      }\n      state.mode = EXTRA;\n      /* falls through */\n    case EXTRA:\n      if (state.flags & 0x0400) {\n        copy = state.length;\n        if (copy > have) { copy = have; }\n        if (copy) {\n          if (state.head) {\n            len = state.head.extra_len - state.length;\n            if (!state.head.extra) {\n              // Use untyped array for more conveniend processing later\n              state.head.extra = new Array(state.head.extra_len);\n            }\n            utils.arraySet(\n              state.head.extra,\n              input,\n              next,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len\n            );\n            //zmemcpy(state.head.extra + len, next,\n            //        len + copy > state.head.extra_max ?\n            //        state.head.extra_max - len : copy);\n          }\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          state.length -= copy;\n        }\n        if (state.length) { break inf_leave; }\n      }\n      state.length = 0;\n      state.mode = NAME;\n      /* falls through */\n    case NAME:\n      if (state.flags & 0x0800) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          // TODO: 2 or 1 bytes?\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.name_max*/)) {\n            state.head.name += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.name = null;\n      }\n      state.length = 0;\n      state.mode = COMMENT;\n      /* falls through */\n    case COMMENT:\n      if (state.flags & 0x1000) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.comm_max*/)) {\n            state.head.comment += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.comment = null;\n      }\n      state.mode = HCRC;\n      /* falls through */\n    case HCRC:\n      if (state.flags & 0x0200) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.check & 0xffff)) {\n          strm.msg = 'header crc mismatch';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      if (state.head) {\n        state.head.hcrc = ((state.flags >> 9) & 1);\n        state.head.done = true;\n      }\n      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      break;\n    case DICTID:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      strm.adler = state.check = ZSWAP32(hold);\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = DICT;\n      /* falls through */\n    case DICT:\n      if (state.havedict === 0) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        return Z_NEED_DICT;\n      }\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      /* falls through */\n    case TYPE:\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case TYPEDO:\n      if (state.last) {\n        //--- BYTEBITS() ---//\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        state.mode = CHECK;\n        break;\n      }\n      //=== NEEDBITS(3); */\n      while (bits < 3) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.last = (hold & 0x01)/*BITS(1)*/;\n      //--- DROPBITS(1) ---//\n      hold >>>= 1;\n      bits -= 1;\n      //---//\n\n      switch ((hold & 0x03)/*BITS(2)*/) {\n      case 0:                             /* stored block */\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = STORED;\n        break;\n      case 1:                             /* fixed block */\n        fixedtables(state);\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = LEN_;             /* decode codes */\n        if (flush === Z_TREES) {\n          //--- DROPBITS(2) ---//\n          hold >>>= 2;\n          bits -= 2;\n          //---//\n          break inf_leave;\n        }\n        break;\n      case 2:                             /* dynamic block */\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = TABLE;\n        break;\n      case 3:\n        strm.msg = 'invalid block type';\n        state.mode = BAD;\n      }\n      //--- DROPBITS(2) ---//\n      hold >>>= 2;\n      bits -= 2;\n      //---//\n      break;\n    case STORED:\n      //--- BYTEBITS() ---// /* go to byte boundary */\n      hold >>>= bits & 7;\n      bits -= bits & 7;\n      //---//\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n        strm.msg = 'invalid stored block lengths';\n        state.mode = BAD;\n        break;\n      }\n      state.length = hold & 0xffff;\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\n      //        state.length));\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = COPY_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case COPY_:\n      state.mode = COPY;\n      /* falls through */\n    case COPY:\n      copy = state.length;\n      if (copy) {\n        if (copy > have) { copy = have; }\n        if (copy > left) { copy = left; }\n        if (copy === 0) { break inf_leave; }\n        //--- zmemcpy(put, next, copy); ---\n        utils.arraySet(output, input, next, copy, put);\n        //---//\n        have -= copy;\n        next += copy;\n        left -= copy;\n        put += copy;\n        state.length -= copy;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\n      state.mode = TYPE;\n      break;\n    case TABLE:\n      //=== NEEDBITS(14); */\n      while (bits < 14) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n      if (state.nlen > 286 || state.ndist > 30) {\n        strm.msg = 'too many length or distance symbols';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n      state.have = 0;\n      state.mode = LENLENS;\n      /* falls through */\n    case LENLENS:\n      while (state.have < state.ncode) {\n        //=== NEEDBITS(3);\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n        //--- DROPBITS(3) ---//\n        hold >>>= 3;\n        bits -= 3;\n        //---//\n      }\n      while (state.have < 19) {\n        state.lens[order[state.have++]] = 0;\n      }\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      //state.next = state.codes;\n      //state.lencode = state.next;\n      // Switch to use dynamic table\n      state.lencode = state.lendyn;\n      state.lenbits = 7;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n      state.lenbits = opts.bits;\n\n      if (ret) {\n        strm.msg = 'invalid code lengths set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n      state.have = 0;\n      state.mode = CODELENS;\n      /* falls through */\n    case CODELENS:\n      while (state.have < state.nlen + state.ndist) {\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_val < 16) {\n          //--- DROPBITS(here.bits) ---//\n          hold >>>= here_bits;\n          bits -= here_bits;\n          //---//\n          state.lens[state.have++] = here_val;\n        }\n        else {\n          if (here_val === 16) {\n            //=== NEEDBITS(here.bits + 2);\n            n = here_bits + 2;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            if (state.have === 0) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            len = state.lens[state.have - 1];\n            copy = 3 + (hold & 0x03);//BITS(2);\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            //---//\n          }\n          else if (here_val === 17) {\n            //=== NEEDBITS(here.bits + 3);\n            n = here_bits + 3;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 3 + (hold & 0x07);//BITS(3);\n            //--- DROPBITS(3) ---//\n            hold >>>= 3;\n            bits -= 3;\n            //---//\n          }\n          else {\n            //=== NEEDBITS(here.bits + 7);\n            n = here_bits + 7;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 11 + (hold & 0x7f);//BITS(7);\n            //--- DROPBITS(7) ---//\n            hold >>>= 7;\n            bits -= 7;\n            //---//\n          }\n          if (state.have + copy > state.nlen + state.ndist) {\n            strm.msg = 'invalid bit length repeat';\n            state.mode = BAD;\n            break;\n          }\n          while (copy--) {\n            state.lens[state.have++] = len;\n          }\n        }\n      }\n\n      /* handle error breaks in while */\n      if (state.mode === BAD) { break; }\n\n      /* check for end-of-block code (better have one) */\n      if (state.lens[256] === 0) {\n        strm.msg = 'invalid code -- missing end-of-block';\n        state.mode = BAD;\n        break;\n      }\n\n      /* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */\n      state.lenbits = 9;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.lenbits = opts.bits;\n      // state.lencode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid literal/lengths set';\n        state.mode = BAD;\n        break;\n      }\n\n      state.distbits = 6;\n      //state.distcode.copy(state.codes);\n      // Switch to use dynamic table\n      state.distcode = state.distdyn;\n      opts = {bits: state.distbits};\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.distbits = opts.bits;\n      // state.distcode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid distances set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\n      state.mode = LEN_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case LEN_:\n      state.mode = LEN;\n      /* falls through */\n    case LEN:\n      if (have >= 6 && left >= 258) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        inflate_fast(strm, _out);\n        //--- LOAD() ---\n        put = strm.next_out;\n        output = strm.output;\n        left = strm.avail_out;\n        next = strm.next_in;\n        input = strm.input;\n        have = strm.avail_in;\n        hold = state.hold;\n        bits = state.bits;\n        //---\n\n        if (state.mode === TYPE) {\n          state.back = -1;\n        }\n        break;\n      }\n      state.back = 0;\n      for (;;) {\n        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if (here_bits <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if (here_op && (here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.lencode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      state.length = here_val;\n      if (here_op === 0) {\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        state.mode = LIT;\n        break;\n      }\n      if (here_op & 32) {\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.back = -1;\n        state.mode = TYPE;\n        break;\n      }\n      if (here_op & 64) {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break;\n      }\n      state.extra = here_op & 15;\n      state.mode = LENEXT;\n      /* falls through */\n    case LENEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n      state.was = state.length;\n      state.mode = DIST;\n      /* falls through */\n    case DIST:\n      for (;;) {\n        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if ((here_bits) <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if ((here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.distcode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      if (here_op & 64) {\n        strm.msg = 'invalid distance code';\n        state.mode = BAD;\n        break;\n      }\n      state.offset = here_val;\n      state.extra = (here_op) & 15;\n      state.mode = DISTEXT;\n      /* falls through */\n    case DISTEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n//#ifdef INFLATE_STRICT\n      if (state.offset > state.dmax) {\n        strm.msg = 'invalid distance too far back';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n      state.mode = MATCH;\n      /* falls through */\n    case MATCH:\n      if (left === 0) { break inf_leave; }\n      copy = _out - left;\n      if (state.offset > copy) {         /* copy from window */\n        copy = state.offset - copy;\n        if (copy > state.whave) {\n          if (state.sane) {\n            strm.msg = 'invalid distance too far back';\n            state.mode = BAD;\n            break;\n          }\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n        }\n        if (copy > state.wnext) {\n          copy -= state.wnext;\n          from = state.wsize - copy;\n        }\n        else {\n          from = state.wnext - copy;\n        }\n        if (copy > state.length) { copy = state.length; }\n        from_source = state.window;\n      }\n      else {                              /* copy from output */\n        from_source = output;\n        from = put - state.offset;\n        copy = state.length;\n      }\n      if (copy > left) { copy = left; }\n      left -= copy;\n      state.length -= copy;\n      do {\n        output[put++] = from_source[from++];\n      } while (--copy);\n      if (state.length === 0) { state.mode = LEN; }\n      break;\n    case LIT:\n      if (left === 0) { break inf_leave; }\n      output[put++] = state.length;\n      left--;\n      state.mode = LEN;\n      break;\n    case CHECK:\n      if (state.wrap) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          // Use '|' insdead of '+' to make sure that result is signed\n          hold |= input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        _out -= left;\n        strm.total_out += _out;\n        state.total += _out;\n        if (_out) {\n          strm.adler = state.check =\n              /*UPDATE(state.check, put - _out, _out);*/\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n        }\n        _out = left;\n        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too\n        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {\n          strm.msg = 'incorrect data check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n      }\n      state.mode = LENGTH;\n      /* falls through */\n    case LENGTH:\n      if (state.wrap && state.flags) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.total & 0xffffffff)) {\n          strm.msg = 'incorrect length check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n      }\n      state.mode = DONE;\n      /* falls through */\n    case DONE:\n      ret = Z_STREAM_END;\n      break inf_leave;\n    case BAD:\n      ret = Z_DATA_ERROR;\n      break inf_leave;\n    case MEM:\n      return Z_MEM_ERROR;\n    case SYNC:\n      /* falls through */\n    default:\n      return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n\n},{\"../utils/common\":170,\"./adler32\":171,\"./crc32\":173,\"./inffast\":175,\"./inftrees\":177}],177:[function(require,module,exports){\n'use strict';\n\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  var i=0;\n  /* process all codes and make table entries */\n  for (;;) {\n    i++;\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n},{\"../utils/common\":170}],178:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  '2':    'need dictionary',     /* Z_NEED_DICT       2  */\n  '1':    'stream end',          /* Z_STREAM_END      1  */\n  '0':    '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n},{}],179:[function(require,module,exports){\n'use strict';\n\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2*L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES+2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nvar StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n};\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nvar TreeDesc = function(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n};\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short (s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max+1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n*2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n-base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length-1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits+1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m*2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;\n        tree[m*2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits-1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n*2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS+1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES-1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1<<extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length-1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0 ; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1<<extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n*2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n*2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n*2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n*2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES+1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n*2 + 1]/*.Len*/ = 5;\n    static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n*2;\n  var _m2 = m*2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code+LITERALS+1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n*2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node*2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6*2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10*2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138*2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count-3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count-3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count-11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3*(max_blindex+1) + 5+5+4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes-1,   5);\n  send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES<<1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len+3+7) >>> 3;\n    static_lenb = (s.static_len+3+7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc*2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize-1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n\n},{\"../utils/common\":170}],180:[function(require,module,exports){\n'use strict';\n\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n\n},{}],181:[function(require,module,exports){\nmodule.exports={\"2.16.840.1.101.3.4.1.1\": \"aes-128-ecb\",\n\"2.16.840.1.101.3.4.1.2\": \"aes-128-cbc\",\n\"2.16.840.1.101.3.4.1.3\": \"aes-128-ofb\",\n\"2.16.840.1.101.3.4.1.4\": \"aes-128-cfb\",\n\"2.16.840.1.101.3.4.1.21\": \"aes-192-ecb\",\n\"2.16.840.1.101.3.4.1.22\": \"aes-192-cbc\",\n\"2.16.840.1.101.3.4.1.23\": \"aes-192-ofb\",\n\"2.16.840.1.101.3.4.1.24\": \"aes-192-cfb\",\n\"2.16.840.1.101.3.4.1.41\": \"aes-256-ecb\",\n\"2.16.840.1.101.3.4.1.42\": \"aes-256-cbc\",\n\"2.16.840.1.101.3.4.1.43\": \"aes-256-ofb\",\n\"2.16.840.1.101.3.4.1.44\": \"aes-256-cfb\"\n}\n},{}],182:[function(require,module,exports){\n// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\nvar asn1 = require('asn1.js')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n\n},{\"asn1.js\":69}],183:[function(require,module,exports){\n(function (Buffer){\n// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED\\r?\\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\\r?\\n\\r?\\n([0-9A-z\\n\\r\\+\\/\\=]+)\\r?\\n/m\nvar startRegex = /^-----BEGIN (.*) KEY-----\\r?\\n/m\nvar fullRegex = /^-----BEGIN (.*) KEY-----\\r?\\n([0-9A-z\\n\\r\\+\\/\\=]+)\\r?\\n-----END \\1 KEY-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = new Buffer(match2[2].replace(/\\r?\\n/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = new Buffer(match[2], 'hex')\n    var cipherText = new Buffer(match[3].replace(/\\r?\\n/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1] + ' KEY'\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"browserify-aes\":90,\"buffer\":116,\"evp_bytestokey\":155}],184:[function(require,module,exports){\n(function (Buffer){\nvar asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = new Buffer(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'PUBLIC KEY':\n      ndata = asn1.PublicKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen)\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./aesid.json\":181,\"./asn1\":182,\"./fixProc\":183,\"browserify-aes\":90,\"buffer\":116,\"pbkdf2\":186}],185:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n\n},{\"_process\":188}],186:[function(require,module,exports){\n(function (Buffer){\nvar createHmac = require('create-hmac')\nvar MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nexports.pbkdf2 = pbkdf2\nfunction pbkdf2 (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('No callback provided to pbkdf2')\n  }\n\n  var result = pbkdf2Sync(password, salt, iterations, keylen, digest)\n  setTimeout(function () {\n    callback(undefined, result)\n  })\n}\n\nexports.pbkdf2Sync = pbkdf2Sync\nfunction pbkdf2Sync (password, salt, iterations, keylen, digest) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC) {\n    throw new TypeError('Bad key length')\n  }\n\n  digest = digest || 'sha1'\n\n  if (!Buffer.isBuffer(password)) password = new Buffer(password, 'binary')\n  if (!Buffer.isBuffer(salt)) salt = new Buffer(salt, 'binary')\n\n  var hLen\n  var l = 1\n  var DK = new Buffer(keylen)\n  var block1 = new Buffer(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var r\n  var T\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n    var U = createHmac(digest, password).update(block1).digest()\n\n    if (!hLen) {\n      hLen = U.length\n      T = new Buffer(hLen)\n      l = Math.ceil(keylen / hLen)\n      r = keylen - (l - 1) * hLen\n    }\n\n    U.copy(T, 0, 0, hLen)\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n\n      for (var k = 0; k < hLen; k++) {\n        T[k] ^= U[k]\n      }\n    }\n\n    var destPos = (i - 1) * hLen\n    var len = (i === l ? r : hLen)\n    T.copy(DK, destPos, 0, len)\n  }\n\n  return DK\n}\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"create-hmac\":125}],187:[function(require,module,exports){\n(function (process){\n'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn) {\n  var args = new Array(arguments.length - 1);\n  var i = 0;\n  while (i < args.length) {\n    args[i++] = arguments[i];\n  }\n  process.nextTick(function afterTick() {\n    fn.apply(null, args);\n  });\n}\n\n}).call(this,require('_process'))\n\n},{\"_process\":188}],188:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],189:[function(require,module,exports){\nexports.publicEncrypt = require('./publicEncrypt');\nexports.privateDecrypt = require('./privateDecrypt');\n\nexports.privateEncrypt = function privateEncrypt(key, buf) {\n  return exports.publicEncrypt(key, buf, true);\n};\n\nexports.publicDecrypt = function publicDecrypt(key, buf) {\n  return exports.privateDecrypt(key, buf, true);\n};\n},{\"./privateDecrypt\":191,\"./publicEncrypt\":192}],190:[function(require,module,exports){\n(function (Buffer){\nvar createHash = require('create-hash');\nmodule.exports = function (seed, len) {\n  var t = new Buffer('');\n  var  i = 0, c;\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = new Buffer(4);\n  out.writeUInt32BE(c,0);\n  return out;\n}\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116,\"create-hash\":122}],191:[function(require,module,exports){\n(function (Buffer){\nvar parseKeys = require('parse-asn1');\nvar mgf = require('./mgf');\nvar xor = require('./xor');\nvar bn = require('bn.js');\nvar crt = require('browserify-rsa');\nvar createHash = require('create-hash');\nvar withPublic = require('./withPublic');\nmodule.exports = function privateDecrypt(private_key, enc, reverse) {\n  var padding;\n  if (private_key.padding) {\n    padding = private_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  \n  var key = parseKeys(private_key);\n  var k = key.modulus.byteLength();\n  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error');\n  }\n  var msg;\n  if (reverse) {\n    msg = withPublic(new bn(enc), key);\n  } else {\n    msg = crt(enc, key);\n  }\n  var zBuffer = new Buffer(k - msg.length);\n  zBuffer.fill(0);\n  msg = Buffer.concat([zBuffer, msg], k);\n  if (padding === 4) {\n    return oaep(key, msg);\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    return msg;\n  } else {\n    throw new Error('unknown padding');\n  }\n};\n\nfunction oaep(key, msg){\n  var n = key.modulus;\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (msg[0] !== 0) {\n    throw new Error('decryption error');\n  }\n  var maskedSeed = msg.slice(1, hLen + 1);\n  var maskedDb =  msg.slice(hLen + 1);\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen));\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1));\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error');\n  }\n  var i = hLen;\n  while (db[i] === 0) {\n    i++;\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error');\n  }\n  return db.slice(i);\n}\n\nfunction pkcs1(key, msg, reverse){\n  var p1 = msg.slice(0, 2);\n  var i = 2;\n  var status = 0;\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++;\n      break;\n    }\n  }\n  var ps = msg.slice(2, i - 1);\n  var p2 = msg.slice(i - 1, i);\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){\n    status++;\n  }\n  if (ps.length < 8) {\n    status++;\n  }\n  if (status) {\n    throw new Error('decryption error');\n  }\n  return  msg.slice(i);\n}\nfunction compare(a, b){\n  a = new Buffer(a);\n  b = new Buffer(b);\n  var dif = 0;\n  var len = a.length;\n  if (a.length !== b.length) {\n    dif++;\n    len = Math.min(a.length, b.length);\n  }\n  var i = -1;\n  while (++i < len) {\n    dif += (a[i] ^ b[i]);\n  }\n  return dif;\n}\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./mgf\":190,\"./withPublic\":193,\"./xor\":194,\"bn.js\":85,\"browserify-rsa\":106,\"buffer\":116,\"create-hash\":122,\"parse-asn1\":184}],192:[function(require,module,exports){\n(function (Buffer){\nvar parseKeys = require('parse-asn1');\nvar randomBytes = require('randombytes');\nvar createHash = require('create-hash');\nvar mgf = require('./mgf');\nvar xor = require('./xor');\nvar bn = require('bn.js');\nvar withPublic = require('./withPublic');\nvar crt = require('browserify-rsa');\n\nvar constants = {\n  RSA_PKCS1_OAEP_PADDING: 4,\n  RSA_PKCS1_PADDIN: 1,\n  RSA_NO_PADDING: 3\n};\n\nmodule.exports = function publicEncrypt(public_key, msg, reverse) {\n  var padding;\n  if (public_key.padding) {\n    padding = public_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  var key = parseKeys(public_key);\n  var paddedMsg;\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg);\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    paddedMsg = new bn(msg);\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus');\n    }\n  } else {\n    throw new Error('unknown padding');\n  }\n  if (reverse) {\n    return crt(paddedMsg, key);\n  } else {\n    return withPublic(paddedMsg, key);\n  }\n};\n\nfunction oaep(key, msg){\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long');\n  }\n  var ps = new Buffer(k - mLen - hLen2 - 2);\n  ps.fill(0);\n  var dblen = k - hLen - 1;\n  var seed = randomBytes(hLen);\n  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen));\n  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));\n}\nfunction pkcs1(key, msg, reverse){\n  var mLen = msg.length;\n  var k = key.modulus.byteLength();\n  if (mLen > k - 11) {\n    throw new Error('message too long');\n  }\n  var ps;\n  if (reverse) {\n    ps = new Buffer(k - mLen - 3);\n    ps.fill(0xff);\n  } else {\n    ps = nonZero(k - mLen - 3);\n  }\n  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));\n}\nfunction nonZero(len, crypto) {\n  var out = new Buffer(len);\n  var i = 0;\n  var cache = randomBytes(len*2);\n  var cur = 0;\n  var num;\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len*2);\n      cur = 0;\n    }\n    num = cache[cur++];\n    if (num) {\n      out[i++] = num;\n    }\n  }\n  return out;\n}\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./mgf\":190,\"./withPublic\":193,\"./xor\":194,\"bn.js\":85,\"browserify-rsa\":106,\"buffer\":116,\"create-hash\":122,\"parse-asn1\":184,\"randombytes\":199}],193:[function(require,module,exports){\n(function (Buffer){\nvar bn = require('bn.js');\nfunction withPublic(paddedMsg, key) {\n  return new Buffer(paddedMsg\n    .toRed(bn.mont(key.modulus))\n    .redPow(new bn(key.publicExponent))\n    .fromRed()\n    .toArray());\n}\n\nmodule.exports = withPublic;\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"bn.js\":85,\"buffer\":116}],194:[function(require,module,exports){\nmodule.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};\n},{}],195:[function(require,module,exports){\n(function (global){\n/*! https://mths.be/punycode v1.4.0 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],196:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],197:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],198:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":196,\"./encode\":197}],199:[function(require,module,exports){\n(function (process,global,Buffer){\n'use strict';\n\nvar crypto = global.crypto || global.msCrypto\nif(crypto && crypto.getRandomValues) {\n  module.exports = randomBytes;\n} else {\n  module.exports = oldBrowser;\n}\nfunction randomBytes(size, cb) {\n  var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array\n    /* This will not work in older browsers.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n     */\n\n  crypto.getRandomValues(bytes);\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes);\n    });\n  }\n  return bytes;\n}\nfunction oldBrowser() {\n  throw new Error(\n      'secure random number generation not supported by this browser\\n'+\n      'use chrome, FireFox or Internet Explorer 11'\n    )\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"_process\":188,\"buffer\":116}],200:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_duplex.js\")\n\n},{\"./lib/_stream_duplex.js\":201}],201:[function(require,module,exports){\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\n},{\"./_stream_readable\":203,\"./_stream_writable\":205,\"core-util-is\":120,\"inherits\":165,\"process-nextick-args\":187}],202:[function(require,module,exports){\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n\n},{\"./_stream_transform\":204,\"core-util-is\":120,\"inherits\":165}],203:[function(require,module,exports){\n(function (process){\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events');\n\n/*<replacement>*/\nvar EElistenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function')\n    this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function() {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else {\n      return state.length;\n    }\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (ret !== null)\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      processNextTick(emitReadable_, stream);\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    processNextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      if (state.pipesCount === 1 &&\n          state.pipes[0] === dest &&\n          src.listenerCount('data') === 1 &&\n          !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }; }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else if (list.length === 1)\n      ret = list[0];\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n\n}).call(this,require('_process'))\n\n},{\"./_stream_duplex\":201,\"_process\":188,\"buffer\":116,\"core-util-is\":120,\"events\":154,\"inherits\":165,\"isarray\":167,\"process-nextick-args\":187,\"string_decoder/\":224,\"util\":87}],204:[function(require,module,exports){\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  this.once('prefinish', function() {\n    if (typeof this._flush === 'function')\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n\n},{\"./_stream_duplex\":201,\"core-util-is\":120,\"inherits\":165}],205:[function(require,module,exports){\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function (){try {\nObject.defineProperty(WritableState.prototype, 'buffer', {\n  get: internalUtil.deprecate(function() {\n    return this.getBuffer();\n  }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +\n     'instead.')\n});\n}catch(_){}}());\n\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = nop;\n\n  if (state.ended)\n    writeAfterEnd(this, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.bufferedRequest)\n      clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64',\n'ucs2', 'ucs-2','utf16le', 'utf-16le', 'raw']\n.indexOf((encoding + '').toLowerCase()) > -1))\n    throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync)\n    processNextTick(cb, er);\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      processNextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var buffer = [];\n    var cbs = [];\n    while (entry) {\n      cbs.push(entry.callback);\n      buffer.push(entry);\n      entry = entry.next;\n    }\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    doWrite(stream, state, true, state.length, buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null)\n      state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined)\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(state) {\n  return (state.ending &&\n          state.length === 0 &&\n          state.bufferedRequest === null &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      processNextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n\n},{\"./_stream_duplex\":201,\"buffer\":116,\"core-util-is\":120,\"events\":154,\"inherits\":165,\"process-nextick-args\":187,\"util-deprecate\":227}],206:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_passthrough.js\")\n\n},{\"./lib/_stream_passthrough.js\":202}],207:[function(require,module,exports){\nvar Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":201,\"./lib/_stream_passthrough.js\":202,\"./lib/_stream_readable.js\":203,\"./lib/_stream_transform.js\":204,\"./lib/_stream_writable.js\":205}],208:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_transform.js\")\n\n},{\"./lib/_stream_transform.js\":204}],209:[function(require,module,exports){\nmodule.exports = require(\"./lib/_stream_writable.js\")\n\n},{\"./lib/_stream_writable.js\":205}],210:[function(require,module,exports){\n(function (Buffer){\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n/** @preserve\n(c) 2012 by Cédric Mesnil. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n// constants table\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]\nvar hr = [0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]\n\nfunction bytesToWords (bytes) {\n  var words = []\n  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {\n    words[b >>> 5] |= bytes[i] << (24 - b % 32)\n  }\n  return words\n}\n\nfunction wordsToBytes (words) {\n  var bytes = []\n  for (var b = 0; b < words.length * 32; b += 8) {\n    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)\n  }\n  return bytes\n}\n\nfunction processBlock (H, M, offset) {\n  // swap endian\n  for (var i = 0; i < 16; i++) {\n    var offset_i = offset + i\n    var M_offset_i = M[offset_i]\n\n    // Swap\n    M[offset_i] = (\n      (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |\n      (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n    )\n  }\n\n  // Working variables\n  var al, bl, cl, dl, el\n  var ar, br, cr, dr, er\n\n  ar = al = H[0]\n  br = bl = H[1]\n  cr = cl = H[2]\n  dr = dl = H[3]\n  er = el = H[4]\n\n  // computation\n  var t\n  for (i = 0; i < 80; i += 1) {\n    t = (al + M[offset + zl[i]]) | 0\n    if (i < 16) {\n      t += f1(bl, cl, dl) + hl[0]\n    } else if (i < 32) {\n      t += f2(bl, cl, dl) + hl[1]\n    } else if (i < 48) {\n      t += f3(bl, cl, dl) + hl[2]\n    } else if (i < 64) {\n      t += f4(bl, cl, dl) + hl[3]\n    } else {// if (i<80) {\n      t += f5(bl, cl, dl) + hl[4]\n    }\n    t = t | 0\n    t = rotl(t, sl[i])\n    t = (t + el) | 0\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = t\n\n    t = (ar + M[offset + zr[i]]) | 0\n    if (i < 16) {\n      t += f5(br, cr, dr) + hr[0]\n    } else if (i < 32) {\n      t += f4(br, cr, dr) + hr[1]\n    } else if (i < 48) {\n      t += f3(br, cr, dr) + hr[2]\n    } else if (i < 64) {\n      t += f2(br, cr, dr) + hr[3]\n    } else {// if (i<80) {\n      t += f1(br, cr, dr) + hr[4]\n    }\n\n    t = t | 0\n    t = rotl(t, sr[i])\n    t = (t + er) | 0\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = t\n  }\n\n  // intermediate hash value\n  t = (H[1] + cl + dr) | 0\n  H[1] = (H[2] + dl + er) | 0\n  H[2] = (H[3] + el + ar) | 0\n  H[3] = (H[4] + al + br) | 0\n  H[4] = (H[0] + bl + cr) | 0\n  H[0] = t\n}\n\nfunction f1 (x, y, z) {\n  return ((x) ^ (y) ^ (z))\n}\n\nfunction f2 (x, y, z) {\n  return (((x) & (y)) | ((~x) & (z)))\n}\n\nfunction f3 (x, y, z) {\n  return (((x) | (~(y))) ^ (z))\n}\n\nfunction f4 (x, y, z) {\n  return (((x) & (z)) | ((y) & (~(z))))\n}\n\nfunction f5 (x, y, z) {\n  return ((x) ^ ((y) | (~(z))))\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction ripemd160 (message) {\n  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]\n\n  if (typeof message === 'string') {\n    message = new Buffer(message, 'utf8')\n  }\n\n  var m = bytesToWords(message)\n\n  var nBitsLeft = message.length * 8\n  var nBitsTotal = message.length * 8\n\n  // Add padding\n  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32)\n  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n    (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n    (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)\n  )\n\n  for (var i = 0; i < m.length; i += 16) {\n    processBlock(H, m, i)\n  }\n\n  // swap endian\n  for (i = 0; i < 5; i++) {\n    // shortcut\n    var H_i = H[i]\n\n    // Swap\n    H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |\n      (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00)\n  }\n\n  var digestbytes = wordsToBytes(H)\n  return new Buffer(digestbytes)\n}\n\nmodule.exports = ripemd160\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],211:[function(require,module,exports){\n(function (Buffer){\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = new Buffer(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n  this._s = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = new Buffer(data, enc)\n  }\n\n  var l = this._len += data.length\n  var s = this._s || 0\n  var f = 0\n  var buffer = this._block\n\n  while (s < l) {\n    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))\n    var ch = (t - f)\n\n    for (var i = 0; i < ch; i++) {\n      buffer[(s % this._blockSize) + i] = data[i + f]\n    }\n\n    s += ch\n    f += ch\n\n    if ((s % this._blockSize) === 0) {\n      this._update(buffer)\n    }\n  }\n  this._s = s\n\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  // Suppose the length of the message M, in bits, is l\n  var l = this._len * 8\n\n  // Append the bit 1 to the end of the message\n  this._block[this._len % this._blockSize] = 0x80\n\n  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize\n  this._block.fill(0, this._len % this._blockSize + 1)\n\n  if (l % (this._blockSize * 8) >= this._finalSize * 8) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  // to this append the block which is equal to the number l written in binary\n  // TODO: handle case where l is > Math.pow(2, 29)\n  this._block.writeInt32BE(l, this._blockSize - 4)\n\n  var hash = this._update(this._block) || this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":116}],212:[function(require,module,exports){\nvar exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n\n},{\"./sha\":213,\"./sha1\":214,\"./sha224\":215,\"./sha256\":216,\"./sha384\":217,\"./sha512\":218}],213:[function(require,module,exports){\n(function (Buffer){\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301 | 0\n  this._b = 0xefcdab89 | 0\n  this._c = 0x98badcfe | 0\n  this._d = 0x10325476 | 0\n  this._e = 0xc3d2e1f0 | 0\n\n  return this\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol (num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt))\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n  var e = this._e\n\n  var j = 0\n  var k\n\n  /*\n   * SHA-1 has a bitwise rotate left operation. But, SHA is not\n   * function calcW() { return rol(W[j - 3] ^ W[j -  8] ^ W[j - 14] ^ W[j - 16], 1) }\n   */\n  function calcW () { return W[j - 3] ^ W[j - 8] ^ W[j - 14] ^ W[j - 16] }\n  function loop (w, f) {\n    W[j] = w\n\n    var t = rol(a, 5) + f + e + w + k\n\n    e = d\n    d = c\n    c = rol(b, 30)\n    b = a\n    a = t\n    j++\n  }\n\n  k = 1518500249\n  while (j < 16) loop(M.readInt32BE(j * 4), (b & c) | ((~b) & d))\n  while (j < 20) loop(calcW(), (b & c) | ((~b) & d))\n  k = 1859775393\n  while (j < 40) loop(calcW(), b ^ c ^ d)\n  k = -1894007588\n  while (j < 60) loop(calcW(), (b & c) | (b & d) | (c & d))\n  k = -899497514\n  while (j < 80) loop(calcW(), b ^ c ^ d)\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = new Buffer(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./hash\":211,\"buffer\":116,\"inherits\":165}],214:[function(require,module,exports){\n(function (Buffer){\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301 | 0\n  this._b = 0xefcdab89 | 0\n  this._c = 0x98badcfe | 0\n  this._d = 0x10325476 | 0\n  this._e = 0xc3d2e1f0 | 0\n\n  return this\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol (num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt))\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n  var e = this._e\n\n  var j = 0\n  var k\n\n  function calcW () { return rol(W[j - 3] ^ W[j - 8] ^ W[j - 14] ^ W[j - 16], 1) }\n  function loop (w, f) {\n    W[j] = w\n\n    var t = rol(a, 5) + f + e + w + k\n\n    e = d\n    d = c\n    c = rol(b, 30)\n    b = a\n    a = t\n    j++\n  }\n\n  k = 1518500249\n  while (j < 16) loop(M.readInt32BE(j * 4), (b & c) | ((~b) & d))\n  while (j < 20) loop(calcW(), (b & c) | ((~b) & d))\n  k = 1859775393\n  while (j < 40) loop(calcW(), b ^ c ^ d)\n  k = -1894007588\n  while (j < 60) loop(calcW(), (b & c) | (b & d) | (c & d))\n  k = -899497514\n  while (j < 80) loop(calcW(), b ^ c ^ d)\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = new Buffer(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./hash\":211,\"buffer\":116,\"inherits\":165}],215:[function(require,module,exports){\n(function (Buffer){\n/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8 | 0\n  this._b = 0x367cd507 | 0\n  this._c = 0x3070dd17 | 0\n  this._d = 0xf70e5939 | 0\n  this._e = 0xffc00b31 | 0\n  this._f = 0x68581511 | 0\n  this._g = 0x64f98fa7 | 0\n  this._h = 0xbefa4fa4 | 0\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = new Buffer(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./hash\":211,\"./sha256\":216,\"buffer\":116,\"inherits\":165}],216:[function(require,module,exports){\n(function (Buffer){\n/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667 | 0\n  this._b = 0xbb67ae85 | 0\n  this._c = 0x3c6ef372 | 0\n  this._d = 0xa54ff53a | 0\n  this._e = 0x510e527f | 0\n  this._f = 0x9b05688c | 0\n  this._g = 0x1f83d9ab | 0\n  this._h = 0x5be0cd19 | 0\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction Maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction Sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction Sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction Gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction Gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  var j = 0\n\n  function calcW () { return Gamma1(W[j - 2]) + W[j - 7] + Gamma0(W[j - 15]) + W[j - 16] }\n  function loop (w) {\n    W[j] = w\n\n    var T1 = h + Sigma1(e) + Ch(e, f, g) + K[j] + w\n    var T2 = Sigma0(a) + Maj(a, b, c)\n\n    h = g\n    g = f\n    f = e\n    e = d + T1\n    d = c\n    c = b\n    b = a\n    a = T1 + T2\n\n    j++\n  }\n\n  while (j < 16) loop(M.readInt32BE(j * 4))\n  while (j < 64) loop(calcW())\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = new Buffer(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./hash\":211,\"buffer\":116,\"inherits\":165}],217:[function(require,module,exports){\n(function (Buffer){\nvar inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._a = 0xcbbb9d5d | 0\n  this._b = 0x629a292a | 0\n  this._c = 0x9159015a | 0\n  this._d = 0x152fecd8 | 0\n  this._e = 0x67332667 | 0\n  this._f = 0x8eb44a87 | 0\n  this._g = 0xdb0c2e0d | 0\n  this._h = 0x47b5481d | 0\n\n  this._al = 0xc1059ed8 | 0\n  this._bl = 0x367cd507 | 0\n  this._cl = 0x3070dd17 | 0\n  this._dl = 0xf70e5939 | 0\n  this._el = 0xffc00b31 | 0\n  this._fl = 0x68581511 | 0\n  this._gl = 0x64f98fa7 | 0\n  this._hl = 0xbefa4fa4 | 0\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = new Buffer(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._a, this._al, 0)\n  writeInt64BE(this._b, this._bl, 8)\n  writeInt64BE(this._c, this._cl, 16)\n  writeInt64BE(this._d, this._dl, 24)\n  writeInt64BE(this._e, this._el, 32)\n  writeInt64BE(this._f, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./hash\":211,\"./sha512\":218,\"buffer\":116,\"inherits\":165}],218:[function(require,module,exports){\n(function (Buffer){\nvar inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._a = 0x6a09e667 | 0\n  this._b = 0xbb67ae85 | 0\n  this._c = 0x3c6ef372 | 0\n  this._d = 0xa54ff53a | 0\n  this._e = 0x510e527f | 0\n  this._f = 0x9b05688c | 0\n  this._g = 0x1f83d9ab | 0\n  this._h = 0x5be0cd19 | 0\n\n  this._al = 0xf3bcc908 | 0\n  this._bl = 0x84caa73b | 0\n  this._cl = 0xfe94f82b | 0\n  this._dl = 0x5f1d36f1 | 0\n  this._el = 0xade682d1 | 0\n  this._fl = 0x2b3e6c1f | 0\n  this._gl = 0xfb41bd6b | 0\n  this._hl = 0x137e2179 | 0\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction Maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction Sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction Sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  var i = 0\n  var j = 0\n  var Wi, Wil\n  function calcW () {\n    var x = W[j - 15 * 2]\n    var xl = W[j - 15 * 2 + 1]\n    var gamma0 = Gamma0(x, xl)\n    var gamma0l = Gamma0l(xl, x)\n\n    x = W[j - 2 * 2]\n    xl = W[j - 2 * 2 + 1]\n    var gamma1 = Gamma1(x, xl)\n    var gamma1l = Gamma1l(xl, x)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7 = W[j - 7 * 2]\n    var Wi7l = W[j - 7 * 2 + 1]\n\n    var Wi16 = W[j - 16 * 2]\n    var Wi16l = W[j - 16 * 2 + 1]\n\n    Wil = gamma0l + Wi7l\n    Wi = gamma0 + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)\n    Wil = Wil + gamma1l\n    Wi = Wi + gamma1 + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)\n    Wil = Wil + Wi16l\n    Wi = Wi + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)\n  }\n\n  function loop () {\n    W[j] = Wi\n    W[j + 1] = Wil\n\n    var maj = Maj(a, b, c)\n    var majl = Maj(al, bl, cl)\n\n    var sigma0h = Sigma0(a, al)\n    var sigma0l = Sigma0(al, a)\n    var sigma1h = Sigma1(e, el)\n    var sigma1l = Sigma1(el, e)\n\n    // t1 = h + sigma1 + ch + K[i] + W[i]\n    var Ki = K[j]\n    var Kil = K[j + 1]\n\n    var ch = Ch(e, f, g)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = hl + sigma1l\n    var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)\n    t1l = t1l + chl\n    t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)\n    t1l = t1l + Kil\n    t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)\n    t1l = t1l + Wil\n    t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)\n\n    // t2 = sigma0 + maj\n    var t2l = sigma0l + majl\n    var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)\n\n    h = g\n    hl = gl\n    g = f\n    gl = fl\n    f = e\n    fl = el\n    el = (dl + t1l) | 0\n    e = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0\n    d = c\n    dl = cl\n    c = b\n    cl = bl\n    b = a\n    bl = al\n    al = (t1l + t2l) | 0\n    a = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0\n\n    i++\n    j += 2\n  }\n\n  while (i < 16) {\n    Wi = M.readInt32BE(j * 4)\n    Wil = M.readInt32BE(j * 4 + 4)\n\n    loop()\n  }\n\n  while (i < 80) {\n    calcW()\n    loop()\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0\n  this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0\n  this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0\n  this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0\n  this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0\n  this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0\n  this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0\n  this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = new Buffer(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._a, this._al, 0)\n  writeInt64BE(this._b, this._bl, 8)\n  writeInt64BE(this._c, this._cl, 16)\n  writeInt64BE(this._d, this._dl, 24)\n  writeInt64BE(this._e, this._el, 32)\n  writeInt64BE(this._f, this._fl, 40)\n  writeInt64BE(this._g, this._gl, 48)\n  writeInt64BE(this._h, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./hash\":211,\"buffer\":116,\"inherits\":165}],219:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":154,\"inherits\":165,\"readable-stream/duplex.js\":200,\"readable-stream/passthrough.js\":206,\"readable-stream/readable.js\":207,\"readable-stream/transform.js\":208,\"readable-stream/writable.js\":209}],220:[function(require,module,exports){\nvar ClientRequest = require('./lib/request')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\tvar protocol = opts.protocol || ''\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]\n},{\"./lib/request\":222,\"builtin-status-codes\":118,\"url\":225,\"xtend\":231}],221:[function(require,module,exports){\n(function (global){\nexports.fetch = isFunction(global.fetch) && isFunction(global.ReadableByteStream)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\nvar xhr = new global.XMLHttpRequest()\n// If location.host is empty, e.g. if this page/worker was loaded\n// from a Blob, then use example.com to avoid an error\nxhr.open('GET', global.location.host ? '/' : 'https://example.com')\n\nfunction checkTypeSupport (type) {\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\nexports.arraybuffer = haveArrayBuffer && checkTypeSupport('arraybuffer')\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\nexports.overrideMimeType = isFunction(xhr.overrideMimeType)\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n  return typeof value === 'function'\n}\n\nxhr = null // Help gc\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],222:[function(require,module,exports){\n(function (process,global,Buffer){\n// var Base64 = require('Base64')\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary) {\n\tif (capability.fetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tif (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary)\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar self = this\n\treturn self._headers[name.toLowerCase()].value\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body\n\tif (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n\t\tif (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn buffer.toArrayBuffer()\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\tif (self._mode === 'fetch') {\n\t\tvar headers = Object.keys(headersObj).map(function (name) {\n\t\t\treturn [headersObj[name].name, headersObj[name].value]\n\t\t})\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headers,\n\t\t\tbody: body,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin'\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tObject.keys(headersObj).forEach(function (name) {\n\t\t\txhr.setRequestHeader(headersObj[name].name, headersObj[name].value)\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\t// Currently, there isn't a way to truly abort a fetch.\n\t// If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'user-agent',\n\t'via'\n]\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":221,\"./response\":223,\"_process\":188,\"buffer\":116,\"inherits\":165,\"stream\":219}],223:[function(require,module,exports){\n(function (process,global,Buffer){\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t// backwards compatible version of for (<item> of <iterable>):\n\t\t// for (var <item>,_i,_it = <iterable>[Symbol.iterator](); <item> = (_i = _it.next()).value,!_i.done;)\n\t\tfor (var header, _i, _it = response.headers[Symbol.iterator](); header = (_i = _it.next()).value, !_i.done;) {\n\t\t\tself.headers[header[0].toLowerCase()] = header[1]\n\t\t\tself.rawHeaders.push(header[0], header[1])\n\t\t}\n\n\t\t// TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t})\n\t\t}\n\t\tread()\n\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (self.headers[key] !== undefined)\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\telse\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"buffer\").Buffer)\n\n},{\"./capability\":221,\"_process\":188,\"buffer\":116,\"inherits\":165,\"stream\":219}],224:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n\n},{\"buffer\":116}],225:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n},{\"./util\":226,\"punycode\":195,\"querystring\":198}],226:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n},{}],227:[function(require,module,exports){\n(function (global){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],228:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],229:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":228,\"_process\":188,\"inherits\":165}],230:[function(require,module,exports){\nvar indexOf = require('indexof');\n\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    forEach(Object_keys(ctx), function (key) {\n        context[key] = ctx[key];\n    });\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n\n},{\"indexof\":164}],231:[function(require,module,exports){\nmodule.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n},{}]},{},[68])\n\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , join = path.join\n  , dirname = path.dirname\n  , exists = fs.existsSync || path.existsSync\n  , defaults = {\n        arrow: process.env.NODE_BINDINGS_ARROW || ' → '\n      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'\n      , platform: process.platform\n      , arch: process.arch\n      , version: process.versions.node\n      , bindings: 'bindings.node'\n      , try: [\n          // node-gyp's linked version in the \"build\" dir\n          [ 'module_root', 'build', 'bindings' ]\n          // node-waf and gyp_addon (a.k.a node-gyp)\n        , [ 'module_root', 'build', 'Debug', 'bindings' ]\n        , [ 'module_root', 'build', 'Release', 'bindings' ]\n          // Debug files, for development (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Debug', 'bindings' ]\n        , [ 'module_root', 'Debug', 'bindings' ]\n          // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n        , [ 'module_root', 'out', 'Release', 'bindings' ]\n        , [ 'module_root', 'Release', 'bindings' ]\n          // Legacy from node-waf, node <= 0.4.x\n        , [ 'module_root', 'build', 'default', 'bindings' ]\n          // Production \"Release\" buildtype binary (meh...)\n        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]\n        ]\n    }\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings (opts) {\n\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts }\n  } else if (!opts) {\n    opts = {}\n  }\n  opts.__proto__ = defaults\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName())\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node'\n  }\n\n  var tries = []\n    , i = 0\n    , l = opts.try.length\n    , n\n    , b\n    , err\n\n  for (; i<l; i++) {\n    n = join.apply(null, opts.try[i].map(function (p) {\n      return opts[p] || p\n    }))\n    tries.push(n)\n    try {\n      b = opts.path ? require.resolve(n) : require(n)\n      if (!opts.path) {\n        b.path = n\n      }\n      return b\n    } catch (e) {\n      if (!/not find/i.test(e.message)) {\n        throw e\n      }\n    }\n  }\n\n  err = new Error('Could not locate the bindings file. Tried:\\n'\n    + tries.map(function (a) { return opts.arrow + a }).join('\\n'))\n  err.tries = tries\n  throw err\n}\nmodule.exports = exports = bindings\n\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName (calling_file) {\n  var origPST = Error.prepareStackTrace\n    , origSTL = Error.stackTraceLimit\n    , dummy = {}\n    , fileName\n\n  Error.stackTraceLimit = 10\n\n  Error.prepareStackTrace = function (e, st) {\n    for (var i=0, l=st.length; i<l; i++) {\n      fileName = st[i].getFileName()\n      if (fileName !== __filename) {\n        if (calling_file) {\n            if (fileName !== calling_file) {\n              return\n            }\n        } else {\n          return\n        }\n      }\n    }\n  }\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy)\n  dummy.stack\n\n  // cleanup\n  Error.prepareStackTrace = origPST\n  Error.stackTraceLimit = origSTL\n\n  return fileName\n}\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot (file) {\n  var dir = dirname(file)\n    , prev\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd()\n    }\n    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error('Could not find module root given file: \"' + file\n                    + '\". Do you have a `package.json` file? ')\n    }\n    // Try the parent dir next\n    prev = dir\n    dir = join(dir, '..')\n  }\n}\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","'use strict';\n\n/*!\n * bufferutil: WebSocket buffer utils\n * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports.BufferUtil = {\n  merge: function(mergedBuffer, buffers) {\n    for (var i = 0, offset = 0, l = buffers.length; i < l; ++i) {\n      var buf = buffers[i];\n\n      buf.copy(mergedBuffer, offset);\n      offset += buf.length;\n    }\n  },\n\n  mask: function(source, mask, output, offset, length) {\n    var maskNum = mask.readUInt32LE(0, true)\n      , i = 0\n      , num;\n\n    for (; i < length - 3; i += 4) {\n      num = maskNum ^ source.readUInt32LE(i, true);\n\n      if (num < 0) num = 4294967296 + num;\n      output.writeUInt32LE(num, offset + i, true);\n    }\n\n    switch (length % 4) {\n      case 3: output[offset + i + 2] = source[i + 2] ^ mask[2];\n      case 2: output[offset + i + 1] = source[i + 1] ^ mask[1];\n      case 1: output[offset + i] = source[i] ^ mask[0];\n    }\n  },\n\n  unmask: function(data, mask) {\n    var maskNum = mask.readUInt32LE(0, true)\n      , length = data.length\n      , i = 0\n      , num;\n\n    for (; i < length - 3; i += 4) {\n      num = maskNum ^ data.readUInt32LE(i, true);\n\n      if (num < 0) num = 4294967296 + num;\n      data.writeUInt32LE(num, i, true);\n    }\n\n    switch (length % 4) {\n      case 3: data[i + 2] = data[i + 2] ^ mask[2];\n      case 2: data[i + 1] = data[i + 1] ^ mask[1];\n      case 1: data[i] = data[i] ^ mask[0];\n    }\n  }\n};\n","'use strict';\n\ntry {\n  module.exports = require('bindings')('bufferutil');\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","\nmodule.exports =  require('./lib/');\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function(){\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if('function' == typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' == typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  insertAt.parentNode.insertBefore(script, insertAt);\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or the WebSocket-compatible interface\n * exposed by `ws` for Node environment.\n */\n\nvar WebSocket = BrowserWebSocket || (typeof window !== 'undefined' ? null : require('ws'));\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e){\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done(){\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function(){\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*!\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar fs = require('fs');\n\nfunction Options(defaults) {\n  var internalValues = {};\n  var values = this.value = {};\n  Object.keys(defaults).forEach(function(key) {\n    internalValues[key] = defaults[key];\n    Object.defineProperty(values, key, {\n      get: function() { return internalValues[key]; },\n      configurable: false,\n      enumerable: true\n    });\n  });\n  this.reset = function() {\n    Object.keys(defaults).forEach(function(key) {\n      internalValues[key] = defaults[key];\n    });\n    return this;\n  };\n  this.merge = function(options, required) {\n    options = options || {};\n    if (Object.prototype.toString.call(required) === '[object Array]') {\n      var missing = [];\n      for (var i = 0, l = required.length; i < l; ++i) {\n        var key = required[i];\n        if (!(key in options)) {\n          missing.push(key);\n        }\n      }\n      if (missing.length > 0) {\n        if (missing.length > 1) {\n          throw new Error('options ' +\n            missing.slice(0, missing.length - 1).join(', ') + ' and ' +\n            missing[missing.length - 1] + ' must be defined');\n        }\n        else throw new Error('option ' + missing[0] + ' must be defined');\n      }\n    }\n    Object.keys(options).forEach(function(key) {\n      if (key in internalValues) {\n        internalValues[key] = options[key];\n      }\n    });\n    return this;\n  };\n  this.copy = function(keys) {\n    var obj = {};\n    Object.keys(defaults).forEach(function(key) {\n      if (keys.indexOf(key) !== -1) {\n        obj[key] = values[key];\n      }\n    });\n    return obj;\n  };\n  this.read = function(filename, cb) {\n    if (typeof cb == 'function') {\n      var self = this;\n      fs.readFile(filename, function(error, data) {\n        if (error) return cb(error);\n        var conf = JSON.parse(data);\n        self.merge(conf);\n        cb();\n      });\n    }\n    else {\n      var conf = JSON.parse(fs.readFileSync(filename));\n      this.merge(conf);\n    }\n    return this;\n  };\n  this.isDefined = function(key) {\n    return typeof values[key] != 'undefined';\n  };\n  this.isDefinedAndNonNull = function(key) {\n    return typeof values[key] != 'undefined' && values[key] !== null;\n  };\n  Object.freeze(values);\n  Object.freeze(this);\n}\n\nmodule.exports = Options;\n","/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function(){\n  this.lastPing = new Date;\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function(){\n  this.emitAll('pong', new Date - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  debug('cleanup');\n\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' == this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'BINARY_EVENT',\n  'ACK',\n  'BINARY_ACK',\n  'ERROR'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * An auto incrementing id which we can use to create \"unique\" Ultron instances\n * so we can track the event emitters that are added through the Ultron\n * interface.\n *\n * @type {Number}\n * @private\n */\nvar id = 0;\n\n/**\n * Ultron is high-intelligence robot. It gathers intelligence so it can start improving\n * upon his rudimentary design. It will learn from your EventEmitting patterns\n * and exterminate them.\n *\n * @constructor\n * @param {EventEmitter} ee EventEmitter instance we need to wrap.\n * @api public\n */\nfunction Ultron(ee) {\n  if (!(this instanceof Ultron)) return new Ultron(ee);\n\n  this.id = id++;\n  this.ee = ee;\n}\n\n/**\n * Register a new EventListener for the given event.\n *\n * @param {String} event Name of the event.\n * @param {Functon} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.on = function on(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.on(event, fn, context);\n\n  return this;\n};\n/**\n * Add an EventListener that's only called once.\n *\n * @param {String} event Name of the event.\n * @param {Function} fn Callback function.\n * @param {Mixed} context The context of the function.\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.once = function once(event, fn, context) {\n  fn.__ultron = this.id;\n  this.ee.once(event, fn, context);\n\n  return this;\n};\n\n/**\n * Remove the listeners we assigned for the given event.\n *\n * @returns {Ultron}\n * @api public\n */\nUltron.prototype.remove = function remove() {\n  var args = arguments\n    , event;\n\n  //\n  // When no event names are provided we assume that we need to clear all the\n  // events that were assigned through us.\n  //\n  if (args.length === 1 && 'string' === typeof args[0]) {\n    args = args[0].split(/[, ]+/);\n  } else if (!args.length) {\n    args = [];\n\n    for (event in this.ee._events) {\n      if (has.call(this.ee._events, event)) args.push(event);\n    }\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    var listeners = this.ee.listeners(args[i]);\n\n    for (var j = 0; j < listeners.length; j++) {\n      event = listeners[j];\n\n      //\n      // Once listeners have a `listener` property that stores the real listener\n      // in the EventEmitter that ships with Node.js.\n      //\n      if (event.listener) {\n        if (event.listener.__ultron !== this.id) continue;\n        delete event.listener.__ultron;\n      } else {\n        if (event.__ultron !== this.id) continue;\n        delete event.__ultron;\n      }\n\n      this.ee.removeListener(args[i], event);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Destroy the Ultron instance, remove all listeners and release all references.\n *\n * @returns {Boolean}\n * @api public\n */\nUltron.prototype.destroy = function destroy() {\n  if (!this.ee) return false;\n\n  this.remove();\n  this.ee = null;\n\n  return true;\n};\n\n//\n// Expose the module.\n//\nmodule.exports = Ultron;\n","'use strict';\n\n/*!\n * UTF-8 validate: UTF-8 validation for WebSockets.\n * Copyright(c) 2015 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports.Validation = {\n  isValidUTF8: function(buffer) {\n    return true;\n  }\n};\n","'use strict';\n\ntry {\n  module.exports = require('bindings')('validation');\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar WS = module.exports = require('./lib/WebSocket');\n\nWS.Server = require('./lib/WebSocketServer');\nWS.Sender = require('./lib/Sender');\nWS.Receiver = require('./lib/Receiver');\n\n/**\n * Create a new WebSocket server.\n *\n * @param {Object} options Server options\n * @param {Function} fn Optional connection listener.\n * @returns {WS.Server}\n * @api public\n */\nWS.createServer = function createServer(options, fn) {\n  var server = new WS.Server(options);\n\n  if (typeof fn === 'function') {\n    server.on('connection', fn);\n  }\n\n  return server;\n};\n\n/**\n * Create a new WebSocket connection.\n *\n * @param {String} address The URL/address we need to connect to.\n * @param {Function} fn Open listener.\n * @returns {WS}\n * @api public\n */\nWS.connect = WS.createConnection = function connect(address, fn) {\n  var client = new WS(address);\n\n  if (typeof fn === 'function') {\n    client.on('open', fn);\n  }\n\n  return client;\n};\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util');\n\nfunction BufferPool(initialSize, growStrategy, shrinkStrategy) {\n  if (this instanceof BufferPool === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  if (typeof initialSize === 'function') {\n    shrinkStrategy = growStrategy;\n    growStrategy = initialSize;\n    initialSize = 0;\n  }\n  else if (typeof initialSize === 'undefined') {\n    initialSize = 0;\n  }\n  this._growStrategy = (growStrategy || function(db, size) {\n    return db.used + size;\n  }).bind(null, this);\n  this._shrinkStrategy = (shrinkStrategy || function(db) {\n    return initialSize;\n  }).bind(null, this);\n  this._buffer = initialSize ? new Buffer(initialSize) : null;\n  this._offset = 0;\n  this._used = 0;\n  this._changeFactor = 0;\n  this.__defineGetter__('size', function(){\n    return this._buffer == null ? 0 : this._buffer.length;\n  });\n  this.__defineGetter__('used', function(){\n    return this._used;\n  });\n}\n\nBufferPool.prototype.get = function(length) {\n  if (this._buffer == null || this._offset + length > this._buffer.length) {\n    var newBuf = new Buffer(this._growStrategy(length));\n    this._buffer = newBuf;\n    this._offset = 0;\n  }\n  this._used += length;\n  var buf = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return buf;\n}\n\nBufferPool.prototype.reset = function(forceNewBuffer) {\n  var len = this._shrinkStrategy();\n  if (len < this.size) this._changeFactor -= 1;\n  if (forceNewBuffer || this._changeFactor < -2) {\n    this._changeFactor = 0;\n    this._buffer = len ? new Buffer(len) : null;\n  }\n  this._offset = 0;\n  this._used = 0;\n}\n\nmodule.exports = BufferPool;\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports.BufferUtil = {\n  merge: function(mergedBuffer, buffers) {\n    var offset = 0;\n    for (var i = 0, l = buffers.length; i < l; ++i) {\n      var buf = buffers[i];\n      buf.copy(mergedBuffer, offset);\n      offset += buf.length;\n    }\n  },\n  mask: function(source, mask, output, offset, length) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ source.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      output.writeUInt32LE(num, offset + i, true);\n    }\n    switch (length % 4) {\n      case 3: output[offset + i + 2] = source[i + 2] ^ mask[2];\n      case 2: output[offset + i + 1] = source[i + 1] ^ mask[1];\n      case 1: output[offset + i] = source[i] ^ mask[0];\n      case 0:;\n    }\n  },\n  unmask: function(data, mask) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var length = data.length;\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ data.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      data.writeUInt32LE(num, i, true);\n    }\n    switch (length % 4) {\n      case 3: data[i + 2] = data[i + 2] ^ mask[2];\n      case 2: data[i + 1] = data[i + 1] ^ mask[1];\n      case 1: data[i] = data[i] ^ mask[0];\n      case 0:;\n    }\n  }\n}\n","'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\ntry {\n  module.exports = require('bufferutil');\n} catch (e) {\n  module.exports = require('./BufferUtil.fallback');\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nmodule.exports = {\n  isValidErrorCode: function(code) {\n    return (code >= 1000 && code <= 1011 && code != 1004 && code != 1005 && code != 1006) ||\n         (code >= 3000 && code <= 4999);\n  },\n  1000: 'normal',\n  1001: 'going away',\n  1002: 'protocol error',\n  1003: 'unsupported data',\n  1004: 'reserved',\n  1005: 'reserved for extensions',\n  1006: 'reserved for extensions',\n  1007: 'inconsistent or invalid data',\n  1008: 'policy violation',\n  1009: 'message too big',\n  1010: 'extension handshake missing',\n  1011: 'an unexpected condition prevented the request from being fulfilled',\n};","\nvar util = require('util');\n\n/**\n * Module exports.\n */\n\nexports.parse = parse;\nexports.format = format;\n\n/**\n * Parse extensions header value\n */\n\nfunction parse(value) {\n  value = value || '';\n\n  var extensions = {};\n\n  value.split(',').forEach(function(v) {\n    var params = v.split(';');\n    var token = params.shift().trim();\n    var paramsList = extensions[token] = extensions[token] || [];\n    var parsedParams = {};\n\n    params.forEach(function(param) {\n      var parts = param.trim().split('=');\n      var key = parts[0];\n      var value = parts[1];\n      if (typeof value === 'undefined') {\n        value = true;\n      } else {\n        // unquote value\n        if (value[0] === '\"') {\n          value = value.slice(1);\n        }\n        if (value[value.length - 1] === '\"') {\n          value = value.slice(0, value.length - 1);\n        }\n      }\n      (parsedParams[key] = parsedParams[key] || []).push(value);\n    });\n\n    paramsList.push(parsedParams);\n  });\n\n  return extensions;\n}\n\n/**\n * Format extensions header value\n */\n\nfunction format(value) {\n  return Object.keys(value).map(function(token) {\n    var paramsList = value[token];\n    if (!util.isArray(paramsList)) {\n      paramsList = [paramsList];\n    }\n    return paramsList.map(function(params) {\n      return [token].concat(Object.keys(params).map(function(k) {\n        var p = params[k];\n        if (!util.isArray(p)) p = [p];\n        return p.map(function(v) {\n          return v === true ? k : k + '=' + v;\n        }).join('; ');\n      })).join('; ');\n    }).join(', ');\n  }).join(', ');\n}\n","\nvar zlib = require('zlib');\n\nvar AVAILABLE_WINDOW_BITS = [8, 9, 10, 11, 12, 13, 14, 15];\nvar DEFAULT_WINDOW_BITS = 15;\nvar DEFAULT_MEM_LEVEL = 8;\n\nPerMessageDeflate.extensionName = 'permessage-deflate';\n\n/**\n * Per-message Compression Extensions implementation\n */\n\nfunction PerMessageDeflate(options, isServer) {\n  if (this instanceof PerMessageDeflate === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  this._options = options || {};\n  this._isServer = !!isServer;\n  this._inflate = null;\n  this._deflate = null;\n  this.params = null;\n}\n\n/**\n * Create extension parameters offer\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.offer = function() {\n  var params = {};\n  if (this._options.serverNoContextTakeover) {\n    params.server_no_context_takeover = true;\n  }\n  if (this._options.clientNoContextTakeover) {\n    params.client_no_context_takeover = true;\n  }\n  if (this._options.serverMaxWindowBits) {\n    params.server_max_window_bits = this._options.serverMaxWindowBits;\n  }\n  if (this._options.clientMaxWindowBits) {\n    params.client_max_window_bits = this._options.clientMaxWindowBits;\n  } else if (this._options.clientMaxWindowBits == null) {\n    params.client_max_window_bits = true;\n  }\n  return params;\n};\n\n/**\n * Accept extension offer\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.accept = function(paramsList) {\n  paramsList = this.normalizeParams(paramsList);\n\n  var params;\n  if (this._isServer) {\n    params = this.acceptAsServer(paramsList);\n  } else {\n    params = this.acceptAsClient(paramsList);\n  }\n\n  this.params = params;\n  return params;\n};\n\n/**\n * Releases all resources used by the extension\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.cleanup = function() {\n  if (this._inflate) {\n    if (this._inflate.writeInProgress) {\n      this._inflate.pendingClose = true;\n    } else {\n      if (this._inflate.close) this._inflate.close();\n      this._inflate = null;\n    }\n  }\n  if (this._deflate) {\n    if (this._deflate.writeInProgress) {\n      this._deflate.pendingClose = true;\n    } else {\n      if (this._deflate.close) this._deflate.close();\n      this._deflate = null;\n    }\n  }\n};\n\n/**\n * Accept extension offer from client\n *\n * @api private\n */\n\nPerMessageDeflate.prototype.acceptAsServer = function(paramsList) {\n  var accepted = {};\n  var result = paramsList.some(function(params) {\n    accepted = {};\n    if (this._options.serverNoContextTakeover === false && params.server_no_context_takeover) {\n      return;\n    }\n    if (this._options.serverMaxWindowBits === false && params.server_max_window_bits) {\n      return;\n    }\n    if (typeof this._options.serverMaxWindowBits === 'number' &&\n        typeof params.server_max_window_bits === 'number' &&\n        this._options.serverMaxWindowBits > params.server_max_window_bits) {\n      return;\n    }\n    if (typeof this._options.clientMaxWindowBits === 'number' && !params.client_max_window_bits) {\n      return;\n    }\n\n    if (this._options.serverNoContextTakeover || params.server_no_context_takeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover !== false && params.client_no_context_takeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof this._options.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = this._options.serverMaxWindowBits;\n    } else if (typeof params.server_max_window_bits === 'number') {\n      accepted.server_max_window_bits = params.server_max_window_bits;\n    }\n    if (typeof this._options.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits !== false && typeof params.client_max_window_bits === 'number') {\n      accepted.client_max_window_bits = params.client_max_window_bits;\n    }\n    return true;\n  }, this);\n\n  if (!result) {\n    throw new Error('Doesn\\'t support the offered configuration');\n  }\n\n  return accepted;\n};\n\n/**\n * Accept extension response from server\n *\n * @api privaye\n */\n\nPerMessageDeflate.prototype.acceptAsClient = function(paramsList) {\n  var params = paramsList[0];\n  if (this._options.clientNoContextTakeover != null) {\n    if (this._options.clientNoContextTakeover === false && params.client_no_context_takeover) {\n      throw new Error('Invalid value for \"client_no_context_takeover\"');\n    }\n  }\n  if (this._options.clientMaxWindowBits != null) {\n    if (this._options.clientMaxWindowBits === false && params.client_max_window_bits) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n    if (typeof this._options.clientMaxWindowBits === 'number' &&\n        (!params.client_max_window_bits || params.client_max_window_bits > this._options.clientMaxWindowBits)) {\n      throw new Error('Invalid value for \"client_max_window_bits\"');\n    }\n  }\n  return params;\n};\n\n/**\n * Normalize extensions parameters\n *\n * @api private\n */\n\nPerMessageDeflate.prototype.normalizeParams = function(paramsList) {\n  return paramsList.map(function(params) {\n    Object.keys(params).forEach(function(key) {\n      var value = params[key];\n      if (value.length > 1) {\n        throw new Error('Multiple extension parameters for ' + key);\n      }\n\n      value = value[0];\n\n      switch (key) {\n      case 'server_no_context_takeover':\n      case 'client_no_context_takeover':\n        if (value !== true) {\n          throw new Error('invalid extension parameter value for ' + key + ' (' + value + ')');\n        }\n        params[key] = true;\n        break;\n      case 'server_max_window_bits':\n      case 'client_max_window_bits':\n        if (typeof value === 'string') {\n          value = parseInt(value, 10);\n          if (!~AVAILABLE_WINDOW_BITS.indexOf(value)) {\n            throw new Error('invalid extension parameter value for ' + key + ' (' + value + ')');\n          }\n        }\n        if (!this._isServer && value === true) {\n          throw new Error('Missing extension parameter value for ' + key);\n        }\n        params[key] = value;\n        break;\n      default:\n        throw new Error('Not defined extension parameter (' + key + ')');\n      }\n    }, this);\n    return params;\n  }, this);\n};\n\n/**\n * Decompress message\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.decompress = function (data, fin, callback) {\n  var endpoint = this._isServer ? 'client' : 'server';\n\n  if (!this._inflate) {\n    var maxWindowBits = this.params[endpoint + '_max_window_bits'];\n    this._inflate = zlib.createInflateRaw({\n      windowBits: 'number' === typeof maxWindowBits ? maxWindowBits : DEFAULT_WINDOW_BITS\n    });\n  }\n  this._inflate.writeInProgress = true;\n\n  var self = this;\n  var buffers = [];\n\n  this._inflate.on('error', onError).on('data', onData);\n  this._inflate.write(data);\n  if (fin) {\n    this._inflate.write(new Buffer([0x00, 0x00, 0xff, 0xff]));\n  }\n  this._inflate.flush(function() {\n    cleanup();\n    callback(null, Buffer.concat(buffers));\n  });\n\n  function onError(err) {\n    cleanup();\n    callback(err);\n  }\n\n  function onData(data) {\n    buffers.push(data);\n  }\n\n  function cleanup() {\n    if (!self._inflate) return;\n    self._inflate.removeListener('error', onError);\n    self._inflate.removeListener('data', onData);\n    self._inflate.writeInProgress = false;\n    if ((fin && self.params[endpoint + '_no_context_takeover']) || self._inflate.pendingClose) {\n      if (self._inflate.close) self._inflate.close();\n      self._inflate = null;\n    }\n  }\n};\n\n/**\n * Compress message\n *\n * @api public\n */\n\nPerMessageDeflate.prototype.compress = function (data, fin, callback) {\n  var endpoint = this._isServer ? 'server' : 'client';\n\n  if (!this._deflate) {\n    var maxWindowBits = this.params[endpoint + '_max_window_bits'];\n    this._deflate = zlib.createDeflateRaw({\n      flush: zlib.Z_SYNC_FLUSH,\n      windowBits: 'number' === typeof maxWindowBits ? maxWindowBits : DEFAULT_WINDOW_BITS,\n      memLevel: this._options.memLevel || DEFAULT_MEM_LEVEL\n    });\n  }\n  this._deflate.writeInProgress = true;\n\n  var self = this;\n  var buffers = [];\n\n  this._deflate.on('error', onError).on('data', onData);\n  this._deflate.write(data);\n  this._deflate.flush(function() {\n    cleanup();\n    var data = Buffer.concat(buffers);\n    if (fin) {\n      data = data.slice(0, data.length - 4);\n    }\n    callback(null, data);\n  });\n\n  function onError(err) {\n    cleanup();\n    callback(err);\n  }\n\n  function onData(data) {\n    buffers.push(data);\n  }\n\n  function cleanup() {\n    if (!self._deflate) return;\n    self._deflate.removeListener('error', onError);\n    self._deflate.removeListener('data', onData);\n    self._deflate.writeInProgress = false;\n    if ((fin && self.params[endpoint + '_no_context_takeover']) || self._deflate.pendingClose) {\n      if (self._deflate.close) self._deflate.close();\n      self._deflate = null;\n    }\n  }\n};\n\nmodule.exports = PerMessageDeflate;\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util');\n\n/**\n * State constants\n */\n\nvar EMPTY = 0\n  , BODY = 1;\nvar BINARYLENGTH = 2\n  , BINARYBODY = 3;\n\n/**\n * Hixie Receiver implementation\n */\n\nfunction Receiver () {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  this.state = EMPTY;\n  this.buffers = [];\n  this.messageEnd = -1;\n  this.spanLength = 0;\n  this.dead = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  var self = this;\n  function doAdd() {\n    if (self.state === EMPTY) {\n      if (data.length == 2 && data[0] == 0xFF && data[1] == 0x00) {\n        self.reset();\n        self.onclose();\n        return;\n      }\n      if (data[0] === 0x80) {\n        self.messageEnd = 0;\n        self.state = BINARYLENGTH;\n        data = data.slice(1);\n      } else {\n\n      if (data[0] !== 0x00) {\n        self.error('payload must start with 0x00 byte', true);\n        return;\n      }\n      data = data.slice(1);\n      self.state = BODY;\n\n      }\n    }\n    if (self.state === BINARYLENGTH) {\n      var i = 0;\n      while ((i < data.length) && (data[i] & 0x80)) {\n        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);\n        ++i;\n      }\n      if (i < data.length) {\n        self.messageEnd = 128 * self.messageEnd + (data[i] & 0x7f);\n        self.state = BINARYBODY;\n        ++i;\n      }\n      if (i > 0)\n        data = data.slice(i);\n    }\n    if (self.state === BINARYBODY) {\n      var dataleft = self.messageEnd - self.spanLength;\n      if (data.length >= dataleft) {\n        // consume the whole buffer to finish the frame\n        self.buffers.push(data);\n        self.spanLength += dataleft;\n        self.messageEnd = dataleft;\n        return self.parse();\n      }\n      // frame's not done even if we consume it all\n      self.buffers.push(data);\n      self.spanLength += data.length;\n      return;\n    }\n    self.buffers.push(data);\n    if ((self.messageEnd = bufferIndex(data, 0xFF)) != -1) {\n      self.spanLength += self.messageEnd;\n      return self.parse();\n    }\n    else self.spanLength += data.length;\n  }\n  while(data) data = doAdd();\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.state = EMPTY;\n  this.buffers = [];\n};\n\n/**\n * Process buffered data.\n *\n * @api public\n */\n\nReceiver.prototype.parse = function() {\n  var output = new Buffer(this.spanLength);\n  var outputIndex = 0;\n  for (var bi = 0, bl = this.buffers.length; bi < bl - 1; ++bi) {\n    var buffer = this.buffers[bi];\n    buffer.copy(output, outputIndex);\n    outputIndex += buffer.length;\n  }\n  var lastBuffer = this.buffers[this.buffers.length - 1];\n  if (this.messageEnd > 0) lastBuffer.copy(output, outputIndex, 0, this.messageEnd);\n  if (this.state !== BODY) --this.messageEnd;\n  var tail = null;\n  if (this.messageEnd < lastBuffer.length - 1) {\n    tail = lastBuffer.slice(this.messageEnd + 1);\n  }\n  this.reset();\n  this.ontext(output.toString('utf8'));\n  return tail;\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, terminate) {\n  this.reset();\n  this.onerror(reason, terminate);\n  return this;\n};\n\n/**\n * Reset parser state\n *\n * @api private\n */\n\nReceiver.prototype.reset = function (reason) {\n  if (this.dead) return;\n  this.state = EMPTY;\n  this.buffers = [];\n  this.messageEnd = -1;\n  this.spanLength = 0;\n};\n\n/**\n * Internal api\n */\n\nfunction bufferIndex(buffer, byte) {\n  for (var i = 0, l = buffer.length; i < l; ++i) {\n    if (buffer[i] === byte) return i;\n  }\n  return -1;\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , Validation = require('./Validation').Validation\n  , ErrorCodes = require('./ErrorCodes')\n  , BufferPool = require('./BufferPool')\n  , bufferUtil = require('./BufferUtil').BufferUtil\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Receiver implementation\n */\n\nfunction Receiver (extensions) {\n  if (this instanceof Receiver === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  // memory pool for fragmented messages\n  var fragmentedPoolPrevUsed = -1;\n  this.fragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return fragmentedPoolPrevUsed = fragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((fragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  // memory pool for unfragmented messages\n  var unfragmentedPoolPrevUsed = -1;\n  this.unfragmentedBufferPool = new BufferPool(1024, function(db, length) {\n    return db.used + length;\n  }, function(db) {\n    return unfragmentedPoolPrevUsed = unfragmentedPoolPrevUsed >= 0 ?\n      Math.ceil((unfragmentedPoolPrevUsed + db.used) / 2) :\n      db.used;\n  });\n\n  this.extensions = extensions || {};\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.overflow = [];\n  this.headerBuffer = new Buffer(10);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.currentMessage = [];\n  this.messageHandlers = [];\n  this.expectHeader(2, this.processPacket);\n  this.dead = false;\n  this.processing = false;\n\n  this.onerror = function() {};\n  this.ontext = function() {};\n  this.onbinary = function() {};\n  this.onclose = function() {};\n  this.onping = function() {};\n  this.onpong = function() {};\n}\n\nmodule.exports = Receiver;\n\n/**\n * Add new data to the parser.\n *\n * @api public\n */\n\nReceiver.prototype.add = function(data) {\n  var dataLength = data.length;\n  if (dataLength == 0) return;\n  if (this.expectBuffer == null) {\n    this.overflow.push(data);\n    return;\n  }\n  var toRead = Math.min(dataLength, this.expectBuffer.length - this.expectOffset);\n  fastCopy(toRead, data, this.expectBuffer, this.expectOffset);\n  this.expectOffset += toRead;\n  if (toRead < dataLength) {\n    this.overflow.push(data.slice(toRead));\n  }\n  while (this.expectBuffer && this.expectOffset == this.expectBuffer.length) {\n    var bufferForHandler = this.expectBuffer;\n    this.expectBuffer = null;\n    this.expectOffset = 0;\n    this.expectHandler.call(this, bufferForHandler);\n  }\n};\n\n/**\n * Releases all resources used by the receiver.\n *\n * @api public\n */\n\nReceiver.prototype.cleanup = function() {\n  this.dead = true;\n  this.overflow = null;\n  this.headerBuffer = null;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.unfragmentedBufferPool = null;\n  this.fragmentedBufferPool = null;\n  this.state = null;\n  this.currentMessage = null;\n  this.onerror = null;\n  this.ontext = null;\n  this.onbinary = null;\n  this.onclose = null;\n  this.onping = null;\n  this.onpong = null;\n};\n\n/**\n * Waits for a certain amount of header bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectHeader = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.headerBuffer.slice(this.expectOffset, this.expectOffset + length);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Waits for a certain amount of data bytes to be available, then fires a callback.\n *\n * @api private\n */\n\nReceiver.prototype.expectData = function(length, handler) {\n  if (length == 0) {\n    handler(null);\n    return;\n  }\n  this.expectBuffer = this.allocateFromPool(length, this.state.fragmentedOperation);\n  this.expectHandler = handler;\n  var toRead = length;\n  while (toRead > 0 && this.overflow.length > 0) {\n    var fromOverflow = this.overflow.pop();\n    if (toRead < fromOverflow.length) this.overflow.push(fromOverflow.slice(toRead));\n    var read = Math.min(fromOverflow.length, toRead);\n    fastCopy(read, fromOverflow, this.expectBuffer, this.expectOffset);\n    this.expectOffset += read;\n    toRead -= read;\n  }\n};\n\n/**\n * Allocates memory from the buffer pool.\n *\n * @api private\n */\n\nReceiver.prototype.allocateFromPool = function(length, isFragmented) {\n  return (isFragmented ? this.fragmentedBufferPool : this.unfragmentedBufferPool).get(length);\n};\n\n/**\n * Start processing a new packet.\n *\n * @api private\n */\n\nReceiver.prototype.processPacket = function (data) {\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    if ((data[0] & 0x30) != 0) {\n      this.error('reserved fields (2, 3) must be empty', 1002);\n      return;\n    }\n  } else {\n    if ((data[0] & 0x70) != 0) {\n      this.error('reserved fields must be empty', 1002);\n      return;\n    }\n  }\n  this.state.lastFragment = (data[0] & 0x80) == 0x80;\n  this.state.masked = (data[1] & 0x80) == 0x80;\n  var compressed = (data[0] & 0x40) == 0x40;\n  var opcode = data[0] & 0xf;\n  if (opcode === 0) {\n    if (compressed) {\n      this.error('continuation frame cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    // continuation frame\n    this.state.fragmentedOperation = true;\n    this.state.opcode = this.state.activeFragmentedOperation;\n    if (!(this.state.opcode == 1 || this.state.opcode == 2)) {\n      this.error('continuation frame cannot follow current opcode', 1002);\n      return;\n    }\n  }\n  else {\n    if (opcode < 3 && this.state.activeFragmentedOperation != null) {\n      this.error('data frames after the initial data frame must have opcode 0', 1002);\n      return;\n    }\n    if (opcode >= 8 && compressed) {\n      this.error('control frames cannot have the Per-message Compressed bits', 1002);\n      return;\n    }\n    this.state.compressed = compressed;\n    this.state.opcode = opcode;\n    if (this.state.lastFragment === false) {\n      this.state.fragmentedOperation = true;\n      this.state.activeFragmentedOperation = opcode;\n    }\n    else this.state.fragmentedOperation = false;\n  }\n  var handler = opcodes[this.state.opcode];\n  if (typeof handler == 'undefined') this.error('no handler for opcode ' + this.state.opcode, 1002);\n  else {\n    handler.start.call(this, data);\n  }\n};\n\n/**\n * Endprocessing a packet.\n *\n * @api private\n */\n\nReceiver.prototype.endPacket = function() {\n  if (!this.state.fragmentedOperation) this.unfragmentedBufferPool.reset(true);\n  else if (this.state.lastFragment) this.fragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  if (this.state.lastFragment && this.state.opcode === this.state.activeFragmentedOperation) {\n    // end current fragmented operation\n    this.state.activeFragmentedOperation = null;\n  }\n  this.state.lastFragment = false;\n  this.state.opcode = this.state.activeFragmentedOperation != null ? this.state.activeFragmentedOperation : 0;\n  this.state.masked = false;\n  this.expectHeader(2, this.processPacket);\n};\n\n/**\n * Reset the parser state.\n *\n * @api private\n */\n\nReceiver.prototype.reset = function() {\n  if (this.dead) return;\n  this.state = {\n    activeFragmentedOperation: null,\n    lastFragment: false,\n    masked: false,\n    opcode: 0,\n    fragmentedOperation: false\n  };\n  this.fragmentedBufferPool.reset(true);\n  this.unfragmentedBufferPool.reset(true);\n  this.expectOffset = 0;\n  this.expectBuffer = null;\n  this.expectHandler = null;\n  this.overflow = [];\n  this.currentMessage = [];\n  this.messageHandlers = [];\n};\n\n/**\n * Unmask received data.\n *\n * @api private\n */\n\nReceiver.prototype.unmask = function (mask, buf, binary) {\n  if (mask != null && buf != null) bufferUtil.unmask(buf, mask);\n  if (binary) return buf;\n  return buf != null ? buf.toString('utf8') : '';\n};\n\n/**\n * Concatenates a list of buffers.\n *\n * @api private\n */\n\nReceiver.prototype.concatBuffers = function(buffers) {\n  var length = 0;\n  for (var i = 0, l = buffers.length; i < l; ++i) length += buffers[i].length;\n  var mergedBuffer = new Buffer(length);\n  bufferUtil.merge(mergedBuffer, buffers);\n  return mergedBuffer;\n};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nReceiver.prototype.error = function (reason, protocolErrorCode) {\n  this.reset();\n  this.onerror(reason, protocolErrorCode);\n  return this;\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nReceiver.prototype.flush = function() {\n  if (this.processing || this.dead) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nReceiver.prototype.applyExtensions = function(messageBuffer, fin, compressed, callback) {\n  var self = this;\n  if (compressed) {\n    this.extensions[PerMessageDeflate.extensionName].decompress(messageBuffer, fin, function(err, buffer) {\n      if (self.dead) return;\n      if (err) {\n        callback(new Error('invalid compressed data'));\n        return;\n      }\n      callback(null, buffer);\n    });\n  } else {\n    callback(null, messageBuffer);\n  }\n};\n\n/**\n * Buffer utilities\n */\n\nfunction readUInt16BE(start) {\n  return (this[start]<<8) +\n         this[start+1];\n}\n\nfunction readUInt32BE(start) {\n  return (this[start]<<24) +\n         (this[start+1]<<16) +\n         (this[start+2]<<8) +\n         this[start+3];\n}\n\nfunction fastCopy(length, srcBuffer, dstBuffer, dstOffset) {\n  switch (length) {\n    default: srcBuffer.copy(dstBuffer, dstOffset, 0, length); break;\n    case 16: dstBuffer[dstOffset+15] = srcBuffer[15];\n    case 15: dstBuffer[dstOffset+14] = srcBuffer[14];\n    case 14: dstBuffer[dstOffset+13] = srcBuffer[13];\n    case 13: dstBuffer[dstOffset+12] = srcBuffer[12];\n    case 12: dstBuffer[dstOffset+11] = srcBuffer[11];\n    case 11: dstBuffer[dstOffset+10] = srcBuffer[10];\n    case 10: dstBuffer[dstOffset+9] = srcBuffer[9];\n    case 9: dstBuffer[dstOffset+8] = srcBuffer[8];\n    case 8: dstBuffer[dstOffset+7] = srcBuffer[7];\n    case 7: dstBuffer[dstOffset+6] = srcBuffer[6];\n    case 6: dstBuffer[dstOffset+5] = srcBuffer[5];\n    case 5: dstBuffer[dstOffset+4] = srcBuffer[4];\n    case 4: dstBuffer[dstOffset+3] = srcBuffer[3];\n    case 3: dstBuffer[dstOffset+2] = srcBuffer[2];\n    case 2: dstBuffer[dstOffset+1] = srcBuffer[1];\n    case 1: dstBuffer[dstOffset] = srcBuffer[0];\n  }\n}\n\nfunction clone(obj) {\n  var cloned = {};\n  for (var k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      cloned[k] = obj[k];\n    }\n  }\n  return cloned;\n}\n\n/**\n * Opcode handlers\n */\n\nvar opcodes = {\n  // text\n  '1': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['1'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          opcodes['1'].getData.call(self, readUInt16BE.call(data, 0));\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          opcodes['1'].getData.call(self, readUInt32BE.call(data, 4));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['1'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['1'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) return self.error(err.message, 1007);\n          if (buffer != null) self.currentMessage.push(buffer);\n\n          if (state.lastFragment) {\n            var messageBuffer = self.concatBuffers(self.currentMessage);\n            self.currentMessage = [];\n            if (!Validation.isValidUTF8(messageBuffer)) {\n              self.error('invalid utf8 sequence', 1007);\n              return;\n            }\n            self.ontext(messageBuffer.toString('utf8'), {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // binary\n  '2': {\n    start: function(data) {\n      var self = this;\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['2'].getData.call(self, firstLength);\n      }\n      else if (firstLength == 126) {\n        self.expectHeader(2, function(data) {\n          opcodes['2'].getData.call(self, readUInt16BE.call(data, 0));\n        });\n      }\n      else if (firstLength == 127) {\n        self.expectHeader(8, function(data) {\n          if (readUInt32BE.call(data, 0) != 0) {\n            self.error('packets with length spanning more than 32 bit is currently not supported', 1008);\n            return;\n          }\n          opcodes['2'].getData.call(self, readUInt32BE.call(data, 4, true));\n        });\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['2'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['2'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      var packet = this.unmask(mask, data, true) || new Buffer(0);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.applyExtensions(packet, state.lastFragment, state.compressed, function(err, buffer) {\n          if (err) return self.error(err.message, 1007);\n          if (buffer != null) self.currentMessage.push(buffer);\n          if (state.lastFragment) {\n            var messageBuffer = self.concatBuffers(self.currentMessage);\n            self.currentMessage = [];\n            self.onbinary(messageBuffer, {masked: state.masked, buffer: messageBuffer});\n          }\n          callback();\n        });\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // close\n  '8': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented close is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['8'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['8'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['8'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n\n      var state = clone(this.state);\n      this.messageHandlers.push(function() {\n        if (data && data.length == 1) {\n          self.error('close packets with data must be at least two bytes long', 1002);\n          return;\n        }\n        var code = data && data.length > 1 ? readUInt16BE.call(data, 0) : 1000;\n        if (!ErrorCodes.isValidErrorCode(code)) {\n          self.error('invalid error code', 1002);\n          return;\n        }\n        var message = '';\n        if (data && data.length > 2) {\n          var messageBuffer = data.slice(2);\n          if (!Validation.isValidUTF8(messageBuffer)) {\n            self.error('invalid utf8 sequence', 1007);\n            return;\n          }\n          message = messageBuffer.toString('utf8');\n        }\n        self.onclose(code, message, {masked: state.masked});\n        self.reset();\n      });\n      this.flush();\n    },\n  },\n  // ping\n  '9': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented ping is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['9'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (self.state.masked) {\n        self.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['9'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        self.expectData(length, function(data) {\n          opcodes['9'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = this.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onping(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  },\n  // pong\n  '10': {\n    start: function(data) {\n      var self = this;\n      if (self.state.lastFragment == false) {\n        self.error('fragmented pong is not supported', 1002);\n        return;\n      }\n\n      // decode length\n      var firstLength = data[1] & 0x7f;\n      if (firstLength < 126) {\n        opcodes['10'].getData.call(self, firstLength);\n      }\n      else {\n        self.error('control frames cannot have more than 125 bytes of data', 1002);\n      }\n    },\n    getData: function(length) {\n      var self = this;\n      if (this.state.masked) {\n        this.expectHeader(4, function(data) {\n          var mask = data;\n          self.expectData(length, function(data) {\n            opcodes['10'].finish.call(self, mask, data);\n          });\n        });\n      }\n      else {\n        this.expectData(length, function(data) {\n          opcodes['10'].finish.call(self, null, data);\n        });\n      }\n    },\n    finish: function(mask, data) {\n      var self = this;\n      data = self.unmask(mask, data, true);\n      var state = clone(this.state);\n      this.messageHandlers.push(function(callback) {\n        self.onpong(data, {masked: state.masked, binary: true});\n        callback();\n      });\n      this.flush();\n      this.endPacket();\n    }\n  }\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events')\n  , util = require('util')\n  , EventEmitter = events.EventEmitter;\n\n/**\n * Hixie Sender implementation\n */\n\nfunction Sender(socket) {\n  if (this instanceof Sender === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  events.EventEmitter.call(this);\n\n  this.socket = socket;\n  this.continuationFrame = false;\n  this.isClosed = false;\n}\n\nmodule.exports = Sender;\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Frames and writes data.\n *\n * @api public\n */\n\nSender.prototype.send = function(data, options, cb) {\n  if (this.isClosed) return;\n\n  var isString = typeof data == 'string'\n    , length = isString ? Buffer.byteLength(data) : data.length\n    , lengthbytes = (length > 127) ? 2 : 1 // assume less than 2**14 bytes\n    , writeStartMarker = this.continuationFrame == false\n    , writeEndMarker = !options || !(typeof options.fin != 'undefined' && !options.fin)\n    , buffer = new Buffer((writeStartMarker ? ((options && options.binary) ? (1 + lengthbytes) : 1) : 0) + length + ((writeEndMarker && !(options && options.binary)) ? 1 : 0))\n    , offset = writeStartMarker ? 1 : 0;\n\n  if (writeStartMarker) {\n    if (options && options.binary) {\n      buffer.write('\\x80', 'binary');\n      // assume length less than 2**14 bytes\n      if (lengthbytes > 1)\n        buffer.write(String.fromCharCode(128+length/128), offset++, 'binary');\n      buffer.write(String.fromCharCode(length&0x7f), offset++, 'binary');\n    } else\n      buffer.write('\\x00', 'binary');\n  }\n\n  if (isString) buffer.write(data, offset, 'utf8');\n  else data.copy(buffer, offset, 0);\n\n  if (writeEndMarker) {\n    if (options && options.binary) {\n      // sending binary, not writing end marker\n    } else\n      buffer.write('\\xff', offset + length, 'binary');\n    this.continuationFrame = false;\n  }\n  else this.continuationFrame = true;\n\n  try {\n    this.socket.write(buffer, 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function(code, data, mask, cb) {\n  if (this.isClosed) return;\n  this.isClosed = true;\n  try {\n    if (this.continuationFrame) this.socket.write(new Buffer([0xff], 'binary'));\n    this.socket.write(new Buffer([0xff, 0x00]), 'binary', cb);\n  } catch (e) {\n    this.error(e.toString());\n  }\n};\n\n/**\n * Sends a ping message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.ping = function(data, options) {};\n\n/**\n * Sends a pong message to the remote party. Not available for hixie.\n *\n * @api public\n */\n\nSender.prototype.pong = function(data, options) {};\n\n/**\n * Handles an error\n *\n * @api private\n */\n\nSender.prototype.error = function (reason) {\n  this.emit('error', reason);\n  return this;\n};\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar events = require('events')\n  , util = require('util')\n  , EventEmitter = events.EventEmitter\n  , ErrorCodes = require('./ErrorCodes')\n  , bufferUtil = require('./BufferUtil').BufferUtil\n  , PerMessageDeflate = require('./PerMessageDeflate');\n\n/**\n * HyBi Sender implementation\n */\n\nfunction Sender(socket, extensions) {\n  if (this instanceof Sender === false) {\n    throw new TypeError(\"Classes can't be function-called\");\n  }\n\n  events.EventEmitter.call(this);\n\n  this._socket = socket;\n  this.extensions = extensions || {};\n  this.firstFragment = true;\n  this.compress = false;\n  this.messageHandlers = [];\n  this.processing = false;\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(Sender, events.EventEmitter);\n\n/**\n * Sends a close instruction to the remote party.\n *\n * @api public\n */\n\nSender.prototype.close = function(code, data, mask, cb) {\n  if (typeof code !== 'undefined') {\n    if (typeof code !== 'number' ||\n      !ErrorCodes.isValidErrorCode(code)) throw new Error('first argument must be a valid error code number');\n  }\n  code = code || 1000;\n  var dataBuffer = new Buffer(2 + (data ? Buffer.byteLength(data) : 0));\n  writeUInt16BE.call(dataBuffer, code, 0);\n  if (dataBuffer.length > 2) dataBuffer.write(data, 2);\n\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.frameAndSend(0x8, dataBuffer, true, mask);\n    callback();\n    if (typeof cb == 'function') cb();\n  });\n  this.flush();\n};\n\n/**\n * Sends a ping message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.ping = function(data, options) {\n  var mask = options && options.mask;\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.frameAndSend(0x9, data || '', true, mask);\n    callback();\n  });\n  this.flush();\n};\n\n/**\n * Sends a pong message to the remote party.\n *\n * @api public\n */\n\nSender.prototype.pong = function(data, options) {\n  var mask = options && options.mask;\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.frameAndSend(0xa, data || '', true, mask);\n    callback();\n  });\n  this.flush();\n};\n\n/**\n * Sends text or binary data to the remote party.\n *\n * @api public\n */\n\nSender.prototype.send = function(data, options, cb) {\n  var finalFragment = options && options.fin === false ? false : true;\n  var mask = options && options.mask;\n  var compress = options && options.compress;\n  var opcode = options && options.binary ? 2 : 1;\n  if (this.firstFragment === false) {\n    opcode = 0;\n    compress = false;\n  } else {\n    this.firstFragment = false;\n    this.compress = compress;\n  }\n  if (finalFragment) this.firstFragment = true\n\n  var compressFragment = this.compress;\n\n  var self = this;\n  this.messageHandlers.push(function(callback) {\n    self.applyExtensions(data, finalFragment, compressFragment, function(err, data) {\n      if (err) {\n        if (typeof cb == 'function') cb(err);\n        else self.emit('error', err);\n        return;\n      }\n      self.frameAndSend(opcode, data, finalFragment, mask, compress, cb);\n      callback();\n    });\n  });\n  this.flush();\n};\n\n/**\n * Frames and sends a piece of data according to the HyBi WebSocket protocol.\n *\n * @api private\n */\n\nSender.prototype.frameAndSend = function(opcode, data, finalFragment, maskData, compressed, cb) {\n  var canModifyData = false;\n\n  if (!data) {\n    try {\n      this._socket.write(new Buffer([opcode | (finalFragment ? 0x80 : 0), 0 | (maskData ? 0x80 : 0)].concat(maskData ? [0, 0, 0, 0] : [])), 'binary', cb);\n    }\n    catch (e) {\n      if (typeof cb == 'function') cb(e);\n      else this.emit('error', e);\n    }\n    return;\n  }\n\n  if (!Buffer.isBuffer(data)) {\n    canModifyData = true;\n    if (data && (typeof data.byteLength !== 'undefined' || typeof data.buffer !== 'undefined')) {\n      data = getArrayBuffer(data);\n    } else {\n      //\n      // If people want to send a number, this would allocate the number in\n      // bytes as memory size instead of storing the number as buffer value. So\n      // we need to transform it to string in order to prevent possible\n      // vulnerabilities / memory attacks.\n      //\n      if (typeof data === 'number') data = data.toString();\n\n      data = new Buffer(data);\n    }\n  }\n\n  var dataLength = data.length\n    , dataOffset = maskData ? 6 : 2\n    , secondByte = dataLength;\n\n  if (dataLength >= 65536) {\n    dataOffset += 8;\n    secondByte = 127;\n  }\n  else if (dataLength > 125) {\n    dataOffset += 2;\n    secondByte = 126;\n  }\n\n  var mergeBuffers = dataLength < 32768 || (maskData && !canModifyData);\n  var totalLength = mergeBuffers ? dataLength + dataOffset : dataOffset;\n  var outputBuffer = new Buffer(totalLength);\n  outputBuffer[0] = finalFragment ? opcode | 0x80 : opcode;\n  if (compressed) outputBuffer[0] |= 0x40;\n\n  switch (secondByte) {\n    case 126:\n      writeUInt16BE.call(outputBuffer, dataLength, 2);\n      break;\n    case 127:\n      writeUInt32BE.call(outputBuffer, 0, 2);\n      writeUInt32BE.call(outputBuffer, dataLength, 6);\n  }\n\n  if (maskData) {\n    outputBuffer[1] = secondByte | 0x80;\n    var mask = this._randomMask || (this._randomMask = getRandomMask());\n    outputBuffer[dataOffset - 4] = mask[0];\n    outputBuffer[dataOffset - 3] = mask[1];\n    outputBuffer[dataOffset - 2] = mask[2];\n    outputBuffer[dataOffset - 1] = mask[3];\n    if (mergeBuffers) {\n      bufferUtil.mask(data, mask, outputBuffer, dataOffset, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n    else {\n      bufferUtil.mask(data, mask, data, 0, dataLength);\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n  }\n  else {\n    outputBuffer[1] = secondByte;\n    if (mergeBuffers) {\n      data.copy(outputBuffer, dataOffset);\n      try {\n        this._socket.write(outputBuffer, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n    else {\n      try {\n        this._socket.write(outputBuffer, 'binary');\n        this._socket.write(data, 'binary', cb);\n      }\n      catch (e) {\n        if (typeof cb == 'function') cb(e);\n        else this.emit('error', e);\n      }\n    }\n  }\n};\n\n/**\n * Execute message handler buffers\n *\n * @api private\n */\n\nSender.prototype.flush = function() {\n  if (this.processing) return;\n\n  var handler = this.messageHandlers.shift();\n  if (!handler) return;\n\n  this.processing = true;\n\n  var self = this;\n\n  handler(function() {\n    self.processing = false;\n    self.flush();\n  });\n};\n\n/**\n * Apply extensions to message\n *\n * @api private\n */\n\nSender.prototype.applyExtensions = function(data, fin, compress, callback) {\n  if (compress && data) {\n    if ((data.buffer || data) instanceof ArrayBuffer) {\n      data = getArrayBuffer(data);\n    }\n    this.extensions[PerMessageDeflate.extensionName].compress(data, fin, callback);\n  } else {\n    callback(null, data);\n  }\n};\n\nmodule.exports = Sender;\n\nfunction writeUInt16BE(value, offset) {\n  this[offset] = (value & 0xff00)>>8;\n  this[offset+1] = value & 0xff;\n}\n\nfunction writeUInt32BE(value, offset) {\n  this[offset] = (value & 0xff000000)>>24;\n  this[offset+1] = (value & 0xff0000)>>16;\n  this[offset+2] = (value & 0xff00)>>8;\n  this[offset+3] = value & 0xff;\n}\n\nfunction getArrayBuffer(data) {\n  // data is either an ArrayBuffer or ArrayBufferView.\n  var array = new Uint8Array(data.buffer || data)\n    , l = data.byteLength || data.length\n    , o = data.byteOffset || 0\n    , buffer = new Buffer(l);\n  for (var i = 0; i < l; ++i) {\n    buffer[i] = array[o+i];\n  }\n  return buffer;\n}\n\nfunction getRandomMask() {\n  return new Buffer([\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255),\n    ~~(Math.random() * 255)\n  ]);\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n \nmodule.exports.Validation = {\n  isValidUTF8: function(buffer) {\n    return true;\n  }\n};\n\n","'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\ntry {\n  module.exports = require('utf-8-validate');\n} catch (e) {\n  module.exports = require('./Validation.fallback');\n}\n","'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar url = require('url')\n  , util = require('util')\n  , http = require('http')\n  , https = require('https')\n  , crypto = require('crypto')\n  , stream = require('stream')\n  , Ultron = require('ultron')\n  , Options = require('options')\n  , Sender = require('./Sender')\n  , Receiver = require('./Receiver')\n  , SenderHixie = require('./Sender.hixie')\n  , ReceiverHixie = require('./Receiver.hixie')\n  , Extensions = require('./Extensions')\n  , PerMessageDeflate = require('./PerMessageDeflate')\n  , EventEmitter = require('events').EventEmitter;\n\n/**\n * Constants\n */\n\n// Default protocol version\n\nvar protocolVersion = 13;\n\n// Close timeout\n\nvar closeTimeout = 30 * 1000; // Allow 30 seconds to terminate the connection cleanly\n\n/**\n * WebSocket implementation\n *\n * @constructor\n * @param {String} address Connection address.\n * @param {String|Array} protocols WebSocket protocols.\n * @param {Object} options Additional connection options.\n * @api public\n */\nfunction WebSocket(address, protocols, options) {\n  if (this instanceof WebSocket === false) {\n    return new WebSocket(address, protocols, options);\n  }\n\n  EventEmitter.call(this);\n\n  if (protocols && !Array.isArray(protocols) && 'object' === typeof protocols) {\n    // accept the \"options\" Object as the 2nd argument\n    options = protocols;\n    protocols = null;\n  }\n\n  if ('string' === typeof protocols) {\n    protocols = [ protocols ];\n  }\n\n  if (!Array.isArray(protocols)) {\n    protocols = [];\n  }\n\n  this._socket = null;\n  this._ultron = null;\n  this._closeReceived = false;\n  this.bytesReceived = 0;\n  this.readyState = null;\n  this.supports = {};\n  this.extensions = {};\n\n  if (Array.isArray(address)) {\n    initAsServerClient.apply(this, address.concat(options));\n  } else {\n    initAsClient.apply(this, [address, protocols, options]);\n  }\n}\n\n/**\n * Inherits from EventEmitter.\n */\nutil.inherits(WebSocket, EventEmitter);\n\n/**\n * Ready States\n */\n[\"CONNECTING\", \"OPEN\", \"CLOSING\", \"CLOSED\"].forEach(function each(state, index) {\n    WebSocket.prototype[state] = WebSocket[state] = index;\n});\n\n/**\n * Gracefully closes the connection, after sending a description message to the server\n *\n * @param {Object} data to be sent to the server\n * @api public\n */\nWebSocket.prototype.close = function close(code, data) {\n  if (this.readyState === WebSocket.CLOSED) return;\n\n  if (this.readyState === WebSocket.CONNECTING) {\n    this.readyState = WebSocket.CLOSED;\n    return;\n  }\n\n  if (this.readyState === WebSocket.CLOSING) {\n    if (this._closeReceived && this._isServer) {\n      this.terminate();\n    }\n    return;\n  }\n\n  var self = this;\n  try {\n    this.readyState = WebSocket.CLOSING;\n    this._closeCode = code;\n    this._closeMessage = data;\n    var mask = !this._isServer;\n    this._sender.close(code, data, mask, function(err) {\n      if (err) self.emit('error', err);\n\n      if (self._closeReceived && self._isServer) {\n        self.terminate();\n      } else {\n        // ensure that the connection is cleaned up even when no response of closing handshake.\n        clearTimeout(self._closeTimer);\n        self._closeTimer = setTimeout(cleanupWebsocketResources.bind(self, true), closeTimeout);\n      }\n    });\n  } catch (e) {\n    this.emit('error', e);\n  }\n};\n\n/**\n * Pause the client stream\n *\n * @api public\n */\nWebSocket.prototype.pause = function pauser() {\n  if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n  return this._socket.pause();\n};\n\n/**\n * Sends a ping\n *\n * @param {Object} data to be sent to the server\n * @param {Object} Members - mask: boolean, binary: boolean\n * @param {boolean} dontFailWhenClosed indicates whether or not to throw if the connection isnt open\n * @api public\n */\nWebSocket.prototype.ping = function ping(data, options, dontFailWhenClosed) {\n  if (this.readyState !== WebSocket.OPEN) {\n    if (dontFailWhenClosed === true) return;\n    throw new Error('not opened');\n  }\n\n  options = options || {};\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n\n  this._sender.ping(data, options);\n};\n\n/**\n * Sends a pong\n *\n * @param {Object} data to be sent to the server\n * @param {Object} Members - mask: boolean, binary: boolean\n * @param {boolean} dontFailWhenClosed indicates whether or not to throw if the connection isnt open\n * @api public\n */\nWebSocket.prototype.pong = function(data, options, dontFailWhenClosed) {\n  if (this.readyState !== WebSocket.OPEN) {\n    if (dontFailWhenClosed === true) return;\n    throw new Error('not opened');\n  }\n\n  options = options || {};\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n\n  this._sender.pong(data, options);\n};\n\n/**\n * Resume the client stream\n *\n * @api public\n */\nWebSocket.prototype.resume = function resume() {\n  if (this.readyState !== WebSocket.OPEN) throw new Error('not opened');\n\n  return this._socket.resume();\n};\n\n/**\n * Sends a piece of data\n *\n * @param {Object} data to be sent to the server\n * @param {Object} Members - mask: boolean, binary: boolean, compress: boolean\n * @param {function} Optional callback which is executed after the send completes\n * @api public\n */\n\nWebSocket.prototype.send = function send(data, options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  if (this.readyState !== WebSocket.OPEN) {\n    if (typeof cb === 'function') cb(new Error('not opened'));\n    else throw new Error('not opened');\n    return;\n  }\n\n  if (!data) data = '';\n  if (this._queue) {\n    var self = this;\n    this._queue.push(function() { self.send(data, options, cb); });\n    return;\n  }\n\n  options = options || {};\n  options.fin = true;\n\n  if (typeof options.binary === 'undefined') {\n    options.binary = (data instanceof ArrayBuffer || data instanceof Buffer ||\n      data instanceof Uint8Array ||\n      data instanceof Uint16Array ||\n      data instanceof Uint32Array ||\n      data instanceof Int8Array ||\n      data instanceof Int16Array ||\n      data instanceof Int32Array ||\n      data instanceof Float32Array ||\n      data instanceof Float64Array);\n  }\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n  if (typeof options.compress === 'undefined') options.compress = true;\n  if (!this.extensions[PerMessageDeflate.extensionName]) {\n    options.compress = false;\n  }\n\n  var readable = typeof stream.Readable === 'function'\n    ? stream.Readable\n    : stream.Stream;\n\n  if (data instanceof readable) {\n    startQueue(this);\n    var self = this;\n\n    sendStream(this, data, options, function send(error) {\n      process.nextTick(function tock() {\n        executeQueueSends(self);\n      });\n\n      if (typeof cb === 'function') cb(error);\n    });\n  } else {\n    this._sender.send(data, options, cb);\n  }\n};\n\n/**\n * Streams data through calls to a user supplied function\n *\n * @param {Object} Members - mask: boolean, binary: boolean, compress: boolean\n * @param {function} 'function (error, send)' which is executed on successive ticks of which send is 'function (data, final)'.\n * @api public\n */\nWebSocket.prototype.stream = function stream(options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  var self = this;\n\n  if (typeof cb !== 'function') throw new Error('callback must be provided');\n\n  if (this.readyState !== WebSocket.OPEN) {\n    if (typeof cb === 'function') cb(new Error('not opened'));\n    else throw new Error('not opened');\n    return;\n  }\n\n  if (this._queue) {\n    this._queue.push(function () { self.stream(options, cb); });\n    return;\n  }\n\n  options = options || {};\n\n  if (typeof options.mask === 'undefined') options.mask = !this._isServer;\n  if (typeof options.compress === 'undefined') options.compress = true;\n  if (!this.extensions[PerMessageDeflate.extensionName]) {\n    options.compress = false;\n  }\n\n  startQueue(this);\n\n  function send(data, final) {\n    try {\n      if (self.readyState !== WebSocket.OPEN) throw new Error('not opened');\n      options.fin = final === true;\n      self._sender.send(data, options);\n      if (!final) process.nextTick(cb.bind(null, null, send));\n      else executeQueueSends(self);\n    } catch (e) {\n      if (typeof cb === 'function') cb(e);\n      else {\n        delete self._queue;\n        self.emit('error', e);\n      }\n    }\n  }\n\n  process.nextTick(cb.bind(null, null, send));\n};\n\n/**\n * Immediately shuts down the connection\n *\n * @api public\n */\nWebSocket.prototype.terminate = function terminate() {\n  if (this.readyState === WebSocket.CLOSED) return;\n\n  if (this._socket) {\n    this.readyState = WebSocket.CLOSING;\n\n    // End the connection\n    try { this._socket.end(); }\n    catch (e) {\n      // Socket error during end() call, so just destroy it right now\n      cleanupWebsocketResources.call(this, true);\n      return;\n    }\n\n    // Add a timeout to ensure that the connection is completely\n    // cleaned up within 30 seconds, even if the clean close procedure\n    // fails for whatever reason\n    // First cleanup any pre-existing timeout from an earlier \"terminate\" call,\n    // if one exists.  Otherwise terminate calls in quick succession will leak timeouts\n    // and hold the program open for `closeTimout` time.\n    if (this._closeTimer) { clearTimeout(this._closeTimer); }\n    this._closeTimer = setTimeout(cleanupWebsocketResources.bind(this, true), closeTimeout);\n  } else if (this.readyState === WebSocket.CONNECTING) {\n    cleanupWebsocketResources.call(this, true);\n  }\n};\n\n/**\n * Expose bufferedAmount\n *\n * @api public\n */\nObject.defineProperty(WebSocket.prototype, 'bufferedAmount', {\n  get: function get() {\n    var amount = 0;\n    if (this._socket) {\n      amount = this._socket.bufferSize || 0;\n    }\n    return amount;\n  }\n});\n\n/**\n * Emulates the W3C Browser based WebSocket interface using function members.\n *\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\n['open', 'error', 'close', 'message'].forEach(function(method) {\n  Object.defineProperty(WebSocket.prototype, 'on' + method, {\n    /**\n     * Returns the current listener\n     *\n     * @returns {Mixed} the set function or undefined\n     * @api public\n     */\n    get: function get() {\n      var listener = this.listeners(method)[0];\n      return listener ? (listener._listener ? listener._listener : listener) : undefined;\n    },\n\n    /**\n     * Start listening for events\n     *\n     * @param {Function} listener the listener\n     * @returns {Mixed} the set function or undefined\n     * @api public\n     */\n    set: function set(listener) {\n      this.removeAllListeners(method);\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\n/**\n * Emulates the W3C Browser based WebSocket interface using addEventListener.\n *\n * @see https://developer.mozilla.org/en/DOM/element.addEventListener\n * @see http://dev.w3.org/html5/websockets/#the-websocket-interface\n * @api public\n */\nWebSocket.prototype.addEventListener = function(method, listener) {\n  var target = this;\n\n  function onMessage (data, flags) {\n    listener.call(target, new MessageEvent(data, !!flags.binary, target));\n  }\n\n  function onClose (code, message) {\n    listener.call(target, new CloseEvent(code, message, target));\n  }\n\n  function onError (event) {\n    event.type = 'error';\n    event.target = target;\n    listener.call(target, event);\n  }\n\n  function onOpen () {\n    listener.call(target, new OpenEvent(target));\n  }\n\n  if (typeof listener === 'function') {\n    if (method === 'message') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      // store a reference so we can return the original function from the\n      // addEventListener hook\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  }\n};\n\nmodule.exports = WebSocket;\nmodule.exports.buildHostHeader = buildHostHeader\n\n/**\n * W3C MessageEvent\n *\n * @see http://www.w3.org/TR/html5/comms.html\n * @constructor\n * @api private\n */\nfunction MessageEvent(dataArg, isBinary, target) {\n  this.type = 'message';\n  this.data = dataArg;\n  this.target = target;\n  this.binary = isBinary; // non-standard.\n}\n\n/**\n * W3C CloseEvent\n *\n * @see http://www.w3.org/TR/html5/comms.html\n * @constructor\n * @api private\n */\nfunction CloseEvent(code, reason, target) {\n  this.type = 'close';\n  this.wasClean = (typeof code === 'undefined' || code === 1000);\n  this.code = code;\n  this.reason = reason;\n  this.target = target;\n}\n\n/**\n * W3C OpenEvent\n *\n * @see http://www.w3.org/TR/html5/comms.html\n * @constructor\n * @api private\n */\nfunction OpenEvent(target) {\n  this.type = 'open';\n  this.target = target;\n}\n\n// Append port number to Host header, only if specified in the url\n// and non-default\nfunction buildHostHeader(isSecure, hostname, port) {\n  var headerHost = hostname;\n  if (hostname) {\n    if ((isSecure && (port != 443)) || (!isSecure && (port != 80))){\n      headerHost = headerHost + ':' + port;\n    }\n  }\n  return headerHost;\n}\n\n/**\n * Entirely private apis,\n * which may or may not be bound to a sepcific WebSocket instance.\n */\nfunction initAsServerClient(req, socket, upgradeHead, options) {\n  options = new Options({\n    protocolVersion: protocolVersion,\n    protocol: null,\n    extensions: {}\n  }).merge(options);\n\n  // expose state properties\n  this.protocol = options.value.protocol;\n  this.protocolVersion = options.value.protocolVersion;\n  this.extensions = options.value.extensions;\n  this.supports.binary = (this.protocolVersion !== 'hixie-76');\n  this.upgradeReq = req;\n  this.readyState = WebSocket.CONNECTING;\n  this._isServer = true;\n\n  // establish connection\n  if (options.value.protocolVersion === 'hixie-76') {\n    establishConnection.call(this, ReceiverHixie, SenderHixie, socket, upgradeHead);\n  } else {\n    establishConnection.call(this, Receiver, Sender, socket, upgradeHead);\n  }\n}\n\nfunction initAsClient(address, protocols, options) {\n  options = new Options({\n    origin: null,\n    protocolVersion: protocolVersion,\n    host: null,\n    headers: null,\n    protocol: protocols.join(','),\n    agent: null,\n\n    // ssl-related options\n    pfx: null,\n    key: null,\n    passphrase: null,\n    cert: null,\n    ca: null,\n    ciphers: null,\n    rejectUnauthorized: null,\n    perMessageDeflate: true,\n    localAddress: null\n  }).merge(options);\n\n  if (options.value.protocolVersion !== 8 && options.value.protocolVersion !== 13) {\n    throw new Error('unsupported protocol version');\n  }\n\n  // verify URL and establish http class\n  var serverUrl = url.parse(address);\n  var isUnixSocket = serverUrl.protocol === 'ws+unix:';\n  if (!serverUrl.host && !isUnixSocket) throw new Error('invalid url');\n  var isSecure = serverUrl.protocol === 'wss:' || serverUrl.protocol === 'https:';\n  var httpObj = isSecure ? https : http;\n  var port = serverUrl.port || (isSecure ? 443 : 80);\n  var auth = serverUrl.auth;\n\n  // prepare extensions\n  var extensionsOffer = {};\n  var perMessageDeflate;\n  if (options.value.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(typeof options.value.perMessageDeflate !== true ? options.value.perMessageDeflate : {}, false);\n    extensionsOffer[PerMessageDeflate.extensionName] = perMessageDeflate.offer();\n  }\n\n  // expose state properties\n  this._isServer = false;\n  this.url = address;\n  this.protocolVersion = options.value.protocolVersion;\n  this.supports.binary = (this.protocolVersion !== 'hixie-76');\n\n  // begin handshake\n  var key = new Buffer(options.value.protocolVersion + '-' + Date.now()).toString('base64');\n  var shasum = crypto.createHash('sha1');\n  shasum.update(key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n  var expectedServerKey = shasum.digest('base64');\n\n  var agent = options.value.agent;\n\n  var headerHost = buildHostHeader(isSecure, serverUrl.hostname, port)\n\n  var requestOptions = {\n    port: port,\n    host: serverUrl.hostname,\n    headers: {\n      'Connection': 'Upgrade',\n      'Upgrade': 'websocket',\n      'Host': headerHost,\n      'Sec-WebSocket-Version': options.value.protocolVersion,\n      'Sec-WebSocket-Key': key\n    }\n  };\n\n  // If we have basic auth.\n  if (auth) {\n    requestOptions.headers.Authorization = 'Basic ' + new Buffer(auth).toString('base64');\n  }\n\n  if (options.value.protocol) {\n    requestOptions.headers['Sec-WebSocket-Protocol'] = options.value.protocol;\n  }\n\n  if (options.value.host) {\n    requestOptions.headers.Host = options.value.host;\n  }\n\n  if (options.value.headers) {\n    for (var header in options.value.headers) {\n       if (options.value.headers.hasOwnProperty(header)) {\n        requestOptions.headers[header] = options.value.headers[header];\n       }\n    }\n  }\n\n  if (Object.keys(extensionsOffer).length) {\n    requestOptions.headers['Sec-WebSocket-Extensions'] = Extensions.format(extensionsOffer);\n  }\n\n  if (options.isDefinedAndNonNull('pfx')\n   || options.isDefinedAndNonNull('key')\n   || options.isDefinedAndNonNull('passphrase')\n   || options.isDefinedAndNonNull('cert')\n   || options.isDefinedAndNonNull('ca')\n   || options.isDefinedAndNonNull('ciphers')\n   || options.isDefinedAndNonNull('rejectUnauthorized')) {\n\n    if (options.isDefinedAndNonNull('pfx')) requestOptions.pfx = options.value.pfx;\n    if (options.isDefinedAndNonNull('key')) requestOptions.key = options.value.key;\n    if (options.isDefinedAndNonNull('passphrase')) requestOptions.passphrase = options.value.passphrase;\n    if (options.isDefinedAndNonNull('cert')) requestOptions.cert = options.value.cert;\n    if (options.isDefinedAndNonNull('ca')) requestOptions.ca = options.value.ca;\n    if (options.isDefinedAndNonNull('ciphers')) requestOptions.ciphers = options.value.ciphers;\n    if (options.isDefinedAndNonNull('rejectUnauthorized')) requestOptions.rejectUnauthorized = options.value.rejectUnauthorized;\n\n    if (!agent) {\n        // global agent ignores client side certificates\n        agent = new httpObj.Agent(requestOptions);\n    }\n  }\n\n  requestOptions.path = serverUrl.path || '/';\n\n  if (agent) {\n    requestOptions.agent = agent;\n  }\n\n  if (isUnixSocket) {\n    requestOptions.socketPath = serverUrl.pathname;\n  }\n\n  if (options.value.localAddress) {\n    requestOptions.localAddress = options.value.localAddress;\n  }\n\n  if (options.value.origin) {\n    if (options.value.protocolVersion < 13) requestOptions.headers['Sec-WebSocket-Origin'] = options.value.origin;\n    else requestOptions.headers.Origin = options.value.origin;\n  }\n\n  var self = this;\n  var req = httpObj.request(requestOptions);\n\n  req.on('error', function onerror(error) {\n    self.emit('error', error);\n    cleanupWebsocketResources.call(self, error);\n  });\n\n  req.once('response', function response(res) {\n    var error;\n\n    if (!self.emit('unexpected-response', req, res)) {\n      error = new Error('unexpected server response (' + res.statusCode + ')');\n      req.abort();\n      self.emit('error', error);\n    }\n\n    cleanupWebsocketResources.call(self, error);\n  });\n\n  req.once('upgrade', function upgrade(res, socket, upgradeHead) {\n    if (self.readyState === WebSocket.CLOSED) {\n      // client closed before server accepted connection\n      self.emit('close');\n      self.removeAllListeners();\n      socket.end();\n      return;\n    }\n\n    var serverKey = res.headers['sec-websocket-accept'];\n    if (typeof serverKey === 'undefined' || serverKey !== expectedServerKey) {\n      self.emit('error', 'invalid server key');\n      self.removeAllListeners();\n      socket.end();\n      return;\n    }\n\n    var serverProt = res.headers['sec-websocket-protocol'];\n    var protList = (options.value.protocol || \"\").split(/, */);\n    var protError = null;\n\n    if (!options.value.protocol && serverProt) {\n      protError = 'server sent a subprotocol even though none requested';\n    } else if (options.value.protocol && !serverProt) {\n      protError = 'server sent no subprotocol even though requested';\n    } else if (serverProt && protList.indexOf(serverProt) === -1) {\n      protError = 'server responded with an invalid protocol';\n    }\n\n    if (protError) {\n      self.emit('error', protError);\n      self.removeAllListeners();\n      socket.end();\n      return;\n    } else if (serverProt) {\n      self.protocol = serverProt;\n    }\n\n    var serverExtensions = Extensions.parse(res.headers['sec-websocket-extensions']);\n    if (perMessageDeflate && serverExtensions[PerMessageDeflate.extensionName]) {\n      try {\n        perMessageDeflate.accept(serverExtensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        self.emit('error', 'invalid extension parameter');\n        self.removeAllListeners();\n        socket.end();\n        return;\n      }\n      self.extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n    }\n\n    establishConnection.call(self, Receiver, Sender, socket, upgradeHead);\n\n    // perform cleanup on http resources\n    req.removeAllListeners();\n    req = null;\n    agent = null;\n  });\n\n  req.end();\n  this.readyState = WebSocket.CONNECTING;\n}\n\nfunction establishConnection(ReceiverClass, SenderClass, socket, upgradeHead) {\n  var ultron = this._ultron = new Ultron(socket)\n    , called = false\n    , self = this;\n\n  socket.setTimeout(0);\n  socket.setNoDelay(true);\n\n  this._receiver = new ReceiverClass(this.extensions);\n  this._socket = socket;\n\n  // socket cleanup handlers\n  ultron.on('end', cleanupWebsocketResources.bind(this));\n  ultron.on('close', cleanupWebsocketResources.bind(this));\n  ultron.on('error', cleanupWebsocketResources.bind(this));\n\n  // ensure that the upgradeHead is added to the receiver\n  function firstHandler(data) {\n    if (called || self.readyState === WebSocket.CLOSED) return;\n\n    called = true;\n    socket.removeListener('data', firstHandler);\n    ultron.on('data', realHandler);\n\n    if (upgradeHead && upgradeHead.length > 0) {\n      realHandler(upgradeHead);\n      upgradeHead = null;\n    }\n\n    if (data) realHandler(data);\n  }\n\n  // subsequent packets are pushed straight to the receiver\n  function realHandler(data) {\n    self.bytesReceived += data.length;\n    self._receiver.add(data);\n  }\n\n  ultron.on('data', firstHandler);\n\n  // if data was passed along with the http upgrade,\n  // this will schedule a push of that on to the receiver.\n  // this has to be done on next tick, since the caller\n  // hasn't had a chance to set event handlers on this client\n  // object yet.\n  process.nextTick(firstHandler);\n\n  // receiver event handlers\n  self._receiver.ontext = function ontext(data, flags) {\n    flags = flags || {};\n\n    self.emit('message', data, flags);\n  };\n\n  self._receiver.onbinary = function onbinary(data, flags) {\n    flags = flags || {};\n\n    flags.binary = true;\n    self.emit('message', data, flags);\n  };\n\n  self._receiver.onping = function onping(data, flags) {\n    flags = flags || {};\n\n    self.pong(data, {\n      mask: !self._isServer,\n      binary: flags.binary === true\n    }, true);\n\n    self.emit('ping', data, flags);\n  };\n\n  self._receiver.onpong = function onpong(data, flags) {\n    self.emit('pong', data, flags || {});\n  };\n\n  self._receiver.onclose = function onclose(code, data, flags) {\n    flags = flags || {};\n\n    self._closeReceived = true;\n    self.close(code, data);\n  };\n\n  self._receiver.onerror = function onerror(reason, errorCode) {\n    // close the connection when the receiver reports a HyBi error code\n    self.close(typeof errorCode !== 'undefined' ? errorCode : 1002, '');\n    self.emit('error', reason, errorCode);\n  };\n\n  // finalize the client\n  this._sender = new SenderClass(socket, this.extensions);\n  this._sender.on('error', function onerror(error) {\n    self.close(1002, '');\n    self.emit('error', error);\n  });\n\n  this.readyState = WebSocket.OPEN;\n  this.emit('open');\n}\n\nfunction startQueue(instance) {\n  instance._queue = instance._queue || [];\n}\n\nfunction executeQueueSends(instance) {\n  var queue = instance._queue;\n  if (typeof queue === 'undefined') return;\n\n  delete instance._queue;\n  for (var i = 0, l = queue.length; i < l; ++i) {\n    queue[i]();\n  }\n}\n\nfunction sendStream(instance, stream, options, cb) {\n  stream.on('data', function incoming(data) {\n    if (instance.readyState !== WebSocket.OPEN) {\n      if (typeof cb === 'function') cb(new Error('not opened'));\n      else {\n        delete instance._queue;\n        instance.emit('error', new Error('not opened'));\n      }\n      return;\n    }\n\n    options.fin = false;\n    instance._sender.send(data, options);\n  });\n\n  stream.on('end', function end() {\n    if (instance.readyState !== WebSocket.OPEN) {\n      if (typeof cb === 'function') cb(new Error('not opened'));\n      else {\n        delete instance._queue;\n        instance.emit('error', new Error('not opened'));\n      }\n      return;\n    }\n\n    options.fin = true;\n    instance._sender.send(null, options);\n\n    if (typeof cb === 'function') cb(null);\n  });\n}\n\nfunction cleanupWebsocketResources(error) {\n  if (this.readyState === WebSocket.CLOSED) return;\n\n  var emitClose = this.readyState !== WebSocket.CONNECTING;\n  this.readyState = WebSocket.CLOSED;\n\n  clearTimeout(this._closeTimer);\n  this._closeTimer = null;\n\n  if (emitClose) {\n    // If the connection was closed abnormally (with an error), or if\n    // the close control frame was not received then the close code\n    // must default to 1006.\n    if (error || !this._closeReceived) {\n      this._closeCode = 1006;\n    }\n    this.emit('close', this._closeCode || 1000, this._closeMessage || '');\n  }\n\n  if (this._socket) {\n    if (this._ultron) this._ultron.destroy();\n    this._socket.on('error', function onerror() {\n      try { this.destroy(); }\n      catch (e) {}\n    });\n\n    try {\n      if (!error) this._socket.end();\n      else this._socket.destroy();\n    } catch (e) { /* Ignore termination errors */ }\n\n    this._socket = null;\n    this._ultron = null;\n  }\n\n  if (this._sender) {\n    this._sender.removeAllListeners();\n    this._sender = null;\n  }\n\n  if (this._receiver) {\n    this._receiver.cleanup();\n    this._receiver = null;\n  }\n\n  if (this.extensions[PerMessageDeflate.extensionName]) {\n    this.extensions[PerMessageDeflate.extensionName].cleanup();\n  }\n\n  this.extensions = null;\n\n  this.removeAllListeners();\n  this.on('error', function onerror() {}); // catch all errors after this\n  delete this._queue;\n}\n","/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar util = require('util')\n  , events = require('events')\n  , http = require('http')\n  , crypto = require('crypto')\n  , Options = require('options')\n  , WebSocket = require('./WebSocket')\n  , Extensions = require('./Extensions')\n  , PerMessageDeflate = require('./PerMessageDeflate')\n  , tls = require('tls')\n  , url = require('url');\n\n/**\n * WebSocket Server implementation\n */\n\nfunction WebSocketServer(options, callback) {\n  if (this instanceof WebSocketServer === false) {\n    return new WebSocketServer(options, callback);\n  }\n\n  events.EventEmitter.call(this);\n\n  options = new Options({\n    host: '0.0.0.0',\n    port: null,\n    server: null,\n    verifyClient: null,\n    handleProtocols: null,\n    path: null,\n    noServer: false,\n    disableHixie: false,\n    clientTracking: true,\n    perMessageDeflate: true\n  }).merge(options);\n\n  if (!options.isDefinedAndNonNull('port') && !options.isDefinedAndNonNull('server') && !options.value.noServer) {\n    throw new TypeError('`port` or a `server` must be provided');\n  }\n\n  var self = this;\n\n  if (options.isDefinedAndNonNull('port')) {\n    this._server = http.createServer(function (req, res) {\n      var body = http.STATUS_CODES[426];\n      res.writeHead(426, {\n        'Content-Length': body.length,\n        'Content-Type': 'text/plain'\n      });\n      res.end(body);\n    });\n    this._server.allowHalfOpen = false;\n    this._server.listen(options.value.port, options.value.host, callback);\n    this._closeServer = function() { if (self._server) self._server.close(); };\n  }\n  else if (options.value.server) {\n    this._server = options.value.server;\n    if (options.value.path) {\n      // take note of the path, to avoid collisions when multiple websocket servers are\n      // listening on the same http server\n      if (this._server._webSocketPaths && options.value.server._webSocketPaths[options.value.path]) {\n        throw new Error('two instances of WebSocketServer cannot listen on the same http server path');\n      }\n      if (typeof this._server._webSocketPaths !== 'object') {\n        this._server._webSocketPaths = {};\n      }\n      this._server._webSocketPaths[options.value.path] = 1;\n    }\n  }\n  if (this._server) this._server.once('listening', function() { self.emit('listening'); });\n\n  if (typeof this._server != 'undefined') {\n    this._server.on('error', function(error) {\n      self.emit('error', error)\n    });\n    this._server.on('upgrade', function(req, socket, upgradeHead) {\n      //copy upgradeHead to avoid retention of large slab buffers used in node core\n      var head = new Buffer(upgradeHead.length);\n      upgradeHead.copy(head);\n\n      self.handleUpgrade(req, socket, head, function(client) {\n        self.emit('connection'+req.url, client);\n        self.emit('connection', client);\n      });\n    });\n  }\n\n  this.options = options.value;\n  this.path = options.value.path;\n  this.clients = [];\n}\n\n/**\n * Inherits from EventEmitter.\n */\n\nutil.inherits(WebSocketServer, events.EventEmitter);\n\n/**\n * Immediately shuts down the connection.\n *\n * @api public\n */\n\nWebSocketServer.prototype.close = function(callback) {\n  // terminate all associated clients\n  var error = null;\n  try {\n    for (var i = 0, l = this.clients.length; i < l; ++i) {\n      this.clients[i].terminate();\n    }\n  }\n  catch (e) {\n    error = e;\n  }\n\n  // remove path descriptor, if any\n  if (this.path && this._server._webSocketPaths) {\n    delete this._server._webSocketPaths[this.path];\n    if (Object.keys(this._server._webSocketPaths).length == 0) {\n      delete this._server._webSocketPaths;\n    }\n  }\n\n  // close the http server if it was internally created\n  try {\n    if (typeof this._closeServer !== 'undefined') {\n      this._closeServer();\n    }\n  }\n  finally {\n    delete this._server;\n  }\n  if(callback)\n    callback(error);\n  else if(error)\n    throw error;\n}\n\n/**\n * Handle a HTTP Upgrade request.\n *\n * @api public\n */\n\nWebSocketServer.prototype.handleUpgrade = function(req, socket, upgradeHead, cb) {\n  // check for wrong path\n  if (this.options.path) {\n    var u = url.parse(req.url);\n    if (u && u.pathname !== this.options.path) return;\n  }\n\n  if (typeof req.headers.upgrade === 'undefined' || req.headers.upgrade.toLowerCase() !== 'websocket') {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  if (req.headers['sec-websocket-key1']) handleHixieUpgrade.apply(this, arguments);\n  else handleHybiUpgrade.apply(this, arguments);\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Entirely private apis,\n * which may or may not be bound to a sepcific WebSocket instance.\n */\n\nfunction handleHybiUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function() {\n    try { socket.destroy(); } catch (e) {}\n  }\n  socket.on('error', errorHandler);\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify version\n  var version = parseInt(req.headers['sec-websocket-version']);\n  if ([8, 13].indexOf(version) === -1) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  // verify protocol\n  var protocols = req.headers['sec-websocket-protocol'];\n\n  // verify client\n  var origin = version < 13 ?\n    req.headers['sec-websocket-origin'] :\n    req.headers['origin'];\n\n  // handle extensions offer\n  var extensionsOffer = Extensions.parse(req.headers['sec-websocket-extensions']);\n\n  // handler to call when the connection sequence completes\n  var self = this;\n  var completeHybiUpgrade2 = function(protocol) {\n\n    // calc key\n    var key = req.headers['sec-websocket-key'];\n    var shasum = crypto.createHash('sha1');\n    shasum.update(key + \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\");\n    key = shasum.digest('base64');\n\n    var headers = [\n        'HTTP/1.1 101 Switching Protocols'\n      , 'Upgrade: websocket'\n      , 'Connection: Upgrade'\n      , 'Sec-WebSocket-Accept: ' + key\n    ];\n\n    if (typeof protocol != 'undefined') {\n      headers.push('Sec-WebSocket-Protocol: ' + protocol);\n    }\n\n    var extensions = {};\n    try {\n      extensions = acceptExtensions.call(self, extensionsOffer);\n    } catch (err) {\n      abortConnection(socket, 400, 'Bad Request');\n      return;\n    }\n\n    if (Object.keys(extensions).length) {\n      var serverExtensions = {};\n      Object.keys(extensions).forEach(function(token) {\n        serverExtensions[token] = [extensions[token].params]\n      });\n      headers.push('Sec-WebSocket-Extensions: ' + Extensions.format(serverExtensions));\n    }\n\n    // allows external modification/inspection of handshake headers\n    self.emit('headers', headers);\n\n    socket.setTimeout(0);\n    socket.setNoDelay(true);\n    try {\n      socket.write(headers.concat('', '').join('\\r\\n'));\n    }\n    catch (e) {\n      // if the upgrade write fails, shut the connection down hard\n      try { socket.destroy(); } catch (e) {}\n      return;\n    }\n\n    var client = new WebSocket([req, socket, upgradeHead], {\n      protocolVersion: version,\n      protocol: protocol,\n      extensions: extensions\n    });\n\n    if (self.options.clientTracking) {\n      self.clients.push(client);\n      client.on('close', function() {\n        var index = self.clients.indexOf(client);\n        if (index != -1) {\n          self.clients.splice(index, 1);\n        }\n      });\n    }\n\n    // signal upgrade complete\n    socket.removeListener('error', errorHandler);\n    cb(client);\n  }\n\n  // optionally call external protocol selection handler before\n  // calling completeHybiUpgrade2\n  var completeHybiUpgrade1 = function() {\n    // choose from the sub-protocols\n    if (typeof self.options.handleProtocols == 'function') {\n        var protList = (protocols || \"\").split(/, */);\n        var callbackCalled = false;\n        var res = self.options.handleProtocols(protList, function(result, protocol) {\n          callbackCalled = true;\n          if (!result) abortConnection(socket, 401, 'Unauthorized');\n          else completeHybiUpgrade2(protocol);\n        });\n        if (!callbackCalled) {\n            // the handleProtocols handler never called our callback\n            abortConnection(socket, 501, 'Could not process protocols');\n        }\n        return;\n    } else {\n        if (typeof protocols !== 'undefined') {\n            completeHybiUpgrade2(protocols.split(/, */)[0]);\n        }\n        else {\n            completeHybiUpgrade2();\n        }\n    }\n  }\n\n  // optionally call external client verification handler\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      this.options.verifyClient(info, function(result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n\n        if (!result) abortConnection(socket, code, name);\n        else completeHybiUpgrade1();\n      });\n      return;\n    }\n    else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n\n  completeHybiUpgrade1();\n}\n\nfunction handleHixieUpgrade(req, socket, upgradeHead, cb) {\n  // handle premature socket errors\n  var errorHandler = function() {\n    try { socket.destroy(); } catch (e) {}\n  }\n  socket.on('error', errorHandler);\n\n  // bail if options prevent hixie\n  if (this.options.disableHixie) {\n    abortConnection(socket, 401, 'Hixie support disabled');\n    return;\n  }\n\n  // verify key presence\n  if (!req.headers['sec-websocket-key2']) {\n    abortConnection(socket, 400, 'Bad Request');\n    return;\n  }\n\n  var origin = req.headers['origin']\n    , self = this;\n\n  // setup handshake completion to run after client has been verified\n  var onClientVerified = function() {\n    var wshost;\n    if (!req.headers['x-forwarded-host'])\n        wshost = req.headers.host;\n    else\n        wshost = req.headers['x-forwarded-host'];\n    var location = ((req.headers['x-forwarded-proto'] === 'https' || socket.encrypted) ? 'wss' : 'ws') + '://' + wshost + req.url\n      , protocol = req.headers['sec-websocket-protocol'];\n\n    // handshake completion code to run once nonce has been successfully retrieved\n    var completeHandshake = function(nonce, rest) {\n      // calculate key\n      var k1 = req.headers['sec-websocket-key1']\n        , k2 = req.headers['sec-websocket-key2']\n        , md5 = crypto.createHash('md5');\n\n      [k1, k2].forEach(function (k) {\n        var n = parseInt(k.replace(/[^\\d]/g, ''))\n          , spaces = k.replace(/[^ ]/g, '').length;\n        if (spaces === 0 || n % spaces !== 0){\n          abortConnection(socket, 400, 'Bad Request');\n          return;\n        }\n        n /= spaces;\n        md5.update(String.fromCharCode(\n          n >> 24 & 0xFF,\n          n >> 16 & 0xFF,\n          n >> 8  & 0xFF,\n          n       & 0xFF));\n      });\n      md5.update(nonce.toString('binary'));\n\n      var headers = [\n          'HTTP/1.1 101 Switching Protocols'\n        , 'Upgrade: WebSocket'\n        , 'Connection: Upgrade'\n        , 'Sec-WebSocket-Location: ' + location\n      ];\n      if (typeof protocol != 'undefined') headers.push('Sec-WebSocket-Protocol: ' + protocol);\n      if (typeof origin != 'undefined') headers.push('Sec-WebSocket-Origin: ' + origin);\n\n      socket.setTimeout(0);\n      socket.setNoDelay(true);\n      try {\n        // merge header and hash buffer\n        var headerBuffer = new Buffer(headers.concat('', '').join('\\r\\n'));\n        var hashBuffer = new Buffer(md5.digest('binary'), 'binary');\n        var handshakeBuffer = new Buffer(headerBuffer.length + hashBuffer.length);\n        headerBuffer.copy(handshakeBuffer, 0);\n        hashBuffer.copy(handshakeBuffer, headerBuffer.length);\n\n        // do a single write, which - upon success - causes a new client websocket to be setup\n        socket.write(handshakeBuffer, 'binary', function(err) {\n          if (err) return; // do not create client if an error happens\n          var client = new WebSocket([req, socket, rest], {\n            protocolVersion: 'hixie-76',\n            protocol: protocol\n          });\n          if (self.options.clientTracking) {\n            self.clients.push(client);\n            client.on('close', function() {\n              var index = self.clients.indexOf(client);\n              if (index != -1) {\n                self.clients.splice(index, 1);\n              }\n            });\n          }\n\n          // signal upgrade complete\n          socket.removeListener('error', errorHandler);\n          cb(client);\n        });\n      }\n      catch (e) {\n        try { socket.destroy(); } catch (e) {}\n        return;\n      }\n    }\n\n    // retrieve nonce\n    var nonceLength = 8;\n    if (upgradeHead && upgradeHead.length >= nonceLength) {\n      var nonce = upgradeHead.slice(0, nonceLength);\n      var rest = upgradeHead.length > nonceLength ? upgradeHead.slice(nonceLength) : null;\n      completeHandshake.call(self, nonce, rest);\n    }\n    else {\n      // nonce not present in upgradeHead, so we must wait for enough data\n      // data to arrive before continuing\n      var nonce = new Buffer(nonceLength);\n      upgradeHead.copy(nonce, 0);\n      var received = upgradeHead.length;\n      var rest = null;\n      var handler = function (data) {\n        var toRead = Math.min(data.length, nonceLength - received);\n        if (toRead === 0) return;\n        data.copy(nonce, received, 0, toRead);\n        received += toRead;\n        if (received == nonceLength) {\n          socket.removeListener('data', handler);\n          if (toRead < data.length) rest = data.slice(toRead);\n          completeHandshake.call(self, nonce, rest);\n        }\n      }\n      socket.on('data', handler);\n    }\n  }\n\n  // verify client\n  if (typeof this.options.verifyClient == 'function') {\n    var info = {\n      origin: origin,\n      secure: typeof req.connection.authorized !== 'undefined' || typeof req.connection.encrypted !== 'undefined',\n      req: req\n    };\n    if (this.options.verifyClient.length == 2) {\n      var self = this;\n      this.options.verifyClient(info, function(result, code, name) {\n        if (typeof code === 'undefined') code = 401;\n        if (typeof name === 'undefined') name = http.STATUS_CODES[code];\n\n        if (!result) abortConnection(socket, code, name);\n        else onClientVerified.apply(self);\n      });\n      return;\n    }\n    else if (!this.options.verifyClient(info)) {\n      abortConnection(socket, 401, 'Unauthorized');\n      return;\n    }\n  }\n\n  // no client verification required\n  onClientVerified();\n}\n\nfunction acceptExtensions(offer) {\n  var extensions = {};\n  var options = this.options.perMessageDeflate;\n  if (options && offer[PerMessageDeflate.extensionName]) {\n    var perMessageDeflate = new PerMessageDeflate(options !== true ? options : {}, true);\n    perMessageDeflate.accept(offer[PerMessageDeflate.extensionName]);\n    extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n  }\n  return extensions;\n}\n\nfunction abortConnection(socket, code, name) {\n  try {\n    var response = [\n      'HTTP/1.1 ' + code + ' ' + name,\n      'Content-type: text/html'\n    ];\n    socket.write(response.concat('', '').join('\\r\\n'));\n  }\n  catch (e) { /* ignore errors - we've aborted this connection */ }\n  finally {\n    // ensure that an early aborted connection is shut down completely\n    try { socket.destroy(); } catch (e) {}\n  }\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/* global Y */\r\n'use strict'\r\n\r\nvar io = require('socket.io-client')\r\n\r\nfunction extend (Y) {\r\n  class Connector extends Y.AbstractConnector {\r\n    constructor (y, options) {\r\n      if (options === undefined) {\r\n        throw new Error('Options must not be undefined!')\r\n      }\r\n      if (options.room == null) {\r\n        throw new Error('You must define a room name!')\r\n      }\r\n      options.role = 'slave'\r\n      super(y, options)\r\n      this.options = options\r\n      if (options.url == null) {\r\n        var protocol = '073' // version 0.7.3\r\n        // if not defined, try to match protocol\r\n        if (typeof window !== 'undefined' || window.location.protocol === 'http:') {\r\n          // always runs on port \"6\"+protocol\r\n          options.url = 'https://yjs.dbis.rwth-aachen.de:6' + protocol\r\n        } else {\r\n          // always runs on port \"5\"+protocol\r\n          options.url = 'http://yjs.dbis.rwth-aachen.de:5' + protocol\r\n        }\r\n      }\r\n      var socket = io(options.url)\r\n      this.socket = socket\r\n      var self = this\r\n      if (socket.connected) {\r\n        joinRoom()\r\n      } else {\r\n        socket.on('connect', joinRoom)\r\n      }\r\n      function joinRoom () {\r\n        socket.emit('joinRoom', options.room)\r\n        self.userJoined('server', 'master')\r\n\r\n        socket.on('yjsEvent', function (message) {\r\n          if (message.type != null) {\r\n            if (message.type === 'sync done') {\r\n              self.setUserId(socket.id)\r\n            }\r\n            if (message.room === options.room) {\r\n              self.receiveMessage('server', message)\r\n            }\r\n          }\r\n        })\r\n\r\n        socket.on('disconnect', function (peer) {\r\n          self.userLeft('server')\r\n        })\r\n      }\r\n    }\r\n    disconnect () {\r\n      this.socket.disconnect()\r\n      super.disconnect()\r\n    }\r\n    reconnect () {\r\n      this.socket.connect()\r\n      this.socket.emit('joinRoom', this.options.room)\r\n      this.userJoined('server', 'master')\r\n      super.reconnect()\r\n    }\r\n    send (uid, message) {\r\n      message.room = this.options.room\r\n      this.socket.emit('yjsEvent', message)\r\n    }\r\n    broadcast (message) {\r\n      message.room = this.options.room\r\n      this.socket.emit('yjsEvent', message)\r\n    }\r\n    isDisconnected () {\r\n      return this.socket.disconnected\r\n    }\r\n  }\r\n  Y.extend('websockets-client', Connector)\r\n}\r\n\r\nmodule.exports = extend\r\nif (typeof Y !== 'undefined') {\r\n  extend(Y)\r\n}\r\n","var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'octstr', 'bitstr', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'ia5str', 'utf8str', 'bmpstr',\n  'numstr', 'printstr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input);\n        else\n          this._decodeChoice(input);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input);\n    else\n      result = this._decodeChoice(input);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      var fail = state.children.some(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input);\n      });\n      if (fail)\n        return err;\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0]);\n  else if (tag === 'octstr' || tag === 'bitstr')\n    return this._decodeStr(input, tag);\n  else if (tag === 'ia5str' || tag === 'utf8str' || tag === 'bmpstr')\n    return this._decodeStr(input, tag);\n  else if (tag === 'numstr' || tag === 'printstr')\n    return this._decodeStr(input, tag);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag);\n  else if (tag === 'null_')\n    return this._decodeNull(input);\n  else if (tag === 'bool')\n    return this._decodeBool(input);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0]);\n  else if (state.use !== null)\n    return this._getUse(state.use, input._reporterState.obj)._decode(input);\n  else\n    return input.error('unknown tag: ' + tag);\n\n  return null;\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n  var present = true;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // For error reporting\n  var prevKey;\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be ommited only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (tag === 'octstr' || tag === 'bitstr' || tag === 'ia5str')\n    return this._encodeStr(data, tag);\n  else if (tag === 'utf8str' || tag === 'bmpstr')\n    return this._encodeStr(data, tag);\n  else if (tag === 'numstr' || tag === 'printstr')\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  Error.captureStackTrace(this, ReporterError);\n\n  return this;\n};\n","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n","var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der');\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'ia5str' || tag === 'utf8str') {\n    return buffer.raw().toString();\n  } else if(tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n\n    return numstr;\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n\n    return printstr;\n  } else if(tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num >= 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'octstr') {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'ia5str' || tag === 'utf8str') {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// when used in node, this will actually load the util module we depend on\n// versus loading the builtin util module as happens otherwise\n// this is a bug in node module loading as far as I am concerned\nvar util = require('util/');\n\nvar pSlice = Array.prototype.slice;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  }\n  else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = stackStartFunction.name;\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction replacer(key, value) {\n  if (util.isUndefined(value)) {\n    return '' + value;\n  }\n  if (util.isNumber(value) && !isFinite(value)) {\n    return value.toString();\n  }\n  if (util.isFunction(value) || util.isRegExp(value)) {\n    return value.toString();\n  }\n  return value;\n}\n\nfunction truncate(s, n) {\n  if (util.isString(s)) {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction getMessage(self) {\n  return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(JSON.stringify(self.expected, replacer), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (util.isBuffer(actual) && util.isBuffer(expected)) {\n    if (actual.length != expected.length) return false;\n\n    for (var i = 0; i < actual.length; i++) {\n      if (actual[i] !== expected[i]) return false;\n    }\n\n    return true;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!util.isObject(actual) && !util.isObject(expected)) {\n    return actual == expected;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b) {\n  if (util.isNullOrUndefined(a) || util.isNullOrUndefined(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b)) {\n    return a === b;\n  }\n  var aIsArgs = isArguments(a),\n      bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b);\n  }\n  var ka = objectKeys(a),\n      kb = objectKeys(b),\n      key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key])) return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  } else if (actual instanceof expected) {\n    return true;\n  } else if (expected.call({}, actual) === true) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (util.isString(expected)) {\n    message = expected;\n    expected = null;\n  }\n\n  try {\n    block();\n  } catch (e) {\n    actual = e;\n  }\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  if (!shouldThrow && expectedException(actual, expected)) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws.apply(this, [true].concat(pSlice.call(arguments)));\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/message) {\n  _throws.apply(this, [false].concat(pSlice.call(arguments)));\n};\n\nassert.ifError = function(err) { if (err) {throw err;}};\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    // May be `new BN(bn)` ?\n    if (number !== null &&\n      typeof number === 'object' &&\n      Array.isArray(number.words)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    assert(this.bitLength() <= 53, 'Number can only safely store up to 53 bits');\n    return parseInt(this.toString(), 10);\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || byteLength;\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new Array(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    if (this.isZero()) return this.clone();\n\n    var r = this.clone();\n    r.negative = this.negative ^ 1;\n    return r;\n  };\n\n  BN.prototype.ineg = function ineg () {\n    this.negative ^= 1;\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    while (this.length < bytesNeeded) {\n      this.words[this.length++] = 0;\n    }\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    while (this.length <= off) {\n      this.words[this.length++] = 0;\n    }\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  /*\n  // NOTE: This could be potentionally used to generate loop-less multiplications\n  function _genCombMulTo(alen, blen) {\n    var len = alen + blen - 1;\n    var src = [\n      'var a = self.words;',\n      'var b = num.words;',\n      'var o = out.words;',\n      'var c = 0;',\n      'var lo;',\n      'var mid;',\n      'var hi;'\n    ];\n    for (var i = 0; i < alen; i++) {\n      src.push('var a' + i + ' = a[' + i + '] | 0;');\n      src.push('var al' + i + ' = a' + i + ' & 0x1fff;');\n      src.push('var ah' + i + ' = a' + i + ' >>> 13;');\n    }\n    for (var i = 0; i < blen; i++) {\n      src.push('var b' + i + ' = b[' + i + '] | 0;');\n      src.push('var bl' + i + ' = b' + i + ' & 0x1fff;');\n      src.push('var bh' + i + ' = b' + i + ' >>> 13;');\n    }\n    src.push('');\n    src.push('out.length = ' + len + ';');\n\n    for (var k = 0; k < len; k++) {\n      var minJ = Math.max(0, k - alen + 1);\n      var maxJ = Math.min(k, blen - 1);\n\n      src.push('\\/* k = ' + k + ' *\\/');\n      src.push('var w' + k + ' = c;');\n      src.push('c = 0;');\n      for (var j = minJ; j <= maxJ; j++) {\n        var i = k - j;\n\n        src.push('lo = Math.imul(al' + i + ', bl' + j + ');');\n        src.push('mid = Math.imul(al' + i + ', bh' + j + ');');\n        src.push('mid = (mid + Math.imul(ah' + i + ', bl' + j + ')) | 0;');\n        src.push('hi = Math.imul(ah' + i + ', bh' + j + ');');\n\n        src.push('w' + k + ' = (w' + k + ' + lo) | 0;');\n        src.push('w' + k + ' = (w' + k + ' + ((mid & 0x1fff) << 13)) | 0;');\n        src.push('c = (c + hi) | 0;');\n        src.push('c = (c + (mid >>> 13)) | 0;');\n        src.push('c = (c + (w' + k + ' >>> 26)) | 0;');\n        src.push('w' + k + ' &= 0x3ffffff;');\n      }\n    }\n    // Store in separate step for better memory access\n    for (var k = 0; k < len; k++)\n      src.push('o[' + k + '] = w' + k + ';');\n    src.push('if (c !== 0) {',\n             '  o[' + k + '] = c;',\n             '  out.length++;',\n             '}',\n             'return out;');\n\n    return src.join('\\n');\n  }\n  console.log(_genCombMulTo(10, 10));\n  */\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.length = 19;\n    /* k = 0 */\n    var w0 = c;\n    c = 0;\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    w0 = (w0 + lo) | 0;\n    w0 = (w0 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    var w1 = c;\n    c = 0;\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    w1 = (w1 + lo) | 0;\n    w1 = (w1 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    lo = Math.imul(al0, bl1);\n    mid = Math.imul(al0, bh1);\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = Math.imul(ah0, bh1);\n    w1 = (w1 + lo) | 0;\n    w1 = (w1 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    var w2 = c;\n    c = 0;\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    w2 = (w2 + lo) | 0;\n    w2 = (w2 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    lo = Math.imul(al1, bl1);\n    mid = Math.imul(al1, bh1);\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = Math.imul(ah1, bh1);\n    w2 = (w2 + lo) | 0;\n    w2 = (w2 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    lo = Math.imul(al0, bl2);\n    mid = Math.imul(al0, bh2);\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = Math.imul(ah0, bh2);\n    w2 = (w2 + lo) | 0;\n    w2 = (w2 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    var w3 = c;\n    c = 0;\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    lo = Math.imul(al2, bl1);\n    mid = Math.imul(al2, bh1);\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = Math.imul(ah2, bh1);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    lo = Math.imul(al1, bl2);\n    mid = Math.imul(al1, bh2);\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = Math.imul(ah1, bh2);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    lo = Math.imul(al0, bl3);\n    mid = Math.imul(al0, bh3);\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = Math.imul(ah0, bh3);\n    w3 = (w3 + lo) | 0;\n    w3 = (w3 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    var w4 = c;\n    c = 0;\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al3, bl1);\n    mid = Math.imul(al3, bh1);\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = Math.imul(ah3, bh1);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al2, bl2);\n    mid = Math.imul(al2, bh2);\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = Math.imul(ah2, bh2);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al1, bl3);\n    mid = Math.imul(al1, bh3);\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = Math.imul(ah1, bh3);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    lo = Math.imul(al0, bl4);\n    mid = Math.imul(al0, bh4);\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = Math.imul(ah0, bh4);\n    w4 = (w4 + lo) | 0;\n    w4 = (w4 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    var w5 = c;\n    c = 0;\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al4, bl1);\n    mid = Math.imul(al4, bh1);\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = Math.imul(ah4, bh1);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al3, bl2);\n    mid = Math.imul(al3, bh2);\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = Math.imul(ah3, bh2);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al2, bl3);\n    mid = Math.imul(al2, bh3);\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = Math.imul(ah2, bh3);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al1, bl4);\n    mid = Math.imul(al1, bh4);\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = Math.imul(ah1, bh4);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    lo = Math.imul(al0, bl5);\n    mid = Math.imul(al0, bh5);\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = Math.imul(ah0, bh5);\n    w5 = (w5 + lo) | 0;\n    w5 = (w5 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    var w6 = c;\n    c = 0;\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al5, bl1);\n    mid = Math.imul(al5, bh1);\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = Math.imul(ah5, bh1);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al4, bl2);\n    mid = Math.imul(al4, bh2);\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = Math.imul(ah4, bh2);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al3, bl3);\n    mid = Math.imul(al3, bh3);\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = Math.imul(ah3, bh3);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al2, bl4);\n    mid = Math.imul(al2, bh4);\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = Math.imul(ah2, bh4);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al1, bl5);\n    mid = Math.imul(al1, bh5);\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = Math.imul(ah1, bh5);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    lo = Math.imul(al0, bl6);\n    mid = Math.imul(al0, bh6);\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = Math.imul(ah0, bh6);\n    w6 = (w6 + lo) | 0;\n    w6 = (w6 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    var w7 = c;\n    c = 0;\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al6, bl1);\n    mid = Math.imul(al6, bh1);\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = Math.imul(ah6, bh1);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al5, bl2);\n    mid = Math.imul(al5, bh2);\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = Math.imul(ah5, bh2);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al4, bl3);\n    mid = Math.imul(al4, bh3);\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = Math.imul(ah4, bh3);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al3, bl4);\n    mid = Math.imul(al3, bh4);\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = Math.imul(ah3, bh4);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al2, bl5);\n    mid = Math.imul(al2, bh5);\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = Math.imul(ah2, bh5);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al1, bl6);\n    mid = Math.imul(al1, bh6);\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = Math.imul(ah1, bh6);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    lo = Math.imul(al0, bl7);\n    mid = Math.imul(al0, bh7);\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = Math.imul(ah0, bh7);\n    w7 = (w7 + lo) | 0;\n    w7 = (w7 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    var w8 = c;\n    c = 0;\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al7, bl1);\n    mid = Math.imul(al7, bh1);\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = Math.imul(ah7, bh1);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al6, bl2);\n    mid = Math.imul(al6, bh2);\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = Math.imul(ah6, bh2);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al5, bl3);\n    mid = Math.imul(al5, bh3);\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = Math.imul(ah5, bh3);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al4, bl4);\n    mid = Math.imul(al4, bh4);\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = Math.imul(ah4, bh4);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al3, bl5);\n    mid = Math.imul(al3, bh5);\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = Math.imul(ah3, bh5);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al2, bl6);\n    mid = Math.imul(al2, bh6);\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = Math.imul(ah2, bh6);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al1, bl7);\n    mid = Math.imul(al1, bh7);\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = Math.imul(ah1, bh7);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    lo = Math.imul(al0, bl8);\n    mid = Math.imul(al0, bh8);\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = Math.imul(ah0, bh8);\n    w8 = (w8 + lo) | 0;\n    w8 = (w8 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    var w9 = c;\n    c = 0;\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al8, bl1);\n    mid = Math.imul(al8, bh1);\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = Math.imul(ah8, bh1);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al7, bl2);\n    mid = Math.imul(al7, bh2);\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = Math.imul(ah7, bh2);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al6, bl3);\n    mid = Math.imul(al6, bh3);\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = Math.imul(ah6, bh3);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al5, bl4);\n    mid = Math.imul(al5, bh4);\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = Math.imul(ah5, bh4);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al4, bl5);\n    mid = Math.imul(al4, bh5);\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = Math.imul(ah4, bh5);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al3, bl6);\n    mid = Math.imul(al3, bh6);\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = Math.imul(ah3, bh6);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al2, bl7);\n    mid = Math.imul(al2, bh7);\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = Math.imul(ah2, bh7);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al1, bl8);\n    mid = Math.imul(al1, bh8);\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = Math.imul(ah1, bh8);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    lo = Math.imul(al0, bl9);\n    mid = Math.imul(al0, bh9);\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = Math.imul(ah0, bh9);\n    w9 = (w9 + lo) | 0;\n    w9 = (w9 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    var w10 = c;\n    c = 0;\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al8, bl2);\n    mid = Math.imul(al8, bh2);\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = Math.imul(ah8, bh2);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al7, bl3);\n    mid = Math.imul(al7, bh3);\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = Math.imul(ah7, bh3);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al6, bl4);\n    mid = Math.imul(al6, bh4);\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = Math.imul(ah6, bh4);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al5, bl5);\n    mid = Math.imul(al5, bh5);\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = Math.imul(ah5, bh5);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al4, bl6);\n    mid = Math.imul(al4, bh6);\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = Math.imul(ah4, bh6);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al3, bl7);\n    mid = Math.imul(al3, bh7);\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = Math.imul(ah3, bh7);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al2, bl8);\n    mid = Math.imul(al2, bh8);\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = Math.imul(ah2, bh8);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    lo = Math.imul(al1, bl9);\n    mid = Math.imul(al1, bh9);\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = Math.imul(ah1, bh9);\n    w10 = (w10 + lo) | 0;\n    w10 = (w10 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    var w11 = c;\n    c = 0;\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al8, bl3);\n    mid = Math.imul(al8, bh3);\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = Math.imul(ah8, bh3);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al7, bl4);\n    mid = Math.imul(al7, bh4);\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = Math.imul(ah7, bh4);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al6, bl5);\n    mid = Math.imul(al6, bh5);\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = Math.imul(ah6, bh5);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al5, bl6);\n    mid = Math.imul(al5, bh6);\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = Math.imul(ah5, bh6);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al4, bl7);\n    mid = Math.imul(al4, bh7);\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = Math.imul(ah4, bh7);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al3, bl8);\n    mid = Math.imul(al3, bh8);\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = Math.imul(ah3, bh8);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    lo = Math.imul(al2, bl9);\n    mid = Math.imul(al2, bh9);\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = Math.imul(ah2, bh9);\n    w11 = (w11 + lo) | 0;\n    w11 = (w11 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    var w12 = c;\n    c = 0;\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al8, bl4);\n    mid = Math.imul(al8, bh4);\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = Math.imul(ah8, bh4);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al7, bl5);\n    mid = Math.imul(al7, bh5);\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = Math.imul(ah7, bh5);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al6, bl6);\n    mid = Math.imul(al6, bh6);\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = Math.imul(ah6, bh6);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al5, bl7);\n    mid = Math.imul(al5, bh7);\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = Math.imul(ah5, bh7);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al4, bl8);\n    mid = Math.imul(al4, bh8);\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = Math.imul(ah4, bh8);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    lo = Math.imul(al3, bl9);\n    mid = Math.imul(al3, bh9);\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = Math.imul(ah3, bh9);\n    w12 = (w12 + lo) | 0;\n    w12 = (w12 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    var w13 = c;\n    c = 0;\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al8, bl5);\n    mid = Math.imul(al8, bh5);\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = Math.imul(ah8, bh5);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al7, bl6);\n    mid = Math.imul(al7, bh6);\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = Math.imul(ah7, bh6);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al6, bl7);\n    mid = Math.imul(al6, bh7);\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = Math.imul(ah6, bh7);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al5, bl8);\n    mid = Math.imul(al5, bh8);\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = Math.imul(ah5, bh8);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    lo = Math.imul(al4, bl9);\n    mid = Math.imul(al4, bh9);\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = Math.imul(ah4, bh9);\n    w13 = (w13 + lo) | 0;\n    w13 = (w13 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    var w14 = c;\n    c = 0;\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al8, bl6);\n    mid = Math.imul(al8, bh6);\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = Math.imul(ah8, bh6);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al7, bl7);\n    mid = Math.imul(al7, bh7);\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = Math.imul(ah7, bh7);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al6, bl8);\n    mid = Math.imul(al6, bh8);\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = Math.imul(ah6, bh8);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    lo = Math.imul(al5, bl9);\n    mid = Math.imul(al5, bh9);\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = Math.imul(ah5, bh9);\n    w14 = (w14 + lo) | 0;\n    w14 = (w14 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    var w15 = c;\n    c = 0;\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    lo = Math.imul(al8, bl7);\n    mid = Math.imul(al8, bh7);\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = Math.imul(ah8, bh7);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    lo = Math.imul(al7, bl8);\n    mid = Math.imul(al7, bh8);\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = Math.imul(ah7, bh8);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    lo = Math.imul(al6, bl9);\n    mid = Math.imul(al6, bh9);\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = Math.imul(ah6, bh9);\n    w15 = (w15 + lo) | 0;\n    w15 = (w15 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    var w16 = c;\n    c = 0;\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    w16 = (w16 + lo) | 0;\n    w16 = (w16 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    lo = Math.imul(al8, bl8);\n    mid = Math.imul(al8, bh8);\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = Math.imul(ah8, bh8);\n    w16 = (w16 + lo) | 0;\n    w16 = (w16 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    lo = Math.imul(al7, bl9);\n    mid = Math.imul(al7, bh9);\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = Math.imul(ah7, bh9);\n    w16 = (w16 + lo) | 0;\n    w16 = (w16 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    var w17 = c;\n    c = 0;\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    w17 = (w17 + lo) | 0;\n    w17 = (w17 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    lo = Math.imul(al8, bl9);\n    mid = Math.imul(al8, bh9);\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = Math.imul(ah8, bh9);\n    w17 = (w17 + lo) | 0;\n    w17 = (w17 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    var w18 = c;\n    c = 0;\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    w18 = (w18 + lo) | 0;\n    w18 = (w18 + ((mid & 0x1fff) << 13)) | 0;\n    c = (c + hi) | 0;\n    c = (c + (mid >>> 13)) | 0;\n    c = (c + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    // Bigger storage is needed\n    var len = num.length + shift;\n    var i;\n    if (this.words.length < len) {\n      var t = new Array(len);\n      for (i = 0; i < this.length; i++) {\n        t[i] = this.words[i];\n      }\n      this.words = t;\n    } else {\n      i = this.length;\n    }\n\n    // Zeroify rest\n    this.length = Math.max(this.length, len);\n    for (; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return { div: q || null, mod: a };\n  };\n\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.neg) {\n          mod = mod.add(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return { div: div, mod: res.mod };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.neg) {\n          mod = mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return { div: new BN(0), mod: this };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return { div: this.divn(num.words[0]), mod: null };\n      }\n\n      if (mode === 'mod') {\n        return { div: null, mod: new BN(this.modn(num.words[0])) };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      while (x.isEven()) {\n        x.iushrn(1);\n        if (A.isEven() && B.isEven()) {\n          A.iushrn(1);\n          B.iushrn(1);\n        } else {\n          A.iadd(yp).iushrn(1);\n          B.isub(xp).iushrn(1);\n        }\n      }\n\n      while (y.isEven()) {\n        y.iushrn(1);\n        if (C.isEven() && D.isEven()) {\n          C.iushrn(1);\n          D.iushrn(1);\n        } else {\n          C.iadd(yp).iushrn(1);\n          D.isub(xp).iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      while (a.isEven()) {\n        a.iushrn(1);\n        if (x1.isEven()) {\n          x1.iushrn(1);\n        } else {\n          x1.iadd(delta).iushrn(1);\n        }\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n        if (x2.isEven()) {\n          x2.iushrn(1);\n        } else {\n          x2.iadd(delta).iushrn(1);\n        }\n      }\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.clone();\n    if (num.isZero()) return this.clone();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      for (var i = this.length; i < s + 1; i++) {\n        this.words[i] = 0;\n      }\n      this.words[s] |= q;\n      this.length = s + 1;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) {\n      res = -res;\n    }\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res;\n\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.ushl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    input.words[i - 10] = prev >>> 22;\n    input.length -= 9;\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var hi;\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      hi = w * 0x40;\n      lo += w * 0x3d1;\n      hi += (lo / 0x4000000) | 0;\n      lo &= 0x3ffffff;\n\n      num.words[i] = lo;\n\n      lo = hi;\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    var r = a.clone();\n    r.negative ^= 1;\n    return r.iadd(this.m)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a);\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\nif (typeof window === 'object') {\n  if (window.crypto && window.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (window.msCrypto && window.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      window.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n  } else {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker\n  try {\n    var crypto = require('cry' + 'pto');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n    // Emulate crypto API using randy\n    Rand.prototype._rand = function _rand(n) {\n      var res = new Uint8Array(n);\n      for (var i = 0; i < res.length; i++)\n        res[i] = this.rand.getByte();\n      return res;\n    };\n  }\n}\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction scrub_vec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n  return false\n}\n\nfunction Global () {\n  this.SBOX = []\n  this.INV_SBOX = []\n  this.SUB_MIX = [[], [], [], []]\n  this.INV_SUB_MIX = [[], [], [], []]\n  this.init()\n  this.RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\n}\n\nGlobal.prototype.init = function () {\n  var d, i, sx, t, x, x2, x4, x8, xi, _i\n  d = (function () {\n    var _i, _results\n    _results = []\n    for (i = _i = 0; _i < 256; i = ++_i) {\n      if (i < 128) {\n        _results.push(i << 1)\n      } else {\n        _results.push((i << 1) ^ 0x11b)\n      }\n    }\n    return _results\n  })()\n  x = 0\n  xi = 0\n  for (i = _i = 0; _i < 256; i = ++_i) {\n    sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    this.SBOX[x] = sx\n    this.INV_SBOX[sx] = x\n    x2 = d[x]\n    x4 = d[x2]\n    x8 = d[x4]\n    t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    this.SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    this.SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    this.SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    this.SUB_MIX[3][x] = t\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    this.INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    this.INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    this.INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    this.INV_SUB_MIX[3][sx] = t\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n  return true\n}\n\nvar G = new Global()\n\nAES.blockSize = 4 * 4\n\nAES.prototype.blockSize = AES.blockSize\n\nAES.keySize = 256 / 8\n\nAES.prototype.keySize = AES.keySize\n\nfunction bufferToArray (buf) {\n  var len = buf.length / 4\n  var out = new Array(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n  return out\n}\nfunction AES (key) {\n  this._key = bufferToArray(key)\n  this._doReset()\n}\n\nAES.prototype._doReset = function () {\n  var invKsRow, keySize, keyWords, ksRow, ksRows, t\n  keyWords = this._key\n  keySize = keyWords.length\n  this._nRounds = keySize + 6\n  ksRows = (this._nRounds + 1) * 4\n  this._keySchedule = []\n  for (ksRow = 0; ksRow < ksRows; ksRow++) {\n    this._keySchedule[ksRow] = ksRow < keySize ? keyWords[ksRow] : (t = this._keySchedule[ksRow - 1], (ksRow % keySize) === 0 ? (t = (t << 8) | (t >>> 24), t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff], t ^= G.RCON[(ksRow / keySize) | 0] << 24) : keySize > 6 && ksRow % keySize === 4 ? t = (G.SBOX[t >>> 24] << 24) | (G.SBOX[(t >>> 16) & 0xff] << 16) | (G.SBOX[(t >>> 8) & 0xff] << 8) | G.SBOX[t & 0xff] : void 0, this._keySchedule[ksRow - keySize] ^ t)\n  }\n  this._invKeySchedule = []\n  for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n    ksRow = ksRows - invKsRow\n    t = this._keySchedule[ksRow - (invKsRow % 4 ? 0 : 4)]\n    this._invKeySchedule[invKsRow] = invKsRow < 4 || ksRow <= 4 ? t : G.INV_SUB_MIX[0][G.SBOX[t >>> 24]] ^ G.INV_SUB_MIX[1][G.SBOX[(t >>> 16) & 0xff]] ^ G.INV_SUB_MIX[2][G.SBOX[(t >>> 8) & 0xff]] ^ G.INV_SUB_MIX[3][G.SBOX[t & 0xff]]\n  }\n  return true\n}\n\nAES.prototype.encryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var out = this._doCryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = bufferToArray(new Buffer(M))\n  var temp = [M[3], M[1]]\n  M[1] = temp[0]\n  M[3] = temp[1]\n  var out = this._doCryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrub_vec(this._keySchedule)\n  scrub_vec(this._invKeySchedule)\n  scrub_vec(this._key)\n}\n\nAES.prototype._doCryptBlock = function (M, keySchedule, SUB_MIX, SBOX) {\n  var ksRow, s0, s1, s2, s3, t0, t1, t2, t3\n\n  s0 = M[0] ^ keySchedule[0]\n  s1 = M[1] ^ keySchedule[1]\n  s2 = M[2] ^ keySchedule[2]\n  s3 = M[3] ^ keySchedule[3]\n  ksRow = 4\n  for (var round = 1; round < this._nRounds; round++) {\n    t0 = SUB_MIX[0][s0 >>> 24] ^ SUB_MIX[1][(s1 >>> 16) & 0xff] ^ SUB_MIX[2][(s2 >>> 8) & 0xff] ^ SUB_MIX[3][s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX[0][s1 >>> 24] ^ SUB_MIX[1][(s2 >>> 16) & 0xff] ^ SUB_MIX[2][(s3 >>> 8) & 0xff] ^ SUB_MIX[3][s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX[0][s2 >>> 24] ^ SUB_MIX[1][(s3 >>> 16) & 0xff] ^ SUB_MIX[2][(s0 >>> 8) & 0xff] ^ SUB_MIX[3][s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX[0][s3 >>> 24] ^ SUB_MIX[1][(s0 >>> 16) & 0xff] ^ SUB_MIX[2][(s1 >>> 8) & 0xff] ^ SUB_MIX[3][s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  return [\n    fixup_uint32(t0),\n    fixup_uint32(t1),\n    fixup_uint32(t2),\n    fixup_uint32(t3)\n  ]\n}\n\nexports.AES = AES\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\ninherits(StreamCipher, Transform)\nmodule.exports = StreamCipher\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  if (!(this instanceof StreamCipher)) {\n    return new StreamCipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._finID = Buffer.concat([iv, new Buffer([0, 0, 0, 1])])\n  iv = Buffer.concat([iv, new Buffer([0, 0, 0, 2])])\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  this._cache = new Buffer('')\n  this._secCache = new Buffer('')\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  iv.copy(this._prev)\n  this._mode = mode\n  var h = new Buffer(4)\n  h.fill(0)\n  this._ghash = new GHASH(this._cipher.encryptBlock(h))\n  this._authTag = null\n  this._called = false\n}\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = new Buffer(rump)\n      rump.fill(0)\n      this._ghash.update(rump)\n    }\n  }\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) {\n    throw new Error('Unsupported state or unable to authenticate data')\n  }\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt) {\n    if (xorTest(tag, this._authTag)) {\n      throw new Error('Unsupported state or unable to authenticate data')\n    }\n  } else {\n    this._authTag = tag\n  }\n  this._cipher.scrub()\n}\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (!this._decrypt && Buffer.isBuffer(this._authTag)) {\n    return this._authTag\n  } else {\n    throw new Error('Attempting to get auth tag in unsupported state')\n  }\n}\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (this._decrypt) {\n    this._authTag = tag\n  } else {\n    throw new Error('Attempting to set auth tag in unsupported state')\n  }\n}\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (!this._called) {\n    this._ghash.update(buf)\n    this._alen += buf.length\n  } else {\n    throw new Error('Attempting to set AAD in unsupported state')\n  }\n}\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) {\n    out++\n  }\n  var len = Math.min(a.length, b.length)\n  var i = -1\n  while (++i < len) {\n    out += (a[i] ^ b[i])\n  }\n  return out\n}\n","var ciphers = require('./encrypter')\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nvar deciphers = require('./decrypter')\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nvar modes = require('./modes')\nfunction getCiphers () {\n  return Object.keys(modes)\n}\nexports.listCiphers = exports.getCiphers = getCiphers\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar modes = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar AuthCipher = require('./authCipher')\nvar ebtk = require('evp_bytestokey')\n\ninherits(Decipher, Transform)\nfunction Decipher (mode, key, iv) {\n  if (!(this instanceof Decipher)) {\n    return new Decipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  iv.copy(this._prev)\n  this._mode = mode\n  this._autopadding = true\n}\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n}\nfunction Splitter () {\n  if (!(this instanceof Splitter)) {\n    return new Splitter()\n  }\n  this.cache = new Buffer('')\n}\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n  return null\n}\nSplitter.prototype.flush = function () {\n  if (this.cache.length) {\n    return this.cache\n  }\n}\nfunction unpad (last) {\n  var padded = last[15]\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) {\n    return\n  }\n  return last.slice(0, 16 - padded)\n}\n\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv)\n  }\n  if (typeof password === 'string') {\n    password = new Buffer(password)\n  }\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length)\n  }\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length)\n  }\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv, true)\n  }\n  return new Decipher(modelist[config.mode], password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar modes = require('./modes')\nvar ebtk = require('evp_bytestokey')\nvar StreamCipher = require('./streamCipher')\nvar AuthCipher = require('./authCipher')\ninherits(Cipher, Transform)\nfunction Cipher (mode, key, iv) {\n  if (!(this instanceof Cipher)) {\n    return new Cipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  iv.copy(this._prev)\n  this._mode = mode\n  this._autopadding = true\n}\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  } else if (chunk.toString('hex') !== '10101010101010101010101010101010') {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n}\n\nfunction Splitter () {\n  if (!(this instanceof Splitter)) {\n    return new Splitter()\n  }\n  this.cache = new Buffer('')\n}\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = new Buffer(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n  var out = Buffer.concat([this.cache, padBuff])\n  return out\n}\nvar modelist = {\n  ECB: require('./modes/ecb'),\n  CBC: require('./modes/cbc'),\n  CFB: require('./modes/cfb'),\n  CFB8: require('./modes/cfb8'),\n  CFB1: require('./modes/cfb1'),\n  OFB: require('./modes/ofb'),\n  CTR: require('./modes/ctr'),\n  GCM: require('./modes/ctr')\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  if (typeof iv === 'string') {\n    iv = new Buffer(iv)\n  }\n  if (typeof password === 'string') {\n    password = new Buffer(password)\n  }\n  if (password.length !== config.key / 8) {\n    throw new TypeError('invalid key length ' + password.length)\n  }\n  if (iv.length !== config.iv) {\n    throw new TypeError('invalid iv length ' + iv.length)\n  }\n  if (config.type === 'stream') {\n    return new StreamCipher(modelist[config.mode], password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(modelist[config.mode], password, iv)\n  }\n  return new Cipher(modelist[config.mode], password, iv)\n}\nfunction createCipher (suite, password) {\n  var config = modes[suite.toLowerCase()]\n  if (!config) {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var zeros = new Buffer(16)\nzeros.fill(0)\nmodule.exports = GHASH\nfunction GHASH (key) {\n  this.h = key\n  this.state = new Buffer(16)\n  this.state.fill(0)\n  this.cache = new Buffer('')\n}\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsb_Vi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - i % 8))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi = xor(Zi, Vi)\n    }\n\n    // Store the value of LSB(V_i)\n    lsb_Vi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsb_Vi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, zeros], 16))\n  }\n  this.ghash(fromArray([\n    0, abl,\n    0, bl\n  ]))\n  return this.state\n}\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\nfunction fromArray (out) {\n  out = out.map(fixup_uint32)\n  var buf = new Buffer(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\nvar uint_max = Math.pow(2, 32)\nfunction fixup_uint32 (x) {\n  var ret, x_pos\n  ret = x > uint_max || x < 0 ? (x_pos = Math.abs(x) % uint_max, x < 0 ? uint_max - x_pos : x_pos) : x\n  return ret\n}\nfunction xor (a, b) {\n  return [\n    a[0] ^ b[0],\n    a[1] ^ b[1],\n    a[2] ^ b[2],\n    a[3] ^ b[3]\n  ]\n}\n","exports['aes-128-ecb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-192-ecb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-256-ecb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 0,\n  mode: 'ECB',\n  type: 'block'\n}\nexports['aes-128-cbc'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes-192-cbc'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes-256-cbc'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CBC',\n  type: 'block'\n}\nexports['aes128'] = exports['aes-128-cbc']\nexports['aes192'] = exports['aes-192-cbc']\nexports['aes256'] = exports['aes-256-cbc']\nexports['aes-128-cfb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-192-cfb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-256-cfb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB',\n  type: 'stream'\n}\nexports['aes-128-cfb8'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-192-cfb8'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-256-cfb8'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB8',\n  type: 'stream'\n}\nexports['aes-128-cfb1'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-192-cfb1'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-256-cfb1'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CFB1',\n  type: 'stream'\n}\nexports['aes-128-ofb'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-192-ofb'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-256-ofb'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'OFB',\n  type: 'stream'\n}\nexports['aes-128-ctr'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-192-ctr'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-256-ctr'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 16,\n  mode: 'CTR',\n  type: 'stream'\n}\nexports['aes-128-gcm'] = {\n  cipher: 'AES',\n  key: 128,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\nexports['aes-192-gcm'] = {\n  cipher: 'AES',\n  key: 192,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\nexports['aes-256-gcm'] = {\n  cipher: 'AES',\n  key: 256,\n  iv: 12,\n  mode: 'GCM',\n  type: 'auth'\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = new Buffer('')\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = new Buffer('')\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n","function encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = new Buffer(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n  return out\n}\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = new Buffer(buffer.length)\n  buffer = Buffer.concat([buffer, new Buffer([value])])\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n  return out\n}\n","function encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n  self._prev = Buffer.concat([self._prev.slice(1), new Buffer([decrypt ? byteParam : out])])\n  return out\n}\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = new Buffer(len)\n  var i = -1\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlock(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var aes = require('./aes')\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\ninherits(StreamCipher, Transform)\nmodule.exports = StreamCipher\nfunction StreamCipher (mode, key, iv, decrypt) {\n  if (!(this instanceof StreamCipher)) {\n    return new StreamCipher(mode, key, iv)\n  }\n  Transform.call(this)\n  this._cipher = new aes.AES(key)\n  this._prev = new Buffer(iv.length)\n  this._cache = new Buffer('')\n  this._secCache = new Buffer('')\n  this._decrypt = decrypt\n  iv.copy(this._prev)\n  this._mode = mode\n}\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n","var ebtk = require('evp_bytestokey')\nvar aes = require('browserify-aes/browser')\nvar DES = require('browserify-des')\nvar desModes = require('browserify-des/modes')\nvar aesModes = require('browserify-aes/modes')\nfunction createCipher (suite, password) {\n  var keyLen, ivLen\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\nfunction createDecipher (suite, password) {\n  var keyLen, ivLen\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    return aes.createCipheriv(suite, key, iv)\n  } else if (desModes[suite]) {\n    return new DES({\n      key: key,\n      iv: iv,\n      mode: suite\n    })\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n}\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) {\n    return aes.createDecipheriv(suite, key, iv)\n  } else if (desModes[suite]) {\n    return new DES({\n      key: key,\n      iv: iv,\n      mode: suite,\n      decrypt: true\n    })\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n}\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\nexports.listCiphers = exports.getCiphers = getCiphers\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return new Buffer(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return new Buffer(this._des.final())\n}\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n","'use strict'\nexports['RSA-SHA224'] = exports.sha224WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha224',\n  id: new Buffer('302d300d06096086480165030402040500041c', 'hex')\n}\nexports['RSA-SHA256'] = exports.sha256WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha256',\n  id: new Buffer('3031300d060960864801650304020105000420', 'hex')\n}\nexports['RSA-SHA384'] = exports.sha384WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha384',\n  id: new Buffer('3041300d060960864801650304020205000430', 'hex')\n}\nexports['RSA-SHA512'] = exports.sha512WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'sha512',\n  id: new Buffer('3051300d060960864801650304020305000440', 'hex')\n}\nexports['RSA-SHA1'] = {\n  sign: 'rsa',\n  hash: 'sha1',\n  id: new Buffer('3021300906052b0e03021a05000414', 'hex')\n}\nexports['ecdsa-with-SHA1'] = {\n  sign: 'ecdsa',\n  hash: 'sha1',\n  id: new Buffer('', 'hex')\n}\n\nexports.DSA = exports['DSA-SHA1'] = exports['DSA-SHA'] = {\n  sign: 'dsa',\n  hash: 'sha1',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA224'] = exports['DSA-WITH-SHA224'] = {\n  sign: 'dsa',\n  hash: 'sha224',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA256'] = exports['DSA-WITH-SHA256'] = {\n  sign: 'dsa',\n  hash: 'sha256',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA384'] = exports['DSA-WITH-SHA384'] = {\n  sign: 'dsa',\n  hash: 'sha384',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-SHA512'] = exports['DSA-WITH-SHA512'] = {\n  sign: 'dsa',\n  hash: 'sha512',\n  id: new Buffer('', 'hex')\n}\nexports['DSA-RIPEMD160'] = {\n  sign: 'dsa',\n  hash: 'rmd160',\n  id: new Buffer('', 'hex')\n}\nexports['RSA-RIPEMD160'] = exports.ripemd160WithRSA = {\n  sign: 'rsa',\n  hash: 'rmd160',\n  id: new Buffer('3021300906052b2403020105000414', 'hex')\n}\nexports['RSA-MD5'] = exports.md5WithRSAEncryption = {\n  sign: 'rsa',\n  hash: 'md5',\n  id: new Buffer('3020300c06082a864886f70d020505000410', 'hex')\n}\n","var _algos = require('./algos')\nvar createHash = require('create-hash')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar stream = require('stream')\nvar verify = require('./verify')\n\nvar algos = {}\nObject.keys(_algos).forEach(function (key) {\n  algos[key] = algos[key.toLowerCase()] = _algos[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algos[algorithm]\n  if (!data) {\n    throw new Error('Unknown message digest')\n  }\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') {\n    data = new Buffer(data, enc)\n  }\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(Buffer.concat([this._tag, hash]), key, this._hashType, this._signType)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algos[algorithm]\n  if (!data) {\n    throw new Error('Unknown message digest')\n  }\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') {\n    data = new Buffer(data, enc)\n  }\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') {\n    sig = new Buffer(sig, enc)\n  }\n\n  this.end()\n  var hash = this._hash.digest()\n\n  return verify(sig, Buffer.concat([this._tag, hash]), key, this._signType)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n","'use strict'\nexports['1.3.132.0.10'] = 'secp256k1'\n\nexports['1.3.132.0.33'] = 'p224'\n\nexports['1.2.840.10045.3.1.1'] = 'p192'\n\nexports['1.2.840.10045.3.1.7'] = 'p256'\n\nexports['1.3.132.0.34'] = 'p384'\n\nexports['1.3.132.0.35'] = 'p521'\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar curves = require('./curves')\nvar elliptic = require('elliptic')\nvar parseKeys = require('parse-asn1')\n\nvar BN = require('bn.js')\nvar EC = elliptic.ec\n\nfunction sign (hash, key, hashType, signType) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    if (signType !== 'ecdsa') throw new Error('wrong private key type')\n\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') {\n      throw new Error('wrong private key type')\n    }\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa') throw new Error('wrong private key type')\n  }\n\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) {\n    pad.push(0xff)\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.genKeyPair()\n\n  key._importPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (!s.cmpn(0)) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) {\n    r = [ 0 ].concat(r)\n  }\n  // Pad values\n  if (s[0] & 0x80) {\n    s = [0].concat(s)\n  }\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([zeros, x])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k)\n    .update(v)\n    .update(new Buffer([0]))\n    .update(x)\n    .update(hbits)\n    .digest()\n  v = createHmac(algo, k)\n    .update(v)\n    .digest()\n  k = createHmac(algo, k)\n    .update(v)\n    .update(new Buffer([1]))\n    .update(x)\n    .update(hbits)\n    .digest()\n  v = createHmac(algo, k)\n    .update(v)\n    .digest()\n  return {\n    k: k,\n    v: v\n  }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) {\n    bits.ishrn(shift)\n  }\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([zeros, out])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t, k\n\n  do {\n    t = new Buffer('')\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k)\n        .update(kv.v)\n        .digest()\n      t = Buffer.concat([t, kv.v])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k)\n      .update(kv.v)\n      .update(new Buffer([0]))\n      .digest()\n    kv.v = createHmac(algo, kv.k)\n      .update(kv.v)\n      .digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar curves = require('./curves')\nvar elliptic = require('elliptic')\nvar parseKeys = require('parse-asn1')\n\nvar BN = require('bn.js')\nvar EC = elliptic.ec\n\nfunction verify (sig, hash, key, signType) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    if (signType !== 'ecdsa') {\n      throw new Error('wrong public key type')\n    }\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') {\n      throw new Error('wrong public key type')\n    }\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa') {\n      throw new Error('wrong public key type')\n    }\n  }\n  var len = pub.modulus.byteLength()\n  var pad = [ 1 ]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = new Buffer(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n\n  sig = new Buffer(sig.fromRed().toArray())\n  var out = 0\n  if (padNum < 8) {\n    out = 1\n  }\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) {\n    out = 1\n  }\n\n  i = -1\n  while (++i < len) {\n    out |= (sig[i] ^ pad[i])\n  }\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(\n      y.toRed(montp)\n        .redPow(r.mul(w).mod(q))\n        .fromRed()\n  ).mod(p).mod(q)\n  return !v.cmp(r)\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) {\n    throw new Error('invalid sig')\n  }\n  if (b.cmp(q) >= q) {\n    throw new Error('invalid sig')\n  }\n}\n\nmodule.exports = verify\n","var msg = require('pako/lib/zlib/messages');\nvar zstream = require('pako/lib/zlib/zstream');\nvar zlib_deflate = require('pako/lib/zlib/deflate.js');\nvar zlib_inflate = require('pako/lib/zlib/inflate.js');\nvar constants = require('pako/lib/zlib/constants');\n\nfor (var key in constants) {\n  exports[key] = constants[key];\n}\n\n// zlib modes\nexports.NONE = 0;\nexports.DEFLATE = 1;\nexports.INFLATE = 2;\nexports.GZIP = 3;\nexports.GUNZIP = 4;\nexports.DEFLATERAW = 5;\nexports.INFLATERAW = 6;\nexports.UNZIP = 7;\n\n/**\n * Emulate Node's zlib C++ layer for use by the JS layer in index.js\n */\nfunction Zlib(mode) {\n  if (mode < exports.DEFLATE || mode > exports.UNZIP)\n    throw new TypeError(\"Bad argument\");\n    \n  this.mode = mode;\n  this.init_done = false;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.windowBits = 0;\n  this.level = 0;\n  this.memLevel = 0;\n  this.strategy = 0;\n  this.dictionary = null;\n}\n\nZlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {\n  this.windowBits = windowBits;\n  this.level = level;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n  // dictionary not supported.\n  \n  if (this.mode === exports.GZIP || this.mode === exports.GUNZIP)\n    this.windowBits += 16;\n    \n  if (this.mode === exports.UNZIP)\n    this.windowBits += 32;\n    \n  if (this.mode === exports.DEFLATERAW || this.mode === exports.INFLATERAW)\n    this.windowBits = -this.windowBits;\n    \n  this.strm = new zstream();\n  \n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateInit2(\n        this.strm,\n        this.level,\n        exports.Z_DEFLATED,\n        this.windowBits,\n        this.memLevel,\n        this.strategy\n      );\n      break;\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n    case exports.UNZIP:\n      var status  = zlib_inflate.inflateInit2(\n        this.strm,\n        this.windowBits\n      );\n      break;\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n  \n  if (status !== exports.Z_OK) {\n    this._error(status);\n    return;\n  }\n  \n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype.params = function() {\n  throw new Error(\"deflateParams Not supported\");\n};\n\nZlib.prototype._writeCheck = function() {\n  if (!this.init_done)\n    throw new Error(\"write before init\");\n    \n  if (this.mode === exports.NONE)\n    throw new Error(\"already finalized\");\n    \n  if (this.write_in_progress)\n    throw new Error(\"write already in progress\");\n    \n  if (this.pending_close)\n    throw new Error(\"close is pending\");\n};\n\nZlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {    \n  this._writeCheck();\n  this.write_in_progress = true;\n  \n  var self = this;\n  process.nextTick(function() {\n    self.write_in_progress = false;\n    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);\n    self.callback(res[0], res[1]);\n    \n    if (self.pending_close)\n      self.close();\n  });\n  \n  return this;\n};\n\n// set method for Node buffers, used by pako\nfunction bufferSet(data, offset) {\n  for (var i = 0; i < data.length; i++) {\n    this[offset + i] = data[i];\n  }\n}\n\nZlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this._writeCheck();\n  return this._write(flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this.write_in_progress = true;\n  \n  if (flush !== exports.Z_NO_FLUSH &&\n      flush !== exports.Z_PARTIAL_FLUSH &&\n      flush !== exports.Z_SYNC_FLUSH &&\n      flush !== exports.Z_FULL_FLUSH &&\n      flush !== exports.Z_FINISH &&\n      flush !== exports.Z_BLOCK) {\n    throw new Error(\"Invalid flush value\");\n  }\n  \n  if (input == null) {\n    input = new Buffer(0);\n    in_len = 0;\n    in_off = 0;\n  }\n  \n  if (out._set)\n    out.set = out._set;\n  else\n    out.set = bufferSet;\n  \n  var strm = this.strm;\n  strm.avail_in = in_len;\n  strm.input = input;\n  strm.next_in = in_off;\n  strm.avail_out = out_len;\n  strm.output = out;\n  strm.next_out = out_off;\n  \n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.GZIP:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflate(strm, flush);\n      break;\n    case exports.UNZIP:\n    case exports.INFLATE:\n    case exports.GUNZIP:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflate(strm, flush);\n      break;\n    default:\n      throw new Error(\"Unknown mode \" + this.mode);\n  }\n  \n  if (status !== exports.Z_STREAM_END && status !== exports.Z_OK) {\n    this._error(status);\n  }\n  \n  this.write_in_progress = false;\n  return [strm.avail_in, strm.avail_out];\n};\n\nZlib.prototype.close = function() {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n  \n  this.pending_close = false;\n  \n  if (this.mode === exports.DEFLATE || this.mode === exports.GZIP || this.mode === exports.DEFLATERAW) {\n    zlib_deflate.deflateEnd(this.strm);\n  } else {\n    zlib_inflate.inflateEnd(this.strm);\n  }\n  \n  this.mode = exports.NONE;\n};\n\nZlib.prototype.reset = function() {\n  switch (this.mode) {\n    case exports.DEFLATE:\n    case exports.DEFLATERAW:\n      var status = zlib_deflate.deflateReset(this.strm);\n      break;\n    case exports.INFLATE:\n    case exports.INFLATERAW:\n      var status = zlib_inflate.inflateReset(this.strm);\n      break;\n  }\n  \n  if (status !== exports.Z_OK) {\n    this._error(status);\n  }\n};\n\nZlib.prototype._error = function(status) {\n  this.onerror(msg[status] + ': ' + this.strm.msg, status);\n  \n  this.write_in_progress = false;\n  if (this.pending_close)\n    this.close();\n};\n\nexports.Zlib = Zlib;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Transform = require('_stream_transform');\n\nvar binding = require('./binding');\nvar util = require('util');\nvar assert = require('assert').ok;\n\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = (16 * 1024);\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n// expose all the zlib constants\nObject.keys(binding).forEach(function(k) {\n  if (k.match(/^Z/)) exports[k] = binding[k];\n});\n\n// translation table for return codes.\nexports.codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nObject.keys(exports.codes).forEach(function(k) {\n  exports.codes[exports.codes[k]] = k;\n});\n\nexports.Deflate = Deflate;\nexports.Inflate = Inflate;\nexports.Gzip = Gzip;\nexports.Gunzip = Gunzip;\nexports.DeflateRaw = DeflateRaw;\nexports.InflateRaw = InflateRaw;\nexports.Unzip = Unzip;\n\nexports.createDeflate = function(o) {\n  return new Deflate(o);\n};\n\nexports.createInflate = function(o) {\n  return new Inflate(o);\n};\n\nexports.createDeflateRaw = function(o) {\n  return new DeflateRaw(o);\n};\n\nexports.createInflateRaw = function(o) {\n  return new InflateRaw(o);\n};\n\nexports.createGzip = function(o) {\n  return new Gzip(o);\n};\n\nexports.createGunzip = function(o) {\n  return new Gunzip(o);\n};\n\nexports.createUnzip = function(o) {\n  return new Unzip(o);\n};\n\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexports.deflate = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n};\n\nexports.deflateSync = function(buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n};\n\nexports.gzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n};\n\nexports.gzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n};\n\nexports.deflateRaw = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n};\n\nexports.deflateRawSync = function(buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n};\n\nexports.unzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n};\n\nexports.unzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n};\n\nexports.inflate = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n};\n\nexports.inflateSync = function(buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n};\n\nexports.gunzip = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n};\n\nexports.gunzipSync = function(buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n};\n\nexports.inflateRaw = function(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n};\n\nexports.inflateRawSync = function(buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n};\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf = Buffer.concat(buffers, nread);\n    buffers = [];\n    callback(null, buf);\n    engine.close();\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string')\n    buffer = new Buffer(buffer);\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('Not a string or buffer');\n\n  var flushFlag = binding.Z_FINISH;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nfunction Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nfunction Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n\n\n// gzip - bigger header, same deflate compression\nfunction Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nfunction Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n\n\n// raw - no header\nfunction DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nfunction InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n\n// auto-detect header.\nfunction Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nfunction Zlib(opts, mode) {\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || exports.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush) {\n    if (opts.flush !== binding.Z_NO_FLUSH &&\n        opts.flush !== binding.Z_PARTIAL_FLUSH &&\n        opts.flush !== binding.Z_SYNC_FLUSH &&\n        opts.flush !== binding.Z_FULL_FLUSH &&\n        opts.flush !== binding.Z_FINISH &&\n        opts.flush !== binding.Z_BLOCK) {\n      throw new Error('Invalid flush flag: ' + opts.flush);\n    }\n  }\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < exports.Z_MIN_CHUNK ||\n        opts.chunkSize > exports.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < exports.Z_MIN_WINDOWBITS ||\n        opts.windowBits > exports.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < exports.Z_MIN_LEVEL ||\n        opts.level > exports.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < exports.Z_MIN_MEMLEVEL ||\n        opts.memLevel > exports.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != exports.Z_FILTERED &&\n        opts.strategy != exports.Z_HUFFMAN_ONLY &&\n        opts.strategy != exports.Z_RLE &&\n        opts.strategy != exports.Z_FIXED &&\n        opts.strategy != exports.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._binding = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._binding.onerror = function(message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    self._binding = null;\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = exports.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = exports.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = exports.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._binding.init(opts.windowBits || exports.Z_DEFAULT_WINDOWBITS,\n                     level,\n                     opts.memLevel || exports.Z_DEFAULT_MEMLEVEL,\n                     strategy,\n                     opts.dictionary);\n\n  this._buffer = new Buffer(this._chunkSize);\n  this._offset = 0;\n  this._closed = false;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n}\n\nutil.inherits(Zlib, Transform);\n\nZlib.prototype.params = function(level, strategy, callback) {\n  if (level < exports.Z_MIN_LEVEL ||\n      level > exports.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != exports.Z_FILTERED &&\n      strategy != exports.Z_HUFFMAN_ONLY &&\n      strategy != exports.Z_RLE &&\n      strategy != exports.Z_FIXED &&\n      strategy != exports.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function() {\n      self._binding.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function() {\n  return this._binding.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function(callback) {\n  this._transform(new Buffer(0), '', callback);\n};\n\nZlib.prototype.flush = function(kind, callback) {\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || (kind === void 0 && !callback)) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback)\n      this.once('end', callback);\n  } else if (ws.needDrain) {\n    var self = this;\n    this.once('drain', function() {\n      self.flush(callback);\n    });\n  } else {\n    this._flushFlag = kind;\n    this.write(new Buffer(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function(callback) {\n  if (callback)\n    process.nextTick(callback);\n\n  if (this._closed)\n    return;\n\n  this._closed = true;\n\n  this._binding.close();\n\n  var self = this;\n  process.nextTick(function() {\n    self.emit('close');\n  });\n};\n\nZlib.prototype._transform = function(chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (!chunk === null && !Buffer.isBuffer(chunk))\n    return cb(new Error('invalid input'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last)\n    flushFlag = binding.Z_FINISH;\n  else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  var self = this;\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function(chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function(er) {\n      error = er;\n    });\n\n    do {\n      var res = this._binding.writeSync(flushFlag,\n                                        chunk, // in\n                                        inOff, // in_off\n                                        availInBefore, // in_len\n                                        this._buffer, // out\n                                        this._offset, //out_off\n                                        availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    this.close();\n\n    return buf;\n  }\n\n  var req = this._binding.write(flushFlag,\n                                chunk, // in\n                                inOff, // in_off\n                                availInBefore, // in_len\n                                this._buffer, // out\n                                this._offset, //out_off\n                                availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    if (self._hadError)\n      return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = new Buffer(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += (availInBefore - availInAfter);\n      availInBefore = availInAfter;\n\n      if (!async)\n        return true;\n\n      var newReq = self._binding.write(flushFlag,\n                                       chunk,\n                                       inOff,\n                                       availInBefore,\n                                       self._buffer,\n                                       self._offset,\n                                       self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async)\n      return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\nutil.inherits(Deflate, Zlib);\nutil.inherits(Inflate, Zlib);\nutil.inherits(Gzip, Zlib);\nutil.inherits(Gunzip, Zlib);\nutil.inherits(DeflateRaw, Zlib);\nutil.inherits(InflateRaw, Zlib);\nutil.inherits(Unzip, Zlib);\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Moved Temporarily\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Time-out\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Request Entity Too Large\",\n  \"414\": \"Request-URI Too Large\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Requested Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a teapot\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Unordered Collection\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Time-out\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n}\n","var Transform = require('stream').Transform\nvar inherits = require('inherits')\nvar StringDecoder = require('string_decoder').StringDecoder\nmodule.exports = CipherBase\ninherits(CipherBase, Transform)\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  this._decoder = null\n  this._encoding = null\n}\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = new Buffer(data, inputEnc)\n  }\n  var outData = this._update(data)\n  if (this.hashMode) {\n    return this\n  }\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\n\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this._final())\n  } catch (e) {\n    err = e\n  } finally {\n    done(err)\n  }\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this._final() || new Buffer('')\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, final) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n  if (this._encoding !== enc) {\n    throw new Error('can\\'t switch encodings')\n  }\n  var out = this._decoder.write(value)\n  if (final) {\n    out += this._decoder.end()\n  }\n  return out\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","var elliptic = require('elliptic');\nvar BN = require('bn.js');\n\nmodule.exports = function createECDH(curve) {\n\treturn new ECDH(curve);\n};\n\nvar aliases = {\n\tsecp256k1: {\n\t\tname: 'secp256k1',\n\t\tbyteLength: 32\n\t},\n\tsecp224r1: {\n\t\tname: 'p224',\n\t\tbyteLength: 28\n\t},\n\tprime256v1: {\n\t\tname: 'p256',\n\t\tbyteLength: 32\n\t},\n\tprime192v1: {\n\t\tname: 'p192',\n\t\tbyteLength: 24\n\t},\n\ted25519: {\n\t\tname: 'ed25519',\n\t\tbyteLength: 32\n\t},\n\tsecp384r1: {\n\t\tname: 'p384',\n\t\tbyteLength: 48\n\t},\n\tsecp521r1: {\n\t\tname: 'p521',\n\t\tbyteLength: 66\n\t}\n};\n\naliases.p224 = aliases.secp224r1;\naliases.p256 = aliases.secp256r1 = aliases.prime256v1;\naliases.p192 = aliases.secp192r1 = aliases.prime192v1;\naliases.p384 = aliases.secp384r1;\naliases.p521 = aliases.secp521r1;\n\nfunction ECDH(curve) {\n\tthis.curveType = aliases[curve];\n\tif (!this.curveType ) {\n\t\tthis.curveType = {\n\t\t\tname: curve\n\t\t};\n\t}\n\tthis.curve = new elliptic.ec(this.curveType.name);\n\tthis.keys = void 0;\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n\tthis.keys = this.curve.genKeyPair();\n\treturn this.getPublicKey(enc, format);\n};\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n\tinenc = inenc || 'utf8';\n\tif (!Buffer.isBuffer(other)) {\n\t\tother = new Buffer(other, inenc);\n\t}\n\tvar otherPub = this.curve.keyFromPublic(other).getPublic();\n\tvar out = otherPub.mul(this.keys.getPrivate()).getX();\n\treturn formatReturnValue(out, enc, this.curveType.byteLength);\n};\n\nECDH.prototype.getPublicKey = function (enc, format) {\n\tvar key = this.keys.getPublic(format === 'compressed', true);\n\tif (format === 'hybrid') {\n\t\tif (key[key.length - 1] % 2) {\n\t\t\tkey[0] = 7;\n\t\t} else {\n\t\t\tkey [0] = 6;\n\t\t}\n\t}\n\treturn formatReturnValue(key, enc);\n};\n\nECDH.prototype.getPrivateKey = function (enc) {\n\treturn formatReturnValue(this.keys.getPrivate(), enc);\n};\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n\tenc = enc || 'utf8';\n\tif (!Buffer.isBuffer(pub)) {\n\t\tpub = new Buffer(pub, enc);\n\t}\n\tthis.keys._importPublic(pub);\n\treturn this;\n};\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n\tenc = enc || 'utf8';\n\tif (!Buffer.isBuffer(priv)) {\n\t\tpriv = new Buffer(priv, enc);\n\t}\n\tvar _priv = new BN(priv);\n\t_priv = _priv.toString(16);\n\tthis.keys._importPrivate(_priv);\n\treturn this;\n};\n\nfunction formatReturnValue(bn, enc, len) {\n\tif (!Array.isArray(bn)) {\n\t\tbn = bn.toArray();\n\t}\n\tvar buf = new Buffer(bn);\n\tif (len && buf.length < len) {\n\t\tvar zeros = new Buffer(len - buf.length);\n\t\tzeros.fill(0);\n\t\tbuf = Buffer.concat([zeros, buf]);\n\t}\n\tif (!enc) {\n\t\treturn buf;\n\t} else {\n\t\treturn buf.toString(enc);\n\t}\n}\n","'use strict';\nvar inherits = require('inherits')\nvar md5 = require('./md5')\nvar rmd160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar Base = require('cipher-base')\n\nfunction HashNoConstructor(hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n  this.buffers = []\n}\n\ninherits(HashNoConstructor, Base)\n\nHashNoConstructor.prototype._update = function (data) {\n  this.buffers.push(data)\n}\n\nHashNoConstructor.prototype._final = function () {\n  var buf = Buffer.concat(this.buffers)\n  var r = this._hash(buf)\n  this.buffers = null\n\n  return r\n}\n\nfunction Hash(hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if ('md5' === alg) return new HashNoConstructor(md5)\n  if ('rmd160' === alg || 'ripemd160' === alg) return new HashNoConstructor(rmd160)\n\n  return new Hash(sha(alg))\n}\n","'use strict';\nvar intSize = 4;\nvar zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);\nvar chrsz = 8;\n\nfunction toArray(buf, bigEndian) {\n  if ((buf.length % intSize) !== 0) {\n    var len = buf.length + (intSize - (buf.length % intSize));\n    buf = Buffer.concat([buf, zeroBuffer], len);\n  }\n\n  var arr = [];\n  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;\n  for (var i = 0; i < buf.length; i += intSize) {\n    arr.push(fn.call(buf, i));\n  }\n  return arr;\n}\n\nfunction toBuffer(arr, size, bigEndian) {\n  var buf = new Buffer(size);\n  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;\n  for (var i = 0; i < arr.length; i++) {\n    fn.call(buf, arr[i], i * 4, true);\n  }\n  return buf;\n}\n\nfunction hash(buf, fn, hashSize, bigEndian) {\n  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);\n  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);\n  return toBuffer(arr, hashSize, bigEndian);\n}\nexports.hash = hash;","'use strict';\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\nvar helpers = require('./helpers');\n\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length\n */\nfunction core_md5(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << ((len) % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n\n  for(var i = 0; i < x.length; i += 16)\n  {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n\n    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n  }\n  return Array(a, b, c, d);\n\n}\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nfunction md5_cmn(q, a, b, x, s, t)\n{\n  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);\n}\nfunction md5_ff(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\nfunction md5_gg(a, b, c, d, x, s, t)\n{\n  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\nfunction md5_hh(a, b, c, d, x, s, t)\n{\n  return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5_ii(a, b, c, d, x, s, t)\n{\n  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction bit_rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\nmodule.exports = function md5(buf) {\n  return helpers.hash(buf, core_md5, 16);\n};","'use strict';\nvar createHash = require('create-hash/browser');\nvar inherits = require('inherits')\n\nvar Transform = require('stream').Transform\n\nvar ZEROS = new Buffer(128)\nZEROS.fill(0)\n\nfunction Hmac(alg, key) {\n  Transform.call(this)\n  alg = alg.toLowerCase()\n  if (typeof key === 'string') {\n    key = new Buffer(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = createHash(alg).update(key).digest()\n\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = new Buffer(blocksize)\n  var opad = this._opad = new Buffer(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = createHash(alg).update(ipad)\n}\n\ninherits(Hmac, Transform)\n\nHmac.prototype.update = function (data, enc) {\n  this._hash.update(data, enc)\n\n  return this\n}\n\nHmac.prototype._transform = function (data, _, next) {\n  this._hash.update(data)\n\n  next()\n}\n\nHmac.prototype._flush = function (next) {\n  this.push(this.digest())\n\n  next()\n}\n\nHmac.prototype.digest = function (enc) {\n  var h = this._hash.digest()\n\n  return createHash(this._alg).update(this._opad).update(h).digest(enc)\n}\n\nmodule.exports = function createHmac(alg, key) {\n  return new Hmac(alg, key)\n}\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(require('browserify-sign/algos')))\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n;[\n  'Cipher',\n  'createCipher',\n  'Cipheriv',\n  'createCipheriv',\n  'Decipher',\n  'createDecipher',\n  'Decipheriv',\n  'createDecipheriv',\n  'getCiphers',\n  'listCiphers'\n].forEach(function (key) {\n  exports[key] = aes[key]\n})\n\nvar dh = require('diffie-hellman')\n;[\n  'DiffieHellmanGroup',\n  'createDiffieHellmanGroup',\n  'getDiffieHellman',\n  'createDiffieHellman',\n  'DiffieHellman'\n].forEach(function (key) {\n  exports[key] = dh[key]\n})\n\nvar sign = require('browserify-sign')\n;[\n  'createSign',\n  'Sign',\n  'createVerify',\n  'Verify'\n].forEach(function (key) {\n  exports[key] = sign[key]\n})\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\n;[\n  'publicEncrypt',\n  'privateEncrypt',\n  'publicDecrypt',\n  'privateDecrypt'\n].forEach(function (key) {\n  exports[key] = publicEncrypt[key]\n})\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n;[\n  'createCredentials'\n].forEach(function (name) {\n  exports[name] = function () {\n    throw new Error([\n      'sorry, ' + name + ' is not implemented yet',\n      'we accept pull requests',\n      'https://github.com/crypto-browserify/crypto-browserify'\n    ].join('\\n'))\n  }\n})\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar utils = des.utils;\nvar Cipher = des.Cipher;\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar Cipher = des.Cipher;\nvar DES = des.DES;\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","var generatePrime = require('./lib/generatePrime');\nvar primes = require('./lib/primes');\n\nvar DH = require('./lib/dh');\n\nfunction getDiffieHellman(mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex');\n  var gen = new Buffer(primes[mod].gen, 'hex');\n\n  return new DH(prime, gen);\n}\n\nfunction createDiffieHellman(prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || (typeof enc === 'string' && ['hex', 'binary', 'base64'].indexOf(enc) === -1)) {\n    genc = generator;\n    generator = enc;\n    enc = undefined;\n  }\n\n  enc = enc || 'binary';\n  genc = genc || 'binary';\n  generator = generator || new Buffer([2]);\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc);\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true);\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc);\n  }\n\n  return new DH(prime, generator, true);\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman;\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman;\n","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","module.exports={\n    \"modp1\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"\n    },\n    \"modp2\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"\n    },\n    \"modp5\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"\n    },\n    \"modp14\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"\n    },\n    \"modp15\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"\n    },\n    \"modp16\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"\n    },\n    \"modp17\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"\n    },\n    \"modp18\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"\n    }\n}","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.hmacDRBG = require('./elliptic/hmac-drbg');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new bn(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new bn(0).toRed(this.red);\n  this.one = new bn(1).toRed(this.red);\n  this.two = new bn(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new bn(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n  return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n  if (bytes[0] === 0x04 && bytes.length - 1 === 2 * len) {\n    return this.point(bytes.slice(1, 1 + len),\n                      bytes.slice(1 + len, 1 + 2 * len));\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new bn(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new bn(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new bn(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y = rhs.redMul(lhs.redInvm()).redSqrt();\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new bn(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - 1) / (d y^2 + 1)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.one);\n  var rhs = y2.redMul(this.d).redAdd(this.one);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = z ? new bn(z, 16) : this.curve.one;\n    this.t = t && new bn(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n         this.y.cmp(this.z) === 0;\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curve = require('../curve');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.i4 = new bn(4).toRed(this.red).redInvm();\n  this.two = new bn(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new bn(x, 16);\n    this.z = new bn(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar bn = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new bn(conf.a, 16).toRed(this.red);\n  this.b = new bn(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new bn(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new bn(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new bn(vec.a, 16),\n        b: new bn(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : bn.mont(num);\n  var tinv = new bn(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new bn(1);\n  var y1 = new bn(0);\n  var x2 = new bn(0);\n  var y2 = new bn(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new bn(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new bn(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new bn(0);\n  } else {\n    this.x = new bn(x, 16);\n    this.y = new bn(y, 16);\n    this.z = new bn(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new bn(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '0',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new bn(2));\n  do {\n    var priv = new bn(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new bn(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray();\n  for (var i = bkey.length; i < bytes; i++)\n    bkey.unshift(0);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray();\n  for (var i = nonce.length; i < bytes; i++)\n    nonce.unshift(0);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new elliptic.hmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new bn(1));\n  do {\n    var k = new bn(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  } while (true);\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new bn(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  var p = this.g.mulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  return p.getX().umod(this.n).cmp(r) === 0;\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new bn(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var eNeg = n.sub(e);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  var rInv = signature.r.invm(n);\n  return r.mul(s).add(this.g.mul(eNeg)).mul(rInv);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime = this.recoverPubKey(e, signature, i);\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar bn = require('bn.js');\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new bn(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar bn = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new bn(options.r, 16);\n  this.s = new bn(options.s, 16);\n  if (options.recoveryParam !== null)\n    this.recoveryParam = options.recoveryParam;\n  else\n    this.recoveryParam = null;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new bn(r);\n  this.s = new bn(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar bn = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof bn)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this.reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc);\n  var nonce = utils.toArray(options.nonce, options.nonceEnc);\n  var pers = utils.toArray(options.pers, options.persEnc);\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this.reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toBuffer(entropy, entropyEnc);\n  add = utils.toBuffer(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this.reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this.reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc);\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this.reseed++;\n  return utils.encode(res, enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar utils = exports;\nvar bn = require('bn.js');\n\nutils.assert = function assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n};\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (!enc) {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  } else if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, computer) {\n  var name = computer.name;\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new bn(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","module.exports={\n  \"_args\": [\n    [\n      \"elliptic@^6.0.0\",\n      \"C:\\\\Users\\\\kevin\\\\GitHub\\\\yjs\\\\node_modules\\\\browserify-sign\"\n    ]\n  ],\n  \"_from\": \"elliptic@>=6.0.0 <7.0.0\",\n  \"_id\": \"elliptic@6.0.2\",\n  \"_inCache\": true,\n  \"_installable\": true,\n  \"_location\": \"/elliptic\",\n  \"_nodeVersion\": \"5.0.0\",\n  \"_npmUser\": {\n    \"email\": \"fedor@indutny.com\",\n    \"name\": \"indutny\"\n  },\n  \"_npmVersion\": \"3.3.6\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"name\": \"elliptic\",\n    \"raw\": \"elliptic@^6.0.0\",\n    \"rawSpec\": \"^6.0.0\",\n    \"scope\": null,\n    \"spec\": \">=6.0.0 <7.0.0\",\n    \"type\": \"range\"\n  },\n  \"_requiredBy\": [\n    \"/browserify-sign\",\n    \"/create-ecdh\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.0.2.tgz\",\n  \"_shasum\": \"219b96cd92aa9885d91d31c1fd42eaa5eb4483a9\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"elliptic@^6.0.0\",\n  \"_where\": \"C:\\\\Users\\\\kevin\\\\GitHub\\\\yjs\\\\node_modules\\\\browserify-sign\",\n  \"author\": {\n    \"email\": \"fedor@indutny.com\",\n    \"name\": \"Fedor Indutny\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"dependencies\": {\n    \"bn.js\": \"^4.0.0\",\n    \"brorand\": \"^1.0.1\",\n    \"hash.js\": \"^1.0.0\",\n    \"inherits\": \"^2.0.1\"\n  },\n  \"description\": \"EC cryptography\",\n  \"devDependencies\": {\n    \"browserify\": \"^3.44.2\",\n    \"coveralls\": \"^2.11.3\",\n    \"istanbul\": \"^0.3.17\",\n    \"jscs\": \"^1.11.3\",\n    \"jshint\": \"^2.6.0\",\n    \"mocha\": \"^2.1.0\",\n    \"uglify-js\": \"^2.4.13\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"shasum\": \"219b96cd92aa9885d91d31c1fd42eaa5eb4483a9\",\n    \"tarball\": \"http://registry.npmjs.org/elliptic/-/elliptic-6.0.2.tgz\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"gitHead\": \"330106da186712d228d79bc71ae8e7e68565fa9d\",\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"keywords\": [\n    \"Cryptography\",\n    \"EC\",\n    \"Elliptic\",\n    \"curve\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"lib/elliptic.js\",\n  \"maintainers\": [\n    {\n      \"name\": \"indutny\",\n      \"email\": \"fedor@indutny.com\"\n    }\n  ],\n  \"name\": \"elliptic\",\n  \"optionalDependencies\": {},\n  \"readme\": \"ERROR: No README data found!\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n  },\n  \"scripts\": {\n    \"coveralls\": \"cat ./coverage/lcov.info | coveralls\",\n    \"test\": \"make lint && istanbul test _mocha --reporter=spec test/*-test.js\"\n  },\n  \"version\": \"6.0.2\"\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","var md5 = require('create-hash/md5')\nmodule.exports = EVP_BytesToKey\nfunction EVP_BytesToKey (password, salt, keyLen, ivLen) {\n  if (!Buffer.isBuffer(password)) {\n    password = new Buffer(password, 'binary')\n  }\n  if (salt && !Buffer.isBuffer(salt)) {\n    salt = new Buffer(salt, 'binary')\n  }\n  keyLen = keyLen / 8\n  ivLen = ivLen || 0\n  var ki = 0\n  var ii = 0\n  var key = new Buffer(keyLen)\n  var iv = new Buffer(ivLen)\n  var addmd = 0\n  var md_buf\n  var i\n  var bufs = []\n  while (true) {\n    if (addmd++ > 0) {\n      bufs.push(md_buf)\n    }\n    bufs.push(password)\n    if (salt) {\n      bufs.push(salt)\n    }\n    md_buf = md5(Buffer.concat(bufs))\n    bufs = []\n    i = 0\n    if (keyLen > 0) {\n      while (true) {\n        if (keyLen === 0) {\n          break\n        }\n        if (i === md_buf.length) {\n          break\n        }\n        key[ki++] = md_buf[i]\n        keyLen--\n        i++\n      }\n    }\n    if (ivLen > 0 && i !== md_buf.length) {\n      while (true) {\n        if (ivLen === 0) {\n          break\n        }\n        if (i === md_buf.length) {\n          break\n        }\n        iv[ii++] = md_buf[i]\n        ivLen--\n        i++\n      }\n    }\n    if (keyLen === 0 && ivLen === 0) {\n      break\n    }\n  }\n  for (i = 0; i < md_buf.length; i++) {\n    md_buf[i] = 0\n  }\n  return {\n    key: key,\n    iv: iv\n  }\n}\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","var hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","var hmac = exports;\n\nvar hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (var i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (var i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = require('../hash');\nvar utils = hash.utils;\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = hash.common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","var hash = require('../hash');\nvar utils = hash.utils;\nvar assert = utils.assert;\n\nvar rotr32 = utils.rotr32;\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\nvar BlockHash = hash.common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [ 0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n             0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19 ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nexports.sha256 = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [ 0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n             0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nexports.sha224 = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [ 0x6a09e667, 0xf3bcc908,\n             0xbb67ae85, 0x84caa73b,\n             0x3c6ef372, 0xfe94f82b,\n             0xa54ff53a, 0x5f1d36f1,\n             0x510e527f, 0xade682d1,\n             0x9b05688c, 0x2b3e6c1f,\n             0x1f83d9ab, 0xfb41bd6b,\n             0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nexports.sha512 = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(c0_hi, c0_lo,\n                      c1_hi, c1_lo,\n                      c2_hi, c2_lo,\n                      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(c0_hi, c0_lo,\n                          c1_hi, c1_lo,\n                          c2_hi, c2_lo,\n                          c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(c0_hi, c0_lo,\n                           c1_hi, c1_lo,\n                           c2_hi, c2_lo,\n                           c3_hi, c3_lo,\n                           c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(c0_hi, c0_lo,\n                           c1_hi, c1_lo,\n                           c2_hi, c2_lo,\n                           c3_hi, c3_lo,\n                           c4_hi, c4_lo);\n\n    var c0_hi = s0_512_hi(ah, al);\n    var c0_lo = s0_512_lo(ah, al);\n    var c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    var c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [ 0xcbbb9d5d, 0xc1059ed8,\n             0x629a292a, 0x367cd507,\n             0x9159015a, 0x3070dd17,\n             0x152fecd8, 0xf70e5939,\n             0x67332667, 0xffc00b31,\n             0x8eb44a87, 0x68581511,\n             0xdb0c2e0d, 0x64f98fa7,\n             0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nexports.sha384 = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe,\n             0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nexports.sha1 = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (var i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\n\nfunction ch64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh, zl) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","var utils = exports;\nvar inherits = require('inherits');\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (var i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nutils.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nutils.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nutils.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nutils.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nutils.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nutils.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nutils.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nutils.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nutils.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nutils.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nutils.sum32_5 = sum32_5;\n\nfunction assert(cond, msg) {\n  if (!cond)\n    throw new Error(msg || 'Assertion failed');\n}\nutils.assert = assert;\n\nutils.inherits = inherits;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n};\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n};\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n};\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n};\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n};\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n};\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n};\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n};\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n};\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n};\nexports.shr64_lo = shr64_lo;\n","var http = require('http');\n\nvar https = module.exports;\n\nfor (var key in http) {\n    if (http.hasOwnProperty(key)) https[key] = http[key];\n};\n\nhttps.request = function (params, cb) {\n    if (!params) params = {};\n    params.scheme = 'https';\n    params.protocol = 'https:';\n    return http.request.call(this, params, cb);\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._rand = function _rand(n) {\n  var len = n.bitLength();\n  var buf = this.rand.generate(Math.ceil(len / 8));\n\n  // Set low bits\n  buf[0] |= 3;\n\n  // Mask high bits\n  var mask = len & 0x7;\n  if (mask !== 0)\n    buf[buf.length - 1] >>= 7 - mask;\n\n  return new bn(buf);\n}\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  var n2 = n1.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._rand(n2);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  var n2 = n1.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._rand(n2);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs+len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i=0, l=chunks.length; i<l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i=0; i<len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function(chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","module.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n =0; n < 256; n++) {\n    c = n;\n    for (var k =0; k < 8; k++) {\n      c = ((c&1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc = crc ^ (-1);\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg   = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2*L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only (s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH-1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH-1)) ? s.strstart : MIN_MATCH-1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH-1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size-MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH-1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1- s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length-1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH-1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart-1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH-1 ? s.strstart : MIN_MATCH-1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nvar Config = function (good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n};\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2*D_CODES+1) * 2);\n  this.bl_tree    = new utils.Buf16((2*BL_CODES+1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS+1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2*L_CODES+1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2*L_CODES+1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  s.d_buf = s.lit_bufsize >> 1;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n                );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n/* =========================================================================\n * Copy the source state to the destination state\n */\n//function deflateCopy(dest, source) {\n//\n//}\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n\nvar utils = require('../utils/common');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar inflate_fast = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction ZSWAP32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, {bits: 9});\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, {bits: 5});\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window,src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window,src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window,src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n    case HEAD:\n      if (state.wrap === 0) {\n        state.mode = TYPEDO;\n        break;\n      }\n      //=== NEEDBITS(16);\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n        state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = FLAGS;\n        break;\n      }\n      state.flags = 0;           /* expect zlib header */\n      if (state.head) {\n        state.head.done = false;\n      }\n      if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n        (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n        strm.msg = 'incorrect header check';\n        state.mode = BAD;\n        break;\n      }\n      if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n      len = (hold & 0x0f)/*BITS(4)*/ + 8;\n      if (state.wbits === 0) {\n        state.wbits = len;\n      }\n      else if (len > state.wbits) {\n        strm.msg = 'invalid window size';\n        state.mode = BAD;\n        break;\n      }\n      state.dmax = 1 << len;\n      //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = hold & 0x200 ? DICTID : TYPE;\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      break;\n    case FLAGS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.flags = hold;\n      if ((state.flags & 0xff) !== Z_DEFLATED) {\n        strm.msg = 'unknown compression method';\n        state.mode = BAD;\n        break;\n      }\n      if (state.flags & 0xe000) {\n        strm.msg = 'unknown header flags set';\n        state.mode = BAD;\n        break;\n      }\n      if (state.head) {\n        state.head.text = ((hold >> 8) & 1);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = TIME;\n      /* falls through */\n    case TIME:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.time = hold;\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC4(state.check, hold)\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        hbuf[2] = (hold >>> 16) & 0xff;\n        hbuf[3] = (hold >>> 24) & 0xff;\n        state.check = crc32(state.check, hbuf, 4, 0);\n        //===\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = OS;\n      /* falls through */\n    case OS:\n      //=== NEEDBITS(16); */\n      while (bits < 16) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if (state.head) {\n        state.head.xflags = (hold & 0xff);\n        state.head.os = (hold >> 8);\n      }\n      if (state.flags & 0x0200) {\n        //=== CRC2(state.check, hold);\n        hbuf[0] = hold & 0xff;\n        hbuf[1] = (hold >>> 8) & 0xff;\n        state.check = crc32(state.check, hbuf, 2, 0);\n        //===//\n      }\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = EXLEN;\n      /* falls through */\n    case EXLEN:\n      if (state.flags & 0x0400) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length = hold;\n        if (state.head) {\n          state.head.extra_len = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      else if (state.head) {\n        state.head.extra = null/*Z_NULL*/;\n      }\n      state.mode = EXTRA;\n      /* falls through */\n    case EXTRA:\n      if (state.flags & 0x0400) {\n        copy = state.length;\n        if (copy > have) { copy = have; }\n        if (copy) {\n          if (state.head) {\n            len = state.head.extra_len - state.length;\n            if (!state.head.extra) {\n              // Use untyped array for more conveniend processing later\n              state.head.extra = new Array(state.head.extra_len);\n            }\n            utils.arraySet(\n              state.head.extra,\n              input,\n              next,\n              // extra field is limited to 65536 bytes\n              // - no need for additional size check\n              copy,\n              /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n              len\n            );\n            //zmemcpy(state.head.extra + len, next,\n            //        len + copy > state.head.extra_max ?\n            //        state.head.extra_max - len : copy);\n          }\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          state.length -= copy;\n        }\n        if (state.length) { break inf_leave; }\n      }\n      state.length = 0;\n      state.mode = NAME;\n      /* falls through */\n    case NAME:\n      if (state.flags & 0x0800) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          // TODO: 2 or 1 bytes?\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.name_max*/)) {\n            state.head.name += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.name = null;\n      }\n      state.length = 0;\n      state.mode = COMMENT;\n      /* falls through */\n    case COMMENT:\n      if (state.flags & 0x1000) {\n        if (have === 0) { break inf_leave; }\n        copy = 0;\n        do {\n          len = input[next + copy++];\n          /* use constant limit because in js we should not preallocate memory */\n          if (state.head && len &&\n              (state.length < 65536 /*state.head.comm_max*/)) {\n            state.head.comment += String.fromCharCode(len);\n          }\n        } while (len && copy < have);\n        if (state.flags & 0x0200) {\n          state.check = crc32(state.check, input, copy, next);\n        }\n        have -= copy;\n        next += copy;\n        if (len) { break inf_leave; }\n      }\n      else if (state.head) {\n        state.head.comment = null;\n      }\n      state.mode = HCRC;\n      /* falls through */\n    case HCRC:\n      if (state.flags & 0x0200) {\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.check & 0xffff)) {\n          strm.msg = 'header crc mismatch';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n      }\n      if (state.head) {\n        state.head.hcrc = ((state.flags >> 9) & 1);\n        state.head.done = true;\n      }\n      strm.adler = state.check = 0 /*crc32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      break;\n    case DICTID:\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      strm.adler = state.check = ZSWAP32(hold);\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = DICT;\n      /* falls through */\n    case DICT:\n      if (state.havedict === 0) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        return Z_NEED_DICT;\n      }\n      strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n      state.mode = TYPE;\n      /* falls through */\n    case TYPE:\n      if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case TYPEDO:\n      if (state.last) {\n        //--- BYTEBITS() ---//\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        state.mode = CHECK;\n        break;\n      }\n      //=== NEEDBITS(3); */\n      while (bits < 3) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.last = (hold & 0x01)/*BITS(1)*/;\n      //--- DROPBITS(1) ---//\n      hold >>>= 1;\n      bits -= 1;\n      //---//\n\n      switch ((hold & 0x03)/*BITS(2)*/) {\n      case 0:                             /* stored block */\n        //Tracev((stderr, \"inflate:     stored block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = STORED;\n        break;\n      case 1:                             /* fixed block */\n        fixedtables(state);\n        //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = LEN_;             /* decode codes */\n        if (flush === Z_TREES) {\n          //--- DROPBITS(2) ---//\n          hold >>>= 2;\n          bits -= 2;\n          //---//\n          break inf_leave;\n        }\n        break;\n      case 2:                             /* dynamic block */\n        //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n        //        state.last ? \" (last)\" : \"\"));\n        state.mode = TABLE;\n        break;\n      case 3:\n        strm.msg = 'invalid block type';\n        state.mode = BAD;\n      }\n      //--- DROPBITS(2) ---//\n      hold >>>= 2;\n      bits -= 2;\n      //---//\n      break;\n    case STORED:\n      //--- BYTEBITS() ---// /* go to byte boundary */\n      hold >>>= bits & 7;\n      bits -= bits & 7;\n      //---//\n      //=== NEEDBITS(32); */\n      while (bits < 32) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n        strm.msg = 'invalid stored block lengths';\n        state.mode = BAD;\n        break;\n      }\n      state.length = hold & 0xffff;\n      //Tracev((stderr, \"inflate:       stored length %u\\n\",\n      //        state.length));\n      //=== INITBITS();\n      hold = 0;\n      bits = 0;\n      //===//\n      state.mode = COPY_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case COPY_:\n      state.mode = COPY;\n      /* falls through */\n    case COPY:\n      copy = state.length;\n      if (copy) {\n        if (copy > have) { copy = have; }\n        if (copy > left) { copy = left; }\n        if (copy === 0) { break inf_leave; }\n        //--- zmemcpy(put, next, copy); ---\n        utils.arraySet(output, input, next, copy, put);\n        //---//\n        have -= copy;\n        next += copy;\n        left -= copy;\n        put += copy;\n        state.length -= copy;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       stored end\\n\"));\n      state.mode = TYPE;\n      break;\n    case TABLE:\n      //=== NEEDBITS(14); */\n      while (bits < 14) {\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n      }\n      //===//\n      state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n      //--- DROPBITS(5) ---//\n      hold >>>= 5;\n      bits -= 5;\n      //---//\n      state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n      //--- DROPBITS(4) ---//\n      hold >>>= 4;\n      bits -= 4;\n      //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n      if (state.nlen > 286 || state.ndist > 30) {\n        strm.msg = 'too many length or distance symbols';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n      state.have = 0;\n      state.mode = LENLENS;\n      /* falls through */\n    case LENLENS:\n      while (state.have < state.ncode) {\n        //=== NEEDBITS(3);\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n        //--- DROPBITS(3) ---//\n        hold >>>= 3;\n        bits -= 3;\n        //---//\n      }\n      while (state.have < 19) {\n        state.lens[order[state.have++]] = 0;\n      }\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      //state.next = state.codes;\n      //state.lencode = state.next;\n      // Switch to use dynamic table\n      state.lencode = state.lendyn;\n      state.lenbits = 7;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n      state.lenbits = opts.bits;\n\n      if (ret) {\n        strm.msg = 'invalid code lengths set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n      state.have = 0;\n      state.mode = CODELENS;\n      /* falls through */\n    case CODELENS:\n      while (state.have < state.nlen + state.ndist) {\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_val < 16) {\n          //--- DROPBITS(here.bits) ---//\n          hold >>>= here_bits;\n          bits -= here_bits;\n          //---//\n          state.lens[state.have++] = here_val;\n        }\n        else {\n          if (here_val === 16) {\n            //=== NEEDBITS(here.bits + 2);\n            n = here_bits + 2;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            if (state.have === 0) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            len = state.lens[state.have - 1];\n            copy = 3 + (hold & 0x03);//BITS(2);\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            //---//\n          }\n          else if (here_val === 17) {\n            //=== NEEDBITS(here.bits + 3);\n            n = here_bits + 3;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 3 + (hold & 0x07);//BITS(3);\n            //--- DROPBITS(3) ---//\n            hold >>>= 3;\n            bits -= 3;\n            //---//\n          }\n          else {\n            //=== NEEDBITS(here.bits + 7);\n            n = here_bits + 7;\n            while (bits < n) {\n              if (have === 0) { break inf_leave; }\n              have--;\n              hold += input[next++] << bits;\n              bits += 8;\n            }\n            //===//\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            len = 0;\n            copy = 11 + (hold & 0x7f);//BITS(7);\n            //--- DROPBITS(7) ---//\n            hold >>>= 7;\n            bits -= 7;\n            //---//\n          }\n          if (state.have + copy > state.nlen + state.ndist) {\n            strm.msg = 'invalid bit length repeat';\n            state.mode = BAD;\n            break;\n          }\n          while (copy--) {\n            state.lens[state.have++] = len;\n          }\n        }\n      }\n\n      /* handle error breaks in while */\n      if (state.mode === BAD) { break; }\n\n      /* check for end-of-block code (better have one) */\n      if (state.lens[256] === 0) {\n        strm.msg = 'invalid code -- missing end-of-block';\n        state.mode = BAD;\n        break;\n      }\n\n      /* build code tables -- note: do not change the lenbits or distbits\n         values here (9 and 6) without reading the comments in inftrees.h\n         concerning the ENOUGH constants, which depend on those values */\n      state.lenbits = 9;\n\n      opts = {bits: state.lenbits};\n      ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.lenbits = opts.bits;\n      // state.lencode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid literal/lengths set';\n        state.mode = BAD;\n        break;\n      }\n\n      state.distbits = 6;\n      //state.distcode.copy(state.codes);\n      // Switch to use dynamic table\n      state.distcode = state.distdyn;\n      opts = {bits: state.distbits};\n      ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n      // We have separate tables & no pointers. 2 commented lines below not needed.\n      // state.next_index = opts.table_index;\n      state.distbits = opts.bits;\n      // state.distcode = state.next;\n\n      if (ret) {\n        strm.msg = 'invalid distances set';\n        state.mode = BAD;\n        break;\n      }\n      //Tracev((stderr, 'inflate:       codes ok\\n'));\n      state.mode = LEN_;\n      if (flush === Z_TREES) { break inf_leave; }\n      /* falls through */\n    case LEN_:\n      state.mode = LEN;\n      /* falls through */\n    case LEN:\n      if (have >= 6 && left >= 258) {\n        //--- RESTORE() ---\n        strm.next_out = put;\n        strm.avail_out = left;\n        strm.next_in = next;\n        strm.avail_in = have;\n        state.hold = hold;\n        state.bits = bits;\n        //---\n        inflate_fast(strm, _out);\n        //--- LOAD() ---\n        put = strm.next_out;\n        output = strm.output;\n        left = strm.avail_out;\n        next = strm.next_in;\n        input = strm.input;\n        have = strm.avail_in;\n        hold = state.hold;\n        bits = state.bits;\n        //---\n\n        if (state.mode === TYPE) {\n          state.back = -1;\n        }\n        break;\n      }\n      state.back = 0;\n      for (;;) {\n        here = state.lencode[hold & ((1 << state.lenbits) -1)];  /*BITS(state.lenbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if (here_bits <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if (here_op && (here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.lencode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      state.length = here_val;\n      if (here_op === 0) {\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        state.mode = LIT;\n        break;\n      }\n      if (here_op & 32) {\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.back = -1;\n        state.mode = TYPE;\n        break;\n      }\n      if (here_op & 64) {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break;\n      }\n      state.extra = here_op & 15;\n      state.mode = LENEXT;\n      /* falls through */\n    case LENEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.length += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n      //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n      state.was = state.length;\n      state.mode = DIST;\n      /* falls through */\n    case DIST:\n      for (;;) {\n        here = state.distcode[hold & ((1 << state.distbits) -1)];/*BITS(state.distbits)*/\n        here_bits = here >>> 24;\n        here_op = (here >>> 16) & 0xff;\n        here_val = here & 0xffff;\n\n        if ((here_bits) <= bits) { break; }\n        //--- PULLBYTE() ---//\n        if (have === 0) { break inf_leave; }\n        have--;\n        hold += input[next++] << bits;\n        bits += 8;\n        //---//\n      }\n      if ((here_op & 0xf0) === 0) {\n        last_bits = here_bits;\n        last_op = here_op;\n        last_val = here_val;\n        for (;;) {\n          here = state.distcode[last_val +\n                  ((hold & ((1 << (last_bits + last_op)) -1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((last_bits + here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        //--- DROPBITS(last.bits) ---//\n        hold >>>= last_bits;\n        bits -= last_bits;\n        //---//\n        state.back += last_bits;\n      }\n      //--- DROPBITS(here.bits) ---//\n      hold >>>= here_bits;\n      bits -= here_bits;\n      //---//\n      state.back += here_bits;\n      if (here_op & 64) {\n        strm.msg = 'invalid distance code';\n        state.mode = BAD;\n        break;\n      }\n      state.offset = here_val;\n      state.extra = (here_op) & 15;\n      state.mode = DISTEXT;\n      /* falls through */\n    case DISTEXT:\n      if (state.extra) {\n        //=== NEEDBITS(state.extra);\n        n = state.extra;\n        while (bits < n) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.offset += hold & ((1 << state.extra) -1)/*BITS(state.extra)*/;\n        //--- DROPBITS(state.extra) ---//\n        hold >>>= state.extra;\n        bits -= state.extra;\n        //---//\n        state.back += state.extra;\n      }\n//#ifdef INFLATE_STRICT\n      if (state.offset > state.dmax) {\n        strm.msg = 'invalid distance too far back';\n        state.mode = BAD;\n        break;\n      }\n//#endif\n      //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n      state.mode = MATCH;\n      /* falls through */\n    case MATCH:\n      if (left === 0) { break inf_leave; }\n      copy = _out - left;\n      if (state.offset > copy) {         /* copy from window */\n        copy = state.offset - copy;\n        if (copy > state.whave) {\n          if (state.sane) {\n            strm.msg = 'invalid distance too far back';\n            state.mode = BAD;\n            break;\n          }\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n        }\n        if (copy > state.wnext) {\n          copy -= state.wnext;\n          from = state.wsize - copy;\n        }\n        else {\n          from = state.wnext - copy;\n        }\n        if (copy > state.length) { copy = state.length; }\n        from_source = state.window;\n      }\n      else {                              /* copy from output */\n        from_source = output;\n        from = put - state.offset;\n        copy = state.length;\n      }\n      if (copy > left) { copy = left; }\n      left -= copy;\n      state.length -= copy;\n      do {\n        output[put++] = from_source[from++];\n      } while (--copy);\n      if (state.length === 0) { state.mode = LEN; }\n      break;\n    case LIT:\n      if (left === 0) { break inf_leave; }\n      output[put++] = state.length;\n      left--;\n      state.mode = LEN;\n      break;\n    case CHECK:\n      if (state.wrap) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          // Use '|' insdead of '+' to make sure that result is signed\n          hold |= input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        _out -= left;\n        strm.total_out += _out;\n        state.total += _out;\n        if (_out) {\n          strm.adler = state.check =\n              /*UPDATE(state.check, put - _out, _out);*/\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n        }\n        _out = left;\n        // NB: crc32 stored as signed 32-bit int, ZSWAP32 returns signed too\n        if ((state.flags ? hold : ZSWAP32(hold)) !== state.check) {\n          strm.msg = 'incorrect data check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n      }\n      state.mode = LENGTH;\n      /* falls through */\n    case LENGTH:\n      if (state.wrap && state.flags) {\n        //=== NEEDBITS(32);\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (hold !== (state.total & 0xffffffff)) {\n          strm.msg = 'incorrect length check';\n          state.mode = BAD;\n          break;\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n      }\n      state.mode = DONE;\n      /* falls through */\n    case DONE:\n      ret = Z_STREAM_END;\n      break inf_leave;\n    case BAD:\n      ret = Z_DATA_ERROR;\n      break inf_leave;\n    case MEM:\n      return Z_MEM_ERROR;\n    case SYNC:\n      /* falls through */\n    default:\n      return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS+1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  var i=0;\n  /* process all codes and make table entries */\n  for (;;) {\n    i++;\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\nmodule.exports = {\n  '2':    'need dictionary',     /* Z_NEED_DICT       2  */\n  '1':    'stream end',          /* Z_STREAM_END      1  */\n  '0':    '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2*L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES+2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH-MIN_MATCH+1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nvar StaticTreeDesc = function (static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n};\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nvar TreeDesc = function(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n};\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short (s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c*2]/*.Code*/, tree[c*2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max]*2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max+1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n*2 +1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n*2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n-base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n*2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length-1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits+1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m*2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m*2 + 1]/*.Len*/)*tree[m*2]/*.Freq*/;\n        tree[m*2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS+1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits-1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n*2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n*2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS+1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES-1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1<<extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length-1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0 ; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1<<extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1<<(extra_dbits[code]-7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n*2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n*2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n*2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n*2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES+1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n*2 + 1]/*.Len*/ = 5;\n    static_dtree[n*2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS+1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc =new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n*2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n*2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n*2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK*2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n*2;\n  var _m2 = m*2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j+1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx*2] << 8) | (s.pending_buf[s.d_buf + lx*2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code+LITERALS+1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n*2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node*2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n*2 + 1]/*.Dad*/ = tree[m*2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code+1)*2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6*2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10*2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138*2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0*2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n+1)*2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count-3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count-3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count-11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES-1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex]*2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3*(max_blindex+1) + 5+5+4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes-257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes-1,   5);\n  send_bits(s, blcodes-4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank]*2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes-1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes-1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n*2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK<<1)+(last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES<<1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len+3+7) >>> 3;\n    static_lenb = (s.static_len+3+7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len+4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES<<1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES<<1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code+1, s.d_desc.max_code+1, max_blindex+1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc*2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc]+LITERALS+1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize-1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","module.exports={\"2.16.840.1.101.3.4.1.1\": \"aes-128-ecb\",\n\"2.16.840.1.101.3.4.1.2\": \"aes-128-cbc\",\n\"2.16.840.1.101.3.4.1.3\": \"aes-128-ofb\",\n\"2.16.840.1.101.3.4.1.4\": \"aes-128-cfb\",\n\"2.16.840.1.101.3.4.1.21\": \"aes-192-ecb\",\n\"2.16.840.1.101.3.4.1.22\": \"aes-192-cbc\",\n\"2.16.840.1.101.3.4.1.23\": \"aes-192-ofb\",\n\"2.16.840.1.101.3.4.1.24\": \"aes-192-cfb\",\n\"2.16.840.1.101.3.4.1.41\": \"aes-256-ecb\",\n\"2.16.840.1.101.3.4.1.42\": \"aes-256-cbc\",\n\"2.16.840.1.101.3.4.1.43\": \"aes-256-ofb\",\n\"2.16.840.1.101.3.4.1.44\": \"aes-256-cfb\"\n}","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n\nvar asn1 = require('asn1.js')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED\\r?\\nDEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)\\r?\\n\\r?\\n([0-9A-z\\n\\r\\+\\/\\=]+)\\r?\\n/m\nvar startRegex = /^-----BEGIN (.*) KEY-----\\r?\\n/m\nvar fullRegex = /^-----BEGIN (.*) KEY-----\\r?\\n([0-9A-z\\n\\r\\+\\/\\=]+)\\r?\\n-----END \\1 KEY-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = new Buffer(match2[2].replace(/\\r?\\n/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = new Buffer(match[2], 'hex')\n    var cipherText = new Buffer(match[3].replace(/\\r?\\n/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1] + ' KEY'\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = new Buffer(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'PUBLIC KEY':\n      ndata = asn1.PublicKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen)\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var createHmac = require('create-hmac')\nvar MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nexports.pbkdf2 = pbkdf2\nfunction pbkdf2 (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('No callback provided to pbkdf2')\n  }\n\n  var result = pbkdf2Sync(password, salt, iterations, keylen, digest)\n  setTimeout(function () {\n    callback(undefined, result)\n  })\n}\n\nexports.pbkdf2Sync = pbkdf2Sync\nfunction pbkdf2Sync (password, salt, iterations, keylen, digest) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC) {\n    throw new TypeError('Bad key length')\n  }\n\n  digest = digest || 'sha1'\n\n  if (!Buffer.isBuffer(password)) password = new Buffer(password, 'binary')\n  if (!Buffer.isBuffer(salt)) salt = new Buffer(salt, 'binary')\n\n  var hLen\n  var l = 1\n  var DK = new Buffer(keylen)\n  var block1 = new Buffer(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var r\n  var T\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n    var U = createHmac(digest, password).update(block1).digest()\n\n    if (!hLen) {\n      hLen = U.length\n      T = new Buffer(hLen)\n      l = Math.ceil(keylen / hLen)\n      r = keylen - (l - 1) * hLen\n    }\n\n    U.copy(T, 0, 0, hLen)\n\n    for (var j = 1; j < iterations; j++) {\n      U = createHmac(digest, password).update(U).digest()\n\n      for (var k = 0; k < hLen; k++) {\n        T[k] ^= U[k]\n      }\n    }\n\n    var destPos = (i - 1) * hLen\n    var len = (i === l ? r : hLen)\n    T.copy(DK, destPos, 0, len)\n  }\n\n  return DK\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = nextTick;\n} else {\n  module.exports = process.nextTick;\n}\n\nfunction nextTick(fn) {\n  var args = new Array(arguments.length - 1);\n  var i = 0;\n  while (i < args.length) {\n    args[i++] = arguments[i];\n  }\n  process.nextTick(function afterTick() {\n    fn.apply(null, args);\n  });\n}\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","exports.publicEncrypt = require('./publicEncrypt');\nexports.privateDecrypt = require('./privateDecrypt');\n\nexports.privateEncrypt = function privateEncrypt(key, buf) {\n  return exports.publicEncrypt(key, buf, true);\n};\n\nexports.publicDecrypt = function publicDecrypt(key, buf) {\n  return exports.privateDecrypt(key, buf, true);\n};","var createHash = require('create-hash');\nmodule.exports = function (seed, len) {\n  var t = new Buffer('');\n  var  i = 0, c;\n  while (t.length < len) {\n    c = i2ops(i++);\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);\n  }\n  return t.slice(0, len);\n};\n\nfunction i2ops(c) {\n  var out = new Buffer(4);\n  out.writeUInt32BE(c,0);\n  return out;\n}","var parseKeys = require('parse-asn1');\nvar mgf = require('./mgf');\nvar xor = require('./xor');\nvar bn = require('bn.js');\nvar crt = require('browserify-rsa');\nvar createHash = require('create-hash');\nvar withPublic = require('./withPublic');\nmodule.exports = function privateDecrypt(private_key, enc, reverse) {\n  var padding;\n  if (private_key.padding) {\n    padding = private_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  \n  var key = parseKeys(private_key);\n  var k = key.modulus.byteLength();\n  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error');\n  }\n  var msg;\n  if (reverse) {\n    msg = withPublic(new bn(enc), key);\n  } else {\n    msg = crt(enc, key);\n  }\n  var zBuffer = new Buffer(k - msg.length);\n  zBuffer.fill(0);\n  msg = Buffer.concat([zBuffer, msg], k);\n  if (padding === 4) {\n    return oaep(key, msg);\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    return msg;\n  } else {\n    throw new Error('unknown padding');\n  }\n};\n\nfunction oaep(key, msg){\n  var n = key.modulus;\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (msg[0] !== 0) {\n    throw new Error('decryption error');\n  }\n  var maskedSeed = msg.slice(1, hLen + 1);\n  var maskedDb =  msg.slice(hLen + 1);\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen));\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1));\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error');\n  }\n  var i = hLen;\n  while (db[i] === 0) {\n    i++;\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error');\n  }\n  return db.slice(i);\n}\n\nfunction pkcs1(key, msg, reverse){\n  var p1 = msg.slice(0, 2);\n  var i = 2;\n  var status = 0;\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++;\n      break;\n    }\n  }\n  var ps = msg.slice(2, i - 1);\n  var p2 = msg.slice(i - 1, i);\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){\n    status++;\n  }\n  if (ps.length < 8) {\n    status++;\n  }\n  if (status) {\n    throw new Error('decryption error');\n  }\n  return  msg.slice(i);\n}\nfunction compare(a, b){\n  a = new Buffer(a);\n  b = new Buffer(b);\n  var dif = 0;\n  var len = a.length;\n  if (a.length !== b.length) {\n    dif++;\n    len = Math.min(a.length, b.length);\n  }\n  var i = -1;\n  while (++i < len) {\n    dif += (a[i] ^ b[i]);\n  }\n  return dif;\n}","var parseKeys = require('parse-asn1');\nvar randomBytes = require('randombytes');\nvar createHash = require('create-hash');\nvar mgf = require('./mgf');\nvar xor = require('./xor');\nvar bn = require('bn.js');\nvar withPublic = require('./withPublic');\nvar crt = require('browserify-rsa');\n\nvar constants = {\n  RSA_PKCS1_OAEP_PADDING: 4,\n  RSA_PKCS1_PADDIN: 1,\n  RSA_NO_PADDING: 3\n};\n\nmodule.exports = function publicEncrypt(public_key, msg, reverse) {\n  var padding;\n  if (public_key.padding) {\n    padding = public_key.padding;\n  } else if (reverse) {\n    padding = 1;\n  } else {\n    padding = 4;\n  }\n  var key = parseKeys(public_key);\n  var paddedMsg;\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg);\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse);\n  } else if (padding === 3) {\n    paddedMsg = new bn(msg);\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus');\n    }\n  } else {\n    throw new Error('unknown padding');\n  }\n  if (reverse) {\n    return crt(paddedMsg, key);\n  } else {\n    return withPublic(paddedMsg, key);\n  }\n};\n\nfunction oaep(key, msg){\n  var k = key.modulus.byteLength();\n  var mLen = msg.length;\n  var iHash = createHash('sha1').update(new Buffer('')).digest();\n  var hLen = iHash.length;\n  var hLen2 = 2 * hLen;\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long');\n  }\n  var ps = new Buffer(k - mLen - hLen2 - 2);\n  ps.fill(0);\n  var dblen = k - hLen - 1;\n  var seed = randomBytes(hLen);\n  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen));\n  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));\n}\nfunction pkcs1(key, msg, reverse){\n  var mLen = msg.length;\n  var k = key.modulus.byteLength();\n  if (mLen > k - 11) {\n    throw new Error('message too long');\n  }\n  var ps;\n  if (reverse) {\n    ps = new Buffer(k - mLen - 3);\n    ps.fill(0xff);\n  } else {\n    ps = nonZero(k - mLen - 3);\n  }\n  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));\n}\nfunction nonZero(len, crypto) {\n  var out = new Buffer(len);\n  var i = 0;\n  var cache = randomBytes(len*2);\n  var cur = 0;\n  var num;\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len*2);\n      cur = 0;\n    }\n    num = cache[cur++];\n    if (num) {\n      out[i++] = num;\n    }\n  }\n  return out;\n}","var bn = require('bn.js');\nfunction withPublic(paddedMsg, key) {\n  return new Buffer(paddedMsg\n    .toRed(bn.mont(key.modulus))\n    .redPow(new bn(key.publicExponent))\n    .fromRed()\n    .toArray());\n}\n\nmodule.exports = withPublic;","module.exports = function xor(a, b) {\n  var len = a.length;\n  var i = -1;\n  while (++i < len) {\n    a[i] ^= b[i];\n  }\n  return a\n};","/*! https://mths.be/punycode v1.4.0 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","'use strict';\n\nvar crypto = global.crypto || global.msCrypto\nif(crypto && crypto.getRandomValues) {\n  module.exports = randomBytes;\n} else {\n  module.exports = oldBrowser;\n}\nfunction randomBytes(size, cb) {\n  var bytes = new Buffer(size); //in browserify, this is an extended Uint8Array\n    /* This will not work in older browsers.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n     */\n\n  crypto.getRandomValues(bytes);\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes);\n    });\n  }\n  return bytes;\n}\nfunction oldBrowser() {\n  throw new Error(\n      'secure random number generation not supported by this browser\\n'+\n      'use chrome, FireFox or Internet Explorer 11'\n    )\n}\n","module.exports = require(\"./lib/_stream_duplex.js\")\n","// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\nvar keys = objectKeys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method])\n    Duplex.prototype[method] = Writable.prototype[method];\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false)\n    this.readable = false;\n\n  if (options && options.writable === false)\n    this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false)\n    this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended)\n    return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  processNextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n","// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function(chunk, encoding, cb) {\n  cb(null, chunk);\n};\n","'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\nvar EE = require('events');\n\n/*<replacement>*/\nvar EElistenerCount = function(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar Duplex;\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.buffer = [];\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder)\n      StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nvar Duplex;\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function')\n    this._read = options.read;\n\n  Stream.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = new Buffer(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function(chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function() {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var e = new Error('stream.unshift() after end event');\n      stream.emit('error', e);\n    } else {\n      if (state.decoder && !addToFront && !encoding)\n        chunk = state.decoder.write(chunk);\n\n      if (!addToFront)\n        state.reading = false;\n\n      // if we want the data now, just emit it.\n      if (state.flowing && state.length === 0 && !state.sync) {\n        stream.emit('data', chunk);\n        stream.read(0);\n      } else {\n        // update the buffer info.\n        state.length += state.objectMode ? 1 : chunk.length;\n        if (addToFront)\n          state.buffer.unshift(chunk);\n        else\n          state.buffer.push(chunk);\n\n        if (state.needReadable)\n          emitReadable(stream);\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended &&\n         (state.needReadable ||\n          state.length < state.highWaterMark ||\n          state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  if (!StringDecoder)\n    StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\nfunction howMuchToRead(n, state) {\n  if (state.length === 0 && state.ended)\n    return 0;\n\n  if (state.objectMode)\n    return n === 0 ? 0 : 1;\n\n  if (n === null || isNaN(n)) {\n    // only flow one buffer at a time\n    if (state.flowing && state.buffer.length)\n      return state.buffer[0].length;\n    else\n      return state.length;\n  }\n\n  if (n <= 0)\n    return 0;\n\n  // If we're asking for more than the target buffer level,\n  // then raise the water mark.  Bump up to the next highest\n  // power of 2, to prevent increasing it excessively in tiny\n  // amounts.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  // don't have that much.  return null, unless we've ended.\n  if (n > state.length) {\n    if (!state.ended) {\n      state.needReadable = true;\n      return 0;\n    } else {\n      return state.length;\n    }\n  }\n\n  return n;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read', n);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (typeof n !== 'number' || n > 0)\n    state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      state.needReadable &&\n      (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  }\n\n  if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0)\n      state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n  }\n\n  // If _read pushed data synchronously, then `reading` will be false,\n  // and we need to re-evaluate how much data we can return to the user.\n  if (doRead && !state.reading)\n    n = howMuchToRead(nOrig, state);\n\n  var ret;\n  if (n > 0)\n    ret = fromList(n, state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  }\n\n  state.length -= n;\n\n  // If we have nothing in the buffer, then we want to know\n  // as soon as we *do* get something into the buffer.\n  if (state.length === 0 && !state.ended)\n    state.needReadable = true;\n\n  // If we tried to read() past the EOF, then emit end on the next tick.\n  if (nOrig !== n && state.ended && state.length === 0)\n    endReadable(this);\n\n  if (ret !== null)\n    this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync)\n      processNextTick(emitReadable_, stream);\n    else\n      emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    processNextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended &&\n         state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n    else\n      len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function(dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted)\n    processNextTick(endFn);\n  else\n    src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    if (false === ret) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      if (state.pipesCount === 1 &&\n          state.pipes[0] === dest &&\n          src.listenerCount('data') === 1 &&\n          !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0)\n      dest.emit('error', er);\n  }\n  // This is a brutally ugly hack to make sure that our error handler\n  // is attached before any userland ones.  NEVER DO THIS.\n  if (!dest._events || !dest._events.error)\n    dest.on('error', onerror);\n  else if (isArray(dest._events.error))\n    dest._events.error.unshift(onerror);\n  else\n    dest._events.error = [onerror, dest._events.error];\n\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain)\n      state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0)\n    return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes)\n      return this;\n\n    if (!dest)\n      dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest)\n      dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++)\n      dests[i].emit('unpipe', this);\n    return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1)\n    return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1)\n    state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function(ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  // If listening to data, and it has not explicitly been paused,\n  // then call resume to start the flow of data on the next tick.\n  if (ev === 'data' && false !== this._readableState.flowing) {\n    this.resume();\n  }\n\n  if (ev === 'readable' && this.readable) {\n    var state = this._readableState;\n    if (!state.readableListening) {\n      state.readableListening = true;\n      state.emittedReadable = false;\n      state.needReadable = true;\n      if (!state.reading) {\n        processNextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function() {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    processNextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  if (state.flowing) {\n    do {\n      var chunk = stream.read();\n    } while (null !== chunk && state.flowing);\n  }\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function() {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length)\n        self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function(chunk) {\n    debug('wrapped data');\n    if (state.decoder)\n      chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined))\n      return;\n    else if (!state.objectMode && (!chunk || !chunk.length))\n      return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function(method) { return function() {\n        return stream[method].apply(stream, arguments);\n      }; }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function(ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function(n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\nfunction fromList(n, state) {\n  var list = state.buffer;\n  var length = state.length;\n  var stringMode = !!state.decoder;\n  var objectMode = !!state.objectMode;\n  var ret;\n\n  // nothing in the list, definitely empty.\n  if (list.length === 0)\n    return null;\n\n  if (length === 0)\n    ret = null;\n  else if (objectMode)\n    ret = list.shift();\n  else if (!n || n >= length) {\n    // read it all, truncate the array.\n    if (stringMode)\n      ret = list.join('');\n    else if (list.length === 1)\n      ret = list[0];\n    else\n      ret = Buffer.concat(list, length);\n    list.length = 0;\n  } else {\n    // read just some of it.\n    if (n < list[0].length) {\n      // just take a part of the first list item.\n      // slice is the same for buffers and strings.\n      var buf = list[0];\n      ret = buf.slice(0, n);\n      list[0] = buf.slice(n);\n    } else if (n === list[0].length) {\n      // first list is a perfect match\n      ret = list.shift();\n    } else {\n      // complex case.\n      // we have enough to cover it, but it spans past the first buffer.\n      if (stringMode)\n        ret = '';\n      else\n        ret = new Buffer(n);\n\n      var c = 0;\n      for (var i = 0, l = list.length; i < l && c < n; i++) {\n        var buf = list[0];\n        var cpy = Math.min(n - c, buf.length);\n\n        if (stringMode)\n          ret += buf.slice(0, cpy);\n        else\n          buf.copy(ret, c, 0, cpy);\n\n        if (cpy < buf.length)\n          list[0] = buf.slice(cpy);\n        else\n          list.shift();\n\n        c += cpy;\n      }\n    }\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0)\n    throw new Error('endReadable called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    processNextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach (xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf (xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n","// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\n\nfunction TransformState(stream) {\n  this.afterTransform = function(er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb)\n    return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined)\n    stream.push(data);\n\n  if (cb)\n    cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\n\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  this.once('prefinish', function() {\n    if (typeof this._flush === 'function')\n      this._flush(function(er) {\n        done(stream, er);\n      });\n    else\n      done(stream);\n  });\n}\n\nTransform.prototype.push = function(chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function(chunk, encoding, cb) {\n  throw new Error('not implemented');\n};\n\nTransform.prototype._write = function(chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform ||\n        rs.needReadable ||\n        rs.length < rs.highWaterMark)\n      this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function(n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\n\nfunction done(stream, er) {\n  if (er)\n    return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length)\n    throw new Error('calling transform done when ws.length != 0');\n\n  if (ts.transforming)\n    throw new Error('calling transform done when still transforming');\n\n  return stream.push(null);\n}\n","// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/*<replacement>*/\nvar processNextTick = require('process-nextick-args');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar Buffer = require('buffer').Buffer;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n\n\n/*<replacement>*/\nvar Stream;\n(function (){try{\n  Stream = require('st' + 'ream');\n}catch(_){}finally{\n  if (!Stream)\n    Stream = require('events').EventEmitter;\n}}())\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nvar Duplex;\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex)\n    this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function(er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function (){try {\nObject.defineProperty(WritableState.prototype, 'buffer', {\n  get: internalUtil.deprecate(function() {\n    return this.getBuffer();\n  }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' +\n     'instead.')\n});\n}catch(_){}}());\n\n\nvar Duplex;\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex))\n    return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function() {\n  this.emit('error', new Error('Cannot pipe. Not readable.'));\n};\n\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  processNextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n\n  if (!(Buffer.isBuffer(chunk)) &&\n      typeof chunk !== 'string' &&\n      chunk !== null &&\n      chunk !== undefined &&\n      !state.objectMode) {\n    var er = new TypeError('Invalid non-string/buffer chunk');\n    stream.emit('error', er);\n    processNextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function(chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  else if (!encoding)\n    encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function')\n    cb = nop;\n\n  if (state.ended)\n    writeAfterEnd(this, cb);\n  else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function() {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing &&\n        !state.corked &&\n        !state.finished &&\n        !state.bufferProcessing &&\n        state.bufferedRequest)\n      clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64',\n'ucs2', 'ucs-2','utf16le', 'utf-16le', 'raw']\n.indexOf((encoding + '').toLowerCase()) > -1))\n    throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode &&\n      state.decodeStrings !== false &&\n      typeof chunk === 'string') {\n    chunk = new Buffer(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk))\n    encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret)\n    state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev)\n    stream._writev(chunk, state.onwrite);\n  else\n    stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync)\n    processNextTick(cb, er);\n  else\n    cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er)\n    onwriteError(stream, state, sync, er, cb);\n  else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished &&\n        !state.corked &&\n        !state.bufferProcessing &&\n        state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      processNextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished)\n    onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var buffer = [];\n    var cbs = [];\n    while (entry) {\n      cbs.push(entry.callback);\n      buffer.push(entry);\n      entry = entry.next;\n    }\n\n    // count the one we are adding, as well.\n    // TODO(isaacs) clean this up\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    doWrite(stream, state, true, state.length, buffer, '', function(err) {\n      for (var i = 0; i < cbs.length; i++) {\n        state.pendingcb--;\n        cbs[i](err);\n      }\n    });\n\n    // Clear buffer\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null)\n      state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function(chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined)\n    this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished)\n    endWritable(this, state, cb);\n};\n\n\nfunction needFinish(state) {\n  return (state.ending &&\n          state.length === 0 &&\n          state.bufferedRequest === null &&\n          !state.finished &&\n          !state.writing);\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished)\n      processNextTick(cb);\n    else\n      stream.once('finish', cb);\n  }\n  state.ended = true;\n}\n","module.exports = require(\"./lib/_stream_passthrough.js\")\n","var Stream = (function (){\n  try {\n    return require('st' + 'ream'); // hack to fix a circular dependency issue when used with browserify\n  } catch(_){}\n}());\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = Stream || exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require(\"./lib/_stream_transform.js\")\n","module.exports = require(\"./lib/_stream_writable.js\")\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n/** @preserve\n(c) 2012 by Cédric Mesnil. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n// constants table\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]\nvar hr = [0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]\n\nfunction bytesToWords (bytes) {\n  var words = []\n  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {\n    words[b >>> 5] |= bytes[i] << (24 - b % 32)\n  }\n  return words\n}\n\nfunction wordsToBytes (words) {\n  var bytes = []\n  for (var b = 0; b < words.length * 32; b += 8) {\n    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)\n  }\n  return bytes\n}\n\nfunction processBlock (H, M, offset) {\n  // swap endian\n  for (var i = 0; i < 16; i++) {\n    var offset_i = offset + i\n    var M_offset_i = M[offset_i]\n\n    // Swap\n    M[offset_i] = (\n      (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |\n      (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n    )\n  }\n\n  // Working variables\n  var al, bl, cl, dl, el\n  var ar, br, cr, dr, er\n\n  ar = al = H[0]\n  br = bl = H[1]\n  cr = cl = H[2]\n  dr = dl = H[3]\n  er = el = H[4]\n\n  // computation\n  var t\n  for (i = 0; i < 80; i += 1) {\n    t = (al + M[offset + zl[i]]) | 0\n    if (i < 16) {\n      t += f1(bl, cl, dl) + hl[0]\n    } else if (i < 32) {\n      t += f2(bl, cl, dl) + hl[1]\n    } else if (i < 48) {\n      t += f3(bl, cl, dl) + hl[2]\n    } else if (i < 64) {\n      t += f4(bl, cl, dl) + hl[3]\n    } else {// if (i<80) {\n      t += f5(bl, cl, dl) + hl[4]\n    }\n    t = t | 0\n    t = rotl(t, sl[i])\n    t = (t + el) | 0\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = t\n\n    t = (ar + M[offset + zr[i]]) | 0\n    if (i < 16) {\n      t += f5(br, cr, dr) + hr[0]\n    } else if (i < 32) {\n      t += f4(br, cr, dr) + hr[1]\n    } else if (i < 48) {\n      t += f3(br, cr, dr) + hr[2]\n    } else if (i < 64) {\n      t += f2(br, cr, dr) + hr[3]\n    } else {// if (i<80) {\n      t += f1(br, cr, dr) + hr[4]\n    }\n\n    t = t | 0\n    t = rotl(t, sr[i])\n    t = (t + er) | 0\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = t\n  }\n\n  // intermediate hash value\n  t = (H[1] + cl + dr) | 0\n  H[1] = (H[2] + dl + er) | 0\n  H[2] = (H[3] + el + ar) | 0\n  H[3] = (H[4] + al + br) | 0\n  H[4] = (H[0] + bl + cr) | 0\n  H[0] = t\n}\n\nfunction f1 (x, y, z) {\n  return ((x) ^ (y) ^ (z))\n}\n\nfunction f2 (x, y, z) {\n  return (((x) & (y)) | ((~x) & (z)))\n}\n\nfunction f3 (x, y, z) {\n  return (((x) | (~(y))) ^ (z))\n}\n\nfunction f4 (x, y, z) {\n  return (((x) & (z)) | ((y) & (~(z))))\n}\n\nfunction f5 (x, y, z) {\n  return ((x) ^ ((y) | (~(z))))\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction ripemd160 (message) {\n  var H = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]\n\n  if (typeof message === 'string') {\n    message = new Buffer(message, 'utf8')\n  }\n\n  var m = bytesToWords(message)\n\n  var nBitsLeft = message.length * 8\n  var nBitsTotal = message.length * 8\n\n  // Add padding\n  m[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32)\n  m[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n    (((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n    (((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)\n  )\n\n  for (var i = 0; i < m.length; i += 16) {\n    processBlock(H, m, i)\n  }\n\n  // swap endian\n  for (i = 0; i < 5; i++) {\n    // shortcut\n    var H_i = H[i]\n\n    // Swap\n    H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |\n      (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00)\n  }\n\n  var digestbytes = wordsToBytes(H)\n  return new Buffer(digestbytes)\n}\n\nmodule.exports = ripemd160\n","// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = new Buffer(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n  this._s = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = new Buffer(data, enc)\n  }\n\n  var l = this._len += data.length\n  var s = this._s || 0\n  var f = 0\n  var buffer = this._block\n\n  while (s < l) {\n    var t = Math.min(data.length, f + this._blockSize - (s % this._blockSize))\n    var ch = (t - f)\n\n    for (var i = 0; i < ch; i++) {\n      buffer[(s % this._blockSize) + i] = data[i + f]\n    }\n\n    s += ch\n    f += ch\n\n    if ((s % this._blockSize) === 0) {\n      this._update(buffer)\n    }\n  }\n  this._s = s\n\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  // Suppose the length of the message M, in bits, is l\n  var l = this._len * 8\n\n  // Append the bit 1 to the end of the message\n  this._block[this._len % this._blockSize] = 0x80\n\n  // and then k zero bits, where k is the smallest non-negative solution to the equation (l + 1 + k) === finalSize mod blockSize\n  this._block.fill(0, this._len % this._blockSize + 1)\n\n  if (l % (this._blockSize * 8) >= this._finalSize * 8) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  // to this append the block which is equal to the number l written in binary\n  // TODO: handle case where l is > Math.pow(2, 29)\n  this._block.writeInt32BE(l, this._blockSize - 4)\n\n  var hash = this._update(this._block) || this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301 | 0\n  this._b = 0xefcdab89 | 0\n  this._c = 0x98badcfe | 0\n  this._d = 0x10325476 | 0\n  this._e = 0xc3d2e1f0 | 0\n\n  return this\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol (num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt))\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n  var e = this._e\n\n  var j = 0\n  var k\n\n  /*\n   * SHA-1 has a bitwise rotate left operation. But, SHA is not\n   * function calcW() { return rol(W[j - 3] ^ W[j -  8] ^ W[j - 14] ^ W[j - 16], 1) }\n   */\n  function calcW () { return W[j - 3] ^ W[j - 8] ^ W[j - 14] ^ W[j - 16] }\n  function loop (w, f) {\n    W[j] = w\n\n    var t = rol(a, 5) + f + e + w + k\n\n    e = d\n    d = c\n    c = rol(b, 30)\n    b = a\n    a = t\n    j++\n  }\n\n  k = 1518500249\n  while (j < 16) loop(M.readInt32BE(j * 4), (b & c) | ((~b) & d))\n  while (j < 20) loop(calcW(), (b & c) | ((~b) & d))\n  k = 1859775393\n  while (j < 40) loop(calcW(), b ^ c ^ d)\n  k = -1894007588\n  while (j < 60) loop(calcW(), (b & c) | (b & d) | (c & d))\n  k = -899497514\n  while (j < 80) loop(calcW(), b ^ c ^ d)\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = new Buffer(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301 | 0\n  this._b = 0xefcdab89 | 0\n  this._c = 0x98badcfe | 0\n  this._d = 0x10325476 | 0\n  this._e = 0xc3d2e1f0 | 0\n\n  return this\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol (num, cnt) {\n  return (num << cnt) | (num >>> (32 - cnt))\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n  var e = this._e\n\n  var j = 0\n  var k\n\n  function calcW () { return rol(W[j - 3] ^ W[j - 8] ^ W[j - 14] ^ W[j - 16], 1) }\n  function loop (w, f) {\n    W[j] = w\n\n    var t = rol(a, 5) + f + e + w + k\n\n    e = d\n    d = c\n    c = rol(b, 30)\n    b = a\n    a = t\n    j++\n  }\n\n  k = 1518500249\n  while (j < 16) loop(M.readInt32BE(j * 4), (b & c) | ((~b) & d))\n  while (j < 20) loop(calcW(), (b & c) | ((~b) & d))\n  k = 1859775393\n  while (j < 40) loop(calcW(), b ^ c ^ d)\n  k = -1894007588\n  while (j < 60) loop(calcW(), (b & c) | (b & d) | (c & d))\n  k = -899497514\n  while (j < 80) loop(calcW(), b ^ c ^ d)\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = new Buffer(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8 | 0\n  this._b = 0x367cd507 | 0\n  this._c = 0x3070dd17 | 0\n  this._d = 0xf70e5939 | 0\n  this._e = 0xffc00b31 | 0\n  this._f = 0x68581511 | 0\n  this._g = 0x64f98fa7 | 0\n  this._h = 0xbefa4fa4 | 0\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = new Buffer(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667 | 0\n  this._b = 0xbb67ae85 | 0\n  this._c = 0x3c6ef372 | 0\n  this._d = 0xa54ff53a | 0\n  this._e = 0x510e527f | 0\n  this._f = 0x9b05688c | 0\n  this._g = 0x1f83d9ab | 0\n  this._h = 0x5be0cd19 | 0\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction Maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction Sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction Sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction Gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction Gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  var j = 0\n\n  function calcW () { return Gamma1(W[j - 2]) + W[j - 7] + Gamma0(W[j - 15]) + W[j - 16] }\n  function loop (w) {\n    W[j] = w\n\n    var T1 = h + Sigma1(e) + Ch(e, f, g) + K[j] + w\n    var T2 = Sigma0(a) + Maj(a, b, c)\n\n    h = g\n    g = f\n    f = e\n    e = d + T1\n    d = c\n    c = b\n    b = a\n    a = T1 + T2\n\n    j++\n  }\n\n  while (j < 16) loop(M.readInt32BE(j * 4))\n  while (j < 64) loop(calcW())\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = new Buffer(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._a = 0xcbbb9d5d | 0\n  this._b = 0x629a292a | 0\n  this._c = 0x9159015a | 0\n  this._d = 0x152fecd8 | 0\n  this._e = 0x67332667 | 0\n  this._f = 0x8eb44a87 | 0\n  this._g = 0xdb0c2e0d | 0\n  this._h = 0x47b5481d | 0\n\n  this._al = 0xc1059ed8 | 0\n  this._bl = 0x367cd507 | 0\n  this._cl = 0x3070dd17 | 0\n  this._dl = 0xf70e5939 | 0\n  this._el = 0xffc00b31 | 0\n  this._fl = 0x68581511 | 0\n  this._gl = 0x64f98fa7 | 0\n  this._hl = 0xbefa4fa4 | 0\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = new Buffer(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._a, this._al, 0)\n  writeInt64BE(this._b, this._bl, 8)\n  writeInt64BE(this._c, this._cl, 16)\n  writeInt64BE(this._d, this._dl, 24)\n  writeInt64BE(this._e, this._el, 32)\n  writeInt64BE(this._f, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._a = 0x6a09e667 | 0\n  this._b = 0xbb67ae85 | 0\n  this._c = 0x3c6ef372 | 0\n  this._d = 0xa54ff53a | 0\n  this._e = 0x510e527f | 0\n  this._f = 0x9b05688c | 0\n  this._g = 0x1f83d9ab | 0\n  this._h = 0x5be0cd19 | 0\n\n  this._al = 0xf3bcc908 | 0\n  this._bl = 0x84caa73b | 0\n  this._cl = 0xfe94f82b | 0\n  this._dl = 0x5f1d36f1 | 0\n  this._el = 0xade682d1 | 0\n  this._fl = 0x2b3e6c1f | 0\n  this._gl = 0xfb41bd6b | 0\n  this._hl = 0x137e2179 | 0\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction Maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction Sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction Sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  var i = 0\n  var j = 0\n  var Wi, Wil\n  function calcW () {\n    var x = W[j - 15 * 2]\n    var xl = W[j - 15 * 2 + 1]\n    var gamma0 = Gamma0(x, xl)\n    var gamma0l = Gamma0l(xl, x)\n\n    x = W[j - 2 * 2]\n    xl = W[j - 2 * 2 + 1]\n    var gamma1 = Gamma1(x, xl)\n    var gamma1l = Gamma1l(xl, x)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7 = W[j - 7 * 2]\n    var Wi7l = W[j - 7 * 2 + 1]\n\n    var Wi16 = W[j - 16 * 2]\n    var Wi16l = W[j - 16 * 2 + 1]\n\n    Wil = gamma0l + Wi7l\n    Wi = gamma0 + Wi7 + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0)\n    Wil = Wil + gamma1l\n    Wi = Wi + gamma1 + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0)\n    Wil = Wil + Wi16l\n    Wi = Wi + Wi16 + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0)\n  }\n\n  function loop () {\n    W[j] = Wi\n    W[j + 1] = Wil\n\n    var maj = Maj(a, b, c)\n    var majl = Maj(al, bl, cl)\n\n    var sigma0h = Sigma0(a, al)\n    var sigma0l = Sigma0(al, a)\n    var sigma1h = Sigma1(e, el)\n    var sigma1l = Sigma1(el, e)\n\n    // t1 = h + sigma1 + ch + K[i] + W[i]\n    var Ki = K[j]\n    var Kil = K[j + 1]\n\n    var ch = Ch(e, f, g)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = hl + sigma1l\n    var t1 = h + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0)\n    t1l = t1l + chl\n    t1 = t1 + ch + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0)\n    t1l = t1l + Kil\n    t1 = t1 + Ki + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0)\n    t1l = t1l + Wil\n    t1 = t1 + Wi + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0)\n\n    // t2 = sigma0 + maj\n    var t2l = sigma0l + majl\n    var t2 = sigma0h + maj + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0)\n\n    h = g\n    hl = gl\n    g = f\n    gl = fl\n    f = e\n    fl = el\n    el = (dl + t1l) | 0\n    e = (d + t1 + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0\n    d = c\n    dl = cl\n    c = b\n    cl = bl\n    b = a\n    bl = al\n    al = (t1l + t2l) | 0\n    a = (t1 + t2 + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0\n\n    i++\n    j += 2\n  }\n\n  while (i < 16) {\n    Wi = M.readInt32BE(j * 4)\n    Wil = M.readInt32BE(j * 4 + 4)\n\n    loop()\n  }\n\n  while (i < 80) {\n    calcW()\n    loop()\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._a = (this._a + a + ((this._al >>> 0) < (al >>> 0) ? 1 : 0)) | 0\n  this._b = (this._b + b + ((this._bl >>> 0) < (bl >>> 0) ? 1 : 0)) | 0\n  this._c = (this._c + c + ((this._cl >>> 0) < (cl >>> 0) ? 1 : 0)) | 0\n  this._d = (this._d + d + ((this._dl >>> 0) < (dl >>> 0) ? 1 : 0)) | 0\n  this._e = (this._e + e + ((this._el >>> 0) < (el >>> 0) ? 1 : 0)) | 0\n  this._f = (this._f + f + ((this._fl >>> 0) < (fl >>> 0) ? 1 : 0)) | 0\n  this._g = (this._g + g + ((this._gl >>> 0) < (gl >>> 0) ? 1 : 0)) | 0\n  this._h = (this._h + h + ((this._hl >>> 0) < (hl >>> 0) ? 1 : 0)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = new Buffer(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._a, this._al, 0)\n  writeInt64BE(this._b, this._bl, 8)\n  writeInt64BE(this._c, this._cl, 16)\n  writeInt64BE(this._d, this._dl, 24)\n  writeInt64BE(this._e, this._el, 32)\n  writeInt64BE(this._f, this._fl, 40)\n  writeInt64BE(this._g, this._gl, 48)\n  writeInt64BE(this._h, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var ClientRequest = require('./lib/request')\nvar extend = require('xtend')\nvar statusCodes = require('builtin-status-codes')\nvar url = require('url')\n\nvar http = exports\n\nhttp.request = function (opts, cb) {\n\tif (typeof opts === 'string')\n\t\topts = url.parse(opts)\n\telse\n\t\topts = extend(opts)\n\n\tvar protocol = opts.protocol || ''\n\tvar host = opts.hostname || opts.host\n\tvar port = opts.port\n\tvar path = opts.path || '/'\n\n\t// Necessary for IPv6 addresses\n\tif (host && host.indexOf(':') !== -1)\n\t\thost = '[' + host + ']'\n\n\t// This may be a relative url. The browser should always be able to interpret it correctly.\n\topts.url = (host ? (protocol + '//' + host) : '') + (port ? ':' + port : '') + path\n\topts.method = (opts.method || 'GET').toUpperCase()\n\topts.headers = opts.headers || {}\n\n\t// Also valid opts.auth, opts.mode\n\n\tvar req = new ClientRequest(opts)\n\tif (cb)\n\t\treq.on('response', cb)\n\treturn req\n}\n\nhttp.get = function get (opts, cb) {\n\tvar req = http.request(opts, cb)\n\treq.end()\n\treturn req\n}\n\nhttp.Agent = function () {}\nhttp.Agent.defaultMaxSockets = 4\n\nhttp.STATUS_CODES = statusCodes\n\nhttp.METHODS = [\n\t'CHECKOUT',\n\t'CONNECT',\n\t'COPY',\n\t'DELETE',\n\t'GET',\n\t'HEAD',\n\t'LOCK',\n\t'M-SEARCH',\n\t'MERGE',\n\t'MKACTIVITY',\n\t'MKCOL',\n\t'MOVE',\n\t'NOTIFY',\n\t'OPTIONS',\n\t'PATCH',\n\t'POST',\n\t'PROPFIND',\n\t'PROPPATCH',\n\t'PURGE',\n\t'PUT',\n\t'REPORT',\n\t'SEARCH',\n\t'SUBSCRIBE',\n\t'TRACE',\n\t'UNLOCK',\n\t'UNSUBSCRIBE'\n]","exports.fetch = isFunction(global.fetch) && isFunction(global.ReadableByteStream)\n\nexports.blobConstructor = false\ntry {\n\tnew Blob([new ArrayBuffer(1)])\n\texports.blobConstructor = true\n} catch (e) {}\n\nvar xhr = new global.XMLHttpRequest()\n// If location.host is empty, e.g. if this page/worker was loaded\n// from a Blob, then use example.com to avoid an error\nxhr.open('GET', global.location.host ? '/' : 'https://example.com')\n\nfunction checkTypeSupport (type) {\n\ttry {\n\t\txhr.responseType = type\n\t\treturn xhr.responseType === type\n\t} catch (e) {}\n\treturn false\n}\n\n// For some strange reason, Safari 7.0 reports typeof global.ArrayBuffer === 'object'.\n// Safari 7.1 appears to have fixed this bug.\nvar haveArrayBuffer = typeof global.ArrayBuffer !== 'undefined'\nvar haveSlice = haveArrayBuffer && isFunction(global.ArrayBuffer.prototype.slice)\n\nexports.arraybuffer = haveArrayBuffer && checkTypeSupport('arraybuffer')\n// These next two tests unavoidably show warnings in Chrome. Since fetch will always\n// be used if it's available, just return false for these to avoid the warnings.\nexports.msstream = !exports.fetch && haveSlice && checkTypeSupport('ms-stream')\nexports.mozchunkedarraybuffer = !exports.fetch && haveArrayBuffer &&\n\tcheckTypeSupport('moz-chunked-arraybuffer')\nexports.overrideMimeType = isFunction(xhr.overrideMimeType)\nexports.vbArray = isFunction(global.VBArray)\n\nfunction isFunction (value) {\n  return typeof value === 'function'\n}\n\nxhr = null // Help gc\n","// var Base64 = require('Base64')\nvar capability = require('./capability')\nvar inherits = require('inherits')\nvar response = require('./response')\nvar stream = require('stream')\n\nvar IncomingMessage = response.IncomingMessage\nvar rStates = response.readyStates\n\nfunction decideMode (preferBinary) {\n\tif (capability.fetch) {\n\t\treturn 'fetch'\n\t} else if (capability.mozchunkedarraybuffer) {\n\t\treturn 'moz-chunked-arraybuffer'\n\t} else if (capability.msstream) {\n\t\treturn 'ms-stream'\n\t} else if (capability.arraybuffer && preferBinary) {\n\t\treturn 'arraybuffer'\n\t} else if (capability.vbArray && preferBinary) {\n\t\treturn 'text:vbarray'\n\t} else {\n\t\treturn 'text'\n\t}\n}\n\nvar ClientRequest = module.exports = function (opts) {\n\tvar self = this\n\tstream.Writable.call(self)\n\n\tself._opts = opts\n\tself._body = []\n\tself._headers = {}\n\tif (opts.auth)\n\t\tself.setHeader('Authorization', 'Basic ' + new Buffer(opts.auth).toString('base64'))\n\tObject.keys(opts.headers).forEach(function (name) {\n\t\tself.setHeader(name, opts.headers[name])\n\t})\n\n\tvar preferBinary\n\tif (opts.mode === 'prefer-streaming') {\n\t\t// If streaming is a high priority but binary compatibility and\n\t\t// the accuracy of the 'content-type' header aren't\n\t\tpreferBinary = false\n\t} else if (opts.mode === 'allow-wrong-content-type') {\n\t\t// If streaming is more important than preserving the 'content-type' header\n\t\tpreferBinary = !capability.overrideMimeType\n\t} else if (!opts.mode || opts.mode === 'default' || opts.mode === 'prefer-fast') {\n\t\t// Use binary if text streaming may corrupt data or the content-type header, or for speed\n\t\tpreferBinary = true\n\t} else {\n\t\tthrow new Error('Invalid value for opts.mode')\n\t}\n\tself._mode = decideMode(preferBinary)\n\n\tself.on('finish', function () {\n\t\tself._onFinish()\n\t})\n}\n\ninherits(ClientRequest, stream.Writable)\n\nClientRequest.prototype.setHeader = function (name, value) {\n\tvar self = this\n\tvar lowerName = name.toLowerCase()\n\t// This check is not necessary, but it prevents warnings from browsers about setting unsafe\n\t// headers. To be honest I'm not entirely sure hiding these warnings is a good thing, but\n\t// http-browserify did it, so I will too.\n\tif (unsafeHeaders.indexOf(lowerName) !== -1)\n\t\treturn\n\n\tself._headers[lowerName] = {\n\t\tname: name,\n\t\tvalue: value\n\t}\n}\n\nClientRequest.prototype.getHeader = function (name) {\n\tvar self = this\n\treturn self._headers[name.toLowerCase()].value\n}\n\nClientRequest.prototype.removeHeader = function (name) {\n\tvar self = this\n\tdelete self._headers[name.toLowerCase()]\n}\n\nClientRequest.prototype._onFinish = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\tvar opts = self._opts\n\n\tvar headersObj = self._headers\n\tvar body\n\tif (opts.method === 'POST' || opts.method === 'PUT' || opts.method === 'PATCH') {\n\t\tif (capability.blobConstructor) {\n\t\t\tbody = new global.Blob(self._body.map(function (buffer) {\n\t\t\t\treturn buffer.toArrayBuffer()\n\t\t\t}), {\n\t\t\t\ttype: (headersObj['content-type'] || {}).value || ''\n\t\t\t})\n\t\t} else {\n\t\t\t// get utf8 string\n\t\t\tbody = Buffer.concat(self._body).toString()\n\t\t}\n\t}\n\n\tif (self._mode === 'fetch') {\n\t\tvar headers = Object.keys(headersObj).map(function (name) {\n\t\t\treturn [headersObj[name].name, headersObj[name].value]\n\t\t})\n\n\t\tglobal.fetch(self._opts.url, {\n\t\t\tmethod: self._opts.method,\n\t\t\theaders: headers,\n\t\t\tbody: body,\n\t\t\tmode: 'cors',\n\t\t\tcredentials: opts.withCredentials ? 'include' : 'same-origin'\n\t\t}).then(function (response) {\n\t\t\tself._fetchResponse = response\n\t\t\tself._connect()\n\t\t}, function (reason) {\n\t\t\tself.emit('error', reason)\n\t\t})\n\t} else {\n\t\tvar xhr = self._xhr = new global.XMLHttpRequest()\n\t\ttry {\n\t\t\txhr.open(self._opts.method, self._opts.url, true)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\t// Can't set responseType on really old browsers\n\t\tif ('responseType' in xhr)\n\t\t\txhr.responseType = self._mode.split(':')[0]\n\n\t\tif ('withCredentials' in xhr)\n\t\t\txhr.withCredentials = !!opts.withCredentials\n\n\t\tif (self._mode === 'text' && 'overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain; charset=x-user-defined')\n\n\t\tObject.keys(headersObj).forEach(function (name) {\n\t\t\txhr.setRequestHeader(headersObj[name].name, headersObj[name].value)\n\t\t})\n\n\t\tself._response = null\n\t\txhr.onreadystatechange = function () {\n\t\t\tswitch (xhr.readyState) {\n\t\t\t\tcase rStates.LOADING:\n\t\t\t\tcase rStates.DONE:\n\t\t\t\t\tself._onXHRProgress()\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// Necessary for streaming in Firefox, since xhr.response is ONLY defined\n\t\t// in onprogress, not in onreadystatechange with xhr.readyState = 3\n\t\tif (self._mode === 'moz-chunked-arraybuffer') {\n\t\t\txhr.onprogress = function () {\n\t\t\t\tself._onXHRProgress()\n\t\t\t}\n\t\t}\n\n\t\txhr.onerror = function () {\n\t\t\tif (self._destroyed)\n\t\t\t\treturn\n\t\t\tself.emit('error', new Error('XHR error'))\n\t\t}\n\n\t\ttry {\n\t\t\txhr.send(body)\n\t\t} catch (err) {\n\t\t\tprocess.nextTick(function () {\n\t\t\t\tself.emit('error', err)\n\t\t\t})\n\t\t\treturn\n\t\t}\n\t}\n}\n\n/**\n * Checks if xhr.status is readable and non-zero, indicating no error.\n * Even though the spec says it should be available in readyState 3,\n * accessing it throws an exception in IE8\n */\nfunction statusValid (xhr) {\n\ttry {\n\t\tvar status = xhr.status\n\t\treturn (status !== null && status !== 0)\n\t} catch (e) {\n\t\treturn false\n\t}\n}\n\nClientRequest.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tif (!statusValid(self._xhr) || self._destroyed)\n\t\treturn\n\n\tif (!self._response)\n\t\tself._connect()\n\n\tself._response._onXHRProgress()\n}\n\nClientRequest.prototype._connect = function () {\n\tvar self = this\n\n\tif (self._destroyed)\n\t\treturn\n\n\tself._response = new IncomingMessage(self._xhr, self._fetchResponse, self._mode)\n\tself.emit('response', self._response)\n}\n\nClientRequest.prototype._write = function (chunk, encoding, cb) {\n\tvar self = this\n\n\tself._body.push(chunk)\n\tcb()\n}\n\nClientRequest.prototype.abort = ClientRequest.prototype.destroy = function () {\n\tvar self = this\n\tself._destroyed = true\n\tif (self._response)\n\t\tself._response._destroyed = true\n\tif (self._xhr)\n\t\tself._xhr.abort()\n\t// Currently, there isn't a way to truly abort a fetch.\n\t// If you like bikeshedding, see https://github.com/whatwg/fetch/issues/27\n}\n\nClientRequest.prototype.end = function (data, encoding, cb) {\n\tvar self = this\n\tif (typeof data === 'function') {\n\t\tcb = data\n\t\tdata = undefined\n\t}\n\n\tstream.Writable.prototype.end.call(self, data, encoding, cb)\n}\n\nClientRequest.prototype.flushHeaders = function () {}\nClientRequest.prototype.setTimeout = function () {}\nClientRequest.prototype.setNoDelay = function () {}\nClientRequest.prototype.setSocketKeepAlive = function () {}\n\n// Taken from http://www.w3.org/TR/XMLHttpRequest/#the-setrequestheader%28%29-method\nvar unsafeHeaders = [\n\t'accept-charset',\n\t'accept-encoding',\n\t'access-control-request-headers',\n\t'access-control-request-method',\n\t'connection',\n\t'content-length',\n\t'cookie',\n\t'cookie2',\n\t'date',\n\t'dnt',\n\t'expect',\n\t'host',\n\t'keep-alive',\n\t'origin',\n\t'referer',\n\t'te',\n\t'trailer',\n\t'transfer-encoding',\n\t'upgrade',\n\t'user-agent',\n\t'via'\n]\n","var capability = require('./capability')\nvar inherits = require('inherits')\nvar stream = require('stream')\n\nvar rStates = exports.readyStates = {\n\tUNSENT: 0,\n\tOPENED: 1,\n\tHEADERS_RECEIVED: 2,\n\tLOADING: 3,\n\tDONE: 4\n}\n\nvar IncomingMessage = exports.IncomingMessage = function (xhr, response, mode) {\n\tvar self = this\n\tstream.Readable.call(self)\n\n\tself._mode = mode\n\tself.headers = {}\n\tself.rawHeaders = []\n\tself.trailers = {}\n\tself.rawTrailers = []\n\n\t// Fake the 'close' event, but only once 'end' fires\n\tself.on('end', function () {\n\t\t// The nextTick is necessary to prevent the 'request' module from causing an infinite loop\n\t\tprocess.nextTick(function () {\n\t\t\tself.emit('close')\n\t\t})\n\t})\n\n\tif (mode === 'fetch') {\n\t\tself._fetchResponse = response\n\n\t\tself.statusCode = response.status\n\t\tself.statusMessage = response.statusText\n\t\t// backwards compatible version of for (<item> of <iterable>):\n\t\t// for (var <item>,_i,_it = <iterable>[Symbol.iterator](); <item> = (_i = _it.next()).value,!_i.done;)\n\t\tfor (var header, _i, _it = response.headers[Symbol.iterator](); header = (_i = _it.next()).value, !_i.done;) {\n\t\t\tself.headers[header[0].toLowerCase()] = header[1]\n\t\t\tself.rawHeaders.push(header[0], header[1])\n\t\t}\n\n\t\t// TODO: this doesn't respect backpressure. Once WritableStream is available, this can be fixed\n\t\tvar reader = response.body.getReader()\n\t\tfunction read () {\n\t\t\treader.read().then(function (result) {\n\t\t\t\tif (self._destroyed)\n\t\t\t\t\treturn\n\t\t\t\tif (result.done) {\n\t\t\t\t\tself.push(null)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tself.push(new Buffer(result.value))\n\t\t\t\tread()\n\t\t\t})\n\t\t}\n\t\tread()\n\n\t} else {\n\t\tself._xhr = xhr\n\t\tself._pos = 0\n\n\t\tself.statusCode = xhr.status\n\t\tself.statusMessage = xhr.statusText\n\t\tvar headers = xhr.getAllResponseHeaders().split(/\\r?\\n/)\n\t\theaders.forEach(function (header) {\n\t\t\tvar matches = header.match(/^([^:]+):\\s*(.*)/)\n\t\t\tif (matches) {\n\t\t\t\tvar key = matches[1].toLowerCase()\n\t\t\t\tif (self.headers[key] !== undefined)\n\t\t\t\t\tself.headers[key] += ', ' + matches[2]\n\t\t\t\telse\n\t\t\t\t\tself.headers[key] = matches[2]\n\t\t\t\tself.rawHeaders.push(matches[1], matches[2])\n\t\t\t}\n\t\t})\n\n\t\tself._charset = 'x-user-defined'\n\t\tif (!capability.overrideMimeType) {\n\t\t\tvar mimeType = self.rawHeaders['mime-type']\n\t\t\tif (mimeType) {\n\t\t\t\tvar charsetMatch = mimeType.match(/;\\s*charset=([^;])(;|$)/)\n\t\t\t\tif (charsetMatch) {\n\t\t\t\t\tself._charset = charsetMatch[1].toLowerCase()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!self._charset)\n\t\t\t\tself._charset = 'utf-8' // best guess\n\t\t}\n\t}\n}\n\ninherits(IncomingMessage, stream.Readable)\n\nIncomingMessage.prototype._read = function () {}\n\nIncomingMessage.prototype._onXHRProgress = function () {\n\tvar self = this\n\n\tvar xhr = self._xhr\n\n\tvar response = null\n\tswitch (self._mode) {\n\t\tcase 'text:vbarray': // For IE9\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\ttry {\n\t\t\t\t// This fails in IE8\n\t\t\t\tresponse = new global.VBArray(xhr.responseBody).toArray()\n\t\t\t} catch (e) {}\n\t\t\tif (response !== null) {\n\t\t\t\tself.push(new Buffer(response))\n\t\t\t\tbreak\n\t\t\t}\n\t\t\t// Falls through in IE8\t\n\t\tcase 'text':\n\t\t\ttry { // This will fail when readyState = 3 in IE9. Switch mode and wait for readyState = 4\n\t\t\t\tresponse = xhr.responseText\n\t\t\t} catch (e) {\n\t\t\t\tself._mode = 'text:vbarray'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tif (response.length > self._pos) {\n\t\t\t\tvar newData = response.substr(self._pos)\n\t\t\t\tif (self._charset === 'x-user-defined') {\n\t\t\t\t\tvar buffer = new Buffer(newData.length)\n\t\t\t\t\tfor (var i = 0; i < newData.length; i++)\n\t\t\t\t\t\tbuffer[i] = newData.charCodeAt(i) & 0xff\n\n\t\t\t\t\tself.push(buffer)\n\t\t\t\t} else {\n\t\t\t\t\tself.push(newData, self._charset)\n\t\t\t\t}\n\t\t\t\tself._pos = response.length\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'arraybuffer':\n\t\t\tif (xhr.readyState !== rStates.DONE)\n\t\t\t\tbreak\n\t\t\tresponse = xhr.response\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'moz-chunked-arraybuffer': // take whole\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING || !response)\n\t\t\t\tbreak\n\t\t\tself.push(new Buffer(new Uint8Array(response)))\n\t\t\tbreak\n\t\tcase 'ms-stream':\n\t\t\tresponse = xhr.response\n\t\t\tif (xhr.readyState !== rStates.LOADING)\n\t\t\t\tbreak\n\t\t\tvar reader = new global.MSStreamReader()\n\t\t\treader.onprogress = function () {\n\t\t\t\tif (reader.result.byteLength > self._pos) {\n\t\t\t\t\tself.push(new Buffer(new Uint8Array(reader.result.slice(self._pos))))\n\t\t\t\t\tself._pos = reader.result.byteLength\n\t\t\t\t}\n\t\t\t}\n\t\t\treader.onload = function () {\n\t\t\t\tself.push(null)\n\t\t\t}\n\t\t\t// reader.onerror = ??? // TODO: this\n\t\t\treader.readAsArrayBuffer(response)\n\t\t\tbreak\n\t}\n\n\t// The ms-stream case handles end separately in reader.onload()\n\tif (self._xhr.readyState === rStates.DONE && self._mode !== 'ms-stream') {\n\t\tself.push(null)\n\t}\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar Buffer = require('buffer').Buffer;\n\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nvar StringDecoder = exports.StringDecoder = function(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","var indexOf = require('indexof');\n\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    forEach(Object_keys(ctx), function (key) {\n        context[key] = ctx[key];\n    });\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],"sourceRoot":"/source/"}